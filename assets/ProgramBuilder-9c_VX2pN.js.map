{"version":3,"file":"ProgramBuilder-9c_VX2pN.js","sources":["../../node_modules/@heroicons/react/outline/esm/BookmarkIcon.js","../../node_modules/@heroicons/react/outline/esm/PencilIcon.js","../../node_modules/@heroicons/react/outline/esm/PlusIcon.js","../../node_modules/@heroicons/react/outline/esm/TrashIcon.js","../../node_modules/@heroicons/react/outline/esm/XIcon.js","../../src/features/programs/ExerciseDatabasePicker.tsx","../../src/features/programs/SessionBuilder.tsx","../../src/features/programs/ProgramBuilder.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction BookmarkIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(BookmarkIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction PencilIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction PlusIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4v16m8-8H4\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction TrashIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction XIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 18L18 6M6 6l12 12\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(XIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\r\nimport { allExercises } from '@/data/exercises';\r\nimport { importedExercises } from '@/data/importedExercises';\r\nimport { Exercise, MuscleGroup } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\nimport { DifficultyCategory } from '@/types/difficulty';\r\nimport { toast } from 'react-hot-toast';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { db } from '@/services/firebase/config';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { SearchIcon, XIcon } from '@heroicons/react/outline';\r\n\r\ninterface ExerciseDatabasePickerProps {\r\n  onClose: () => void;\r\n  onSelectExercises: (exercises: Array<{ exercise: Exercise; sets: ExerciseSet[] }>) => void;\r\n}\r\n\r\nconst normalizeMuscle = (muscle: string): MuscleGroup => {\r\n  const muscleMap: Record<string, MuscleGroup> = {\r\n    'chest': 'chest',\r\n    'pectorals': 'chest',\r\n    'back': 'back',\r\n    'lats': 'lats',\r\n    'traps': 'traps',\r\n    'shoulders': 'shoulders',\r\n    'deltoids': 'shoulders',\r\n    'biceps': 'biceps',\r\n    'triceps': 'triceps',\r\n    'forearms': 'forearms',\r\n    'legs': 'quadriceps',\r\n    'quadriceps': 'quadriceps',\r\n    'hamstrings': 'hamstrings',\r\n    'calves': 'calves',\r\n    'glutes': 'glutes',\r\n    'core': 'core',\r\n    'abs': 'core',\r\n    'abdominals': 'core',\r\n    'lower back': 'lower_back',\r\n    'full body': 'full_body'\r\n  };\r\n\r\n  const normalized = muscleMap[muscle.toLowerCase()];\r\n  return normalized || 'full_body';\r\n};\r\n\r\nconst ExerciseDatabasePicker: React.FC<ExerciseDatabasePickerProps> = ({\r\n  onClose,\r\n  onSelectExercises\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [customExercises, setCustomExercises] = useState<Exercise[]>([]);\r\n  const [combinedExercises, setCombinedExercises] = useState<Exercise[]>([]);\r\n  const [selectedExercises, setSelectedExercises] = useState<Set<string>>(new Set());\r\n\r\n  const categories = [\r\n    { id: '', name: 'All', icon: '💪' },\r\n    { id: 'chest', name: 'Chest', icon: '🫀' },\r\n    { id: 'back', name: 'Back', icon: '🔙' },\r\n    { id: 'legs', name: 'Legs', icon: '🦵' },\r\n    { id: 'shoulders', name: 'Shoulders', icon: '💪' },\r\n    { id: 'arms', name: 'Arms', icon: '💪' },\r\n    { id: 'core', name: 'Core', icon: '🎯' },\r\n  ];\r\n\r\n  // Load custom exercises from Firebase\r\n  useEffect(() => {\r\n    const loadCustomExercises = async () => {\r\n      if (!user) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        const exercisesRef = collection(db, 'exercises');\r\n        const q = query(exercisesRef, where('userId', '==', user.id));\r\n        const querySnapshot = await getDocs(q);\r\n        \r\n        const exercises: Exercise[] = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          exercises.push({\r\n            ...data,\r\n            id: doc.id,\r\n            primaryMuscles: data.primaryMuscles.map(normalizeMuscle),\r\n            type: data.type as Exercise['type'],\r\n            category: data.category as Exercise['category'],\r\n            defaultUnit: data.defaultUnit as Exercise['defaultUnit']\r\n          } as Exercise);\r\n        });\r\n        \r\n        setCustomExercises(exercises);\r\n      } catch (error) {\r\n        console.error('Error loading custom exercises:', error);\r\n        toast.error('Failed to load custom exercises');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadCustomExercises();\r\n  }, [user]);\r\n\r\n  // Combine exercises whenever custom exercises change\r\n  useEffect(() => {\r\n    const normalizedExercises: Exercise[] = [\r\n      ...allExercises.map(ex => ({\r\n        ...ex,\r\n        id: `default-${ex.name.replace(/\\s+/g, '-').toLowerCase()}`,\r\n        primaryMuscles: (ex.primaryMuscles || []).map(normalizeMuscle),\r\n        secondaryMuscles: [],\r\n        customExercise: false\r\n      })),\r\n      ...importedExercises.map(ex => ({\r\n        ...ex,\r\n        id: ex.id || `imported-${ex.name.replace(/\\s+/g, '-').toLowerCase()}`,\r\n        primaryMuscles: Array.isArray(ex.primaryMuscles) \r\n          ? ex.primaryMuscles.map(normalizeMuscle)\r\n          : [normalizeMuscle(String(ex.primaryMuscles))],\r\n        secondaryMuscles: [],\r\n        instructions: [ex.description || ''],\r\n        defaultUnit: (ex.type === 'cardio' ? 'time' : 'kg') as Exercise['defaultUnit'],\r\n        metrics: {\r\n          trackWeight: ex.type !== 'cardio',\r\n          trackReps: ex.type !== 'cardio',\r\n          trackTime: ex.type === 'cardio',\r\n          trackDistance: false,\r\n          trackRPE: true,\r\n        },\r\n        customExercise: false\r\n      }))\r\n    ];\r\n\r\n    setCombinedExercises([...normalizedExercises, ...customExercises]);\r\n  }, [customExercises]);\r\n\r\n  // Filter exercises based on search term and category\r\n  const filteredExercises = combinedExercises.filter(exercise => {\r\n    const primaryMuscles = exercise.primaryMuscles || [];\r\n    const matchesSearch = searchTerm === '' || \r\n      exercise.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      primaryMuscles.some(m => \r\n        m.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n\r\n    if (!selectedCategory) return matchesSearch;\r\n\r\n    switch (selectedCategory) {\r\n      case 'chest':\r\n        return matchesSearch && primaryMuscles.includes('chest');\r\n      case 'back':\r\n        return matchesSearch && primaryMuscles.some(m => ['back', 'lats', 'traps'].includes(m));\r\n      case 'legs':\r\n        return matchesSearch && primaryMuscles.some(m => ['quadriceps', 'hamstrings', 'calves', 'glutes'].includes(m));\r\n      case 'shoulders':\r\n        return matchesSearch && primaryMuscles.includes('shoulders');\r\n      case 'arms':\r\n        return matchesSearch && primaryMuscles.some(m => ['biceps', 'triceps', 'forearms'].includes(m));\r\n      case 'core':\r\n        return matchesSearch && primaryMuscles.includes('core');\r\n      default:\r\n        return matchesSearch;\r\n    }\r\n  });\r\n\r\n  const handleExerciseToggle = (exercise: Exercise) => {\r\n    const newSelected = new Set(selectedExercises);\r\n    if (newSelected.has(exercise.id)) {\r\n      newSelected.delete(exercise.id);\r\n    } else {\r\n      newSelected.add(exercise.id);\r\n    }\r\n    setSelectedExercises(newSelected);\r\n  };\r\n\r\n  const handleAddSelected = () => {\r\n    const exercisesToAdd = filteredExercises.filter(ex => selectedExercises.has(ex.id));\r\n    const exercisesWithSets = exercisesToAdd.map(exercise => ({\r\n      exercise,\r\n      sets: [\r\n        { reps: 8, weight: 0, difficulty: DifficultyCategory.NORMAL },\r\n        { reps: 8, weight: 0, difficulty: DifficultyCategory.NORMAL },\r\n        { reps: 8, weight: 0, difficulty: DifficultyCategory.NORMAL }\r\n      ] as ExerciseSet[]\r\n    }));\r\n    \r\n    onSelectExercises(exercisesWithSets);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 z-50\">\r\n      <div className=\"bg-[#23272F] rounded-lg w-full max-w-4xl h-5/6 flex flex-col shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"p-6 border-b border-white/10\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-white\">Exercise Database</h2>\r\n            <button \r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-white text-2xl\"\r\n            >\r\n              <XIcon className=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"relative mb-4\">\r\n            <SearchIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search exercises...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none\"\r\n            />\r\n          </div>\r\n\r\n          {/* Category Filter */}\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {categories.map((category) => (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => setSelectedCategory(category.id)}\r\n                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\r\n                  selectedCategory === category.id\r\n                    ? 'bg-blue-600 text-white'\r\n                    : 'bg-[#181A20] text-gray-300 hover:bg-gray-600'\r\n                }`}\r\n              >\r\n                {category.icon} {category.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Exercise List */}\r\n        <div className=\"flex-1 overflow-y-auto p-6\">\r\n          {isLoading ? (\r\n            <div className=\"text-center text-gray-400 py-12\">\r\n              <div className=\"animate-spin w-8 h-8 border-2 border-blue-400/30 border-t-blue-400 rounded-full mx-auto mb-4\"></div>\r\n              Loading exercises...\r\n            </div>\r\n          ) : filteredExercises.length === 0 ? (\r\n            <div className=\"text-center text-gray-400 py-12\">\r\n              <p className=\"text-lg mb-2\">No exercises found</p>\r\n              <p className=\"text-sm\">Try adjusting your search or category filter</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {filteredExercises.map((exercise) => (\r\n                <div\r\n                  key={exercise.id}\r\n                  onClick={() => handleExerciseToggle(exercise)}\r\n                  className={`p-4 rounded-lg border cursor-pointer transition-all ${\r\n                    selectedExercises.has(exercise.id)\r\n                      ? 'bg-blue-600/20 border-blue-500'\r\n                      : 'bg-[#181A20] border-white/10 hover:border-white/20'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-2\">\r\n                    <h3 className=\"text-white font-medium text-sm leading-tight\">{exercise.name}</h3>\r\n                    {selectedExercises.has(exercise.id) && (\r\n                      <div className=\"w-5 h-5 bg-blue-600 rounded-full flex items-center justify-center flex-shrink-0 ml-2\">\r\n                        <span className=\"text-white text-xs\">✓</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex flex-wrap gap-1 mb-2\">\r\n                    {(exercise.primaryMuscles || []).slice(0, 2).map((muscle, idx) => (\r\n                      <span key={idx} className=\"px-2 py-1 text-xs bg-gray-700 text-gray-300 rounded\">\r\n                        {muscle}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs text-gray-400\">\r\n                    {exercise.type} • {exercise.category}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"p-6 border-t border-white/10\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"text-gray-400 text-sm\">\r\n              {selectedExercises.size} exercise{selectedExercises.size !== 1 ? 's' : ''} selected\r\n            </div>\r\n            <div className=\"flex gap-3\">\r\n              <button \r\n                onClick={onClose}\r\n                className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                onClick={handleAddSelected}\r\n                disabled={selectedExercises.size === 0}\r\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Add Selected ({selectedExercises.size})\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseDatabasePicker;\r\n","import React, { useState } from 'react';\r\nimport { Exercise } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\nimport { DifficultyCategory } from '@/types/difficulty';\r\nimport { ProgramSession, ProgramExercise } from '@/types/program';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/store';\r\nimport ExerciseHistoryPicker from './ExerciseHistoryPicker';\r\nimport ProgramExercisePicker from './ProgramExercisePicker';\r\nimport ExerciseDatabasePicker from './ExerciseDatabasePicker';\r\nimport ExerciseSearch from '@/features/exercises/ExerciseSearch';\r\nimport CategoryButton, { Category } from '@/features/exercises/CategoryButton';\r\nimport CopyFromPreviousSessionDialog from '@/features/exercises/CopyFromPreviousSessionDialog';\r\nimport { SetEditorDialog } from '@/components/SetEditorDialog';\r\n\r\ninterface SessionBuilderProps {\r\n  onClose: () => void;\r\n  onSave: (session: Omit<ProgramSession, 'userId'>) => void;\r\n  initialSession?: Partial<ProgramSession>;\r\n  sessionName?: string;\r\n}\r\n\r\ntype ViewState = 'main' | 'exerciseSelection' | 'search' | 'setEditor' | 'programPicker' | 'copyPrevious' | 'history' | 'database';\r\n\r\n// Exercise selection categories matching the logging dashboard\r\nconst helperCategories: Category[] = [\r\n  { id: 'programs', name: 'Add from Program', icon: '📋', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-purple-600', textColor: 'text-white' },\r\n  { id: 'copyPrevious', name: 'Copy from Previous', icon: '📝', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-blue-600', textColor: 'text-white' },\r\n  { id: 'history', name: 'From History', icon: '🕒', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-green-600', textColor: 'text-white' },\r\n  { id: 'database', name: 'Exercise Database', icon: '🗄️', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-orange-600', textColor: 'text-white' },\r\n];\r\n\r\nconst muscleGroups: Category[] = [\r\n  { id: 'chest', name: 'Chest', icon: '💪', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-green-600', textColor: 'text-white' },\r\n  { id: 'back', name: 'Back', icon: '🔙', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-blue-600', textColor: 'text-white' },\r\n  { id: 'legs', name: 'Legs', icon: '🦵', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-yellow-600', textColor: 'text-white' },\r\n  { id: 'shoulders', name: 'Shoulders', icon: '🎯', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-cyan-600', textColor: 'text-white' },\r\n  { id: 'arms', name: 'Arms', icon: '💪', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-red-600', textColor: 'text-white' },\r\n  { id: 'core', name: 'Core', icon: '⭕', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-purple-600', textColor: 'text-white' },\r\n  { id: 'fullBody', name: 'Full-Body', icon: '👤', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-orange-600', textColor: 'text-white' },\r\n];\r\n\r\nconst trainingTypes: Category[] = [\r\n  { id: 'cardio', name: 'Cardio', icon: '🏃', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-red-600', textColor: 'text-white' },\r\n  { id: 'agility', name: 'Agility', icon: '⚡', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-yellow-600', textColor: 'text-white' },\r\n  { id: 'speed', name: 'Speed', icon: '🏃‍♂️', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-blue-600', textColor: 'text-white' },\r\n  { id: 'stretching', name: 'Stretching', icon: '🧘‍♂️', bgColor: 'bg-[#2a2a2a]', iconBgColor: 'bg-green-600', textColor: 'text-white' },\r\n];\r\n\r\nconst SessionBuilder: React.FC<SessionBuilderProps> = ({\r\n  onClose,\r\n  onSave,\r\n  initialSession,\r\n  sessionName = ''\r\n}) => {\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n  const [view, setView] = useState<ViewState>('main');\r\n  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null);\r\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(null);\r\n  \r\n  const [selectedExercises, setSelectedExercises] = useState<{ exercise: Exercise; sets: ExerciseSet[] }[]>(\r\n    initialSession?.exercises?.map(ex => ({\r\n      exercise: {\r\n        id: ex.id,\r\n        name: ex.name,\r\n        type: 'strength' as const,\r\n        category: 'compound' as const,\r\n        primaryMuscles: [],\r\n        secondaryMuscles: [],\r\n        instructions: [],\r\n        description: ex.notes || '',\r\n        defaultUnit: 'kg' as const,\r\n        metrics: { trackWeight: true, trackReps: true }\r\n      },\r\n      sets: ex.setsData || []\r\n    })) || []\r\n  );\r\n  \r\n  const [currentSessionName, setCurrentSessionName] = useState(initialSession?.name || sessionName);\r\n  const [sessionNotes, setSessionNotes] = useState(initialSession?.notes || '');\r\n  const [editingSet, setEditingSet] = useState<{ exerciseIndex: number; setIndex: number } | null>(null);\r\n  const [tempSetData, setTempSetData] = useState<{ weight: string; reps: string }>({ weight: '', reps: '' });\r\n  const [editingExerciseName, setEditingExerciseName] = useState<number | null>(null);\r\n  const [tempExerciseName, setTempExerciseName] = useState('');\r\n\r\n  // Exercise selection handlers\r\n  const handleAddFromHistory = (exercises: { exercise: Exercise; sets: ExerciseSet[] }[]) => {\r\n    setSelectedExercises(prev => [...prev, ...exercises]);\r\n    setView('main');\r\n  };\r\n\r\n  const handleAddFromPrograms = (exercises: { exercise: Exercise; sets: ExerciseSet[] }[]) => {\r\n    setSelectedExercises(prev => [...prev, ...exercises]);\r\n    setView('main');\r\n  };\r\n\r\n  const handleAddFromDatabase = (exercises: { exercise: Exercise; sets: ExerciseSet[] }[]) => {\r\n    setSelectedExercises(prev => [...prev, ...exercises]);\r\n    setView('main');\r\n  };\r\n\r\n  const handleCopiedExercises = (exercises: { exercise: Exercise; sets: ExerciseSet[] }[]) => {\r\n    setSelectedExercises(prev => [...prev, ...exercises]);\r\n    setView('main');\r\n  };\r\n\r\n  const handleCategorySelect = (category: Category) => {\r\n    setSelectedCategory(category);\r\n    // Map special categories to their respective views\r\n    switch (category.id) {\r\n      case 'programs':\r\n        setView('programPicker');\r\n        break;\r\n      case 'copyPrevious':\r\n        setView('copyPrevious');\r\n        break;\r\n      case 'history':\r\n        setView('history');\r\n        break;\r\n      case 'database':\r\n        setView('database');\r\n        break;\r\n      default:\r\n        // For muscle groups and training types, go to search\r\n        setView('search');\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleExerciseSelect = (exercise: any) => {\r\n    // Convert the exercise template to a full Exercise\r\n    setSelectedExercise({\r\n      ...exercise,\r\n      id: `temp-${exercise.name.toLowerCase().replace(/\\s+/g, '-')}`,\r\n      description: exercise.description || '',\r\n      primaryMuscles: [],\r\n      secondaryMuscles: [],\r\n      instructions: [],\r\n      metrics: {\r\n        trackWeight: true,\r\n        trackReps: true\r\n      },\r\n      defaultUnit: 'kg'\r\n    });\r\n    setView('setEditor');\r\n  };\r\n\r\n  const handleSaveNewExercise = async (set: ExerciseSet) => {\r\n    if (!selectedExercise) return;\r\n\r\n    const newExerciseWithSets = {\r\n      exercise: selectedExercise,\r\n      sets: [set]\r\n    };\r\n\r\n    setSelectedExercises(prev => [...prev, newExerciseWithSets]);\r\n    setSelectedExercise(null);\r\n    setView('main');\r\n  };\r\n\r\n  // Exercise management utilities\r\n  const handleRemoveExercise = (index: number) => {\r\n    setSelectedExercises(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const moveExercise = (index: number, direction: 'up' | 'down') => {\r\n    const result = Array.from(selectedExercises);\r\n    if (direction === 'up' && index > 0) {\r\n      [result[index - 1], result[index]] = [result[index], result[index - 1]];\r\n    } else if (direction === 'down' && index < selectedExercises.length - 1) {\r\n      [result[index], result[index + 1]] = [result[index + 1], result[index]];\r\n    }\r\n    setSelectedExercises(result);\r\n  };\r\n\r\n  const handleEditSet = (exerciseIndex: number, setIndex: number) => {\r\n    const currentSet = selectedExercises[exerciseIndex].sets[setIndex];\r\n    setTempSetData({\r\n      weight: currentSet.weight?.toString() || '',\r\n      reps: currentSet.reps?.toString() || ''\r\n    });\r\n    setEditingSet({ exerciseIndex, setIndex });\r\n  };\r\n\r\n  const handleSaveSetEdit = () => {\r\n    if (editingSet) {\r\n      const { exerciseIndex, setIndex } = editingSet;\r\n      setSelectedExercises(prev => {\r\n        const newExercises = [...prev];\r\n        newExercises[exerciseIndex] = {\r\n          ...newExercises[exerciseIndex],\r\n          sets: newExercises[exerciseIndex].sets.map((set, idx) =>\r\n            idx === setIndex\r\n              ? {\r\n                  ...set,\r\n                  weight: parseFloat(tempSetData.weight) || 0,\r\n                  reps: parseInt(tempSetData.reps) || 0\r\n                }\r\n              : set\r\n          )\r\n        };\r\n        return newExercises;\r\n      });\r\n      setEditingSet(null);\r\n      setTempSetData({ weight: '', reps: '' });\r\n    }\r\n  };\r\n\r\n  const handleCancelSetEdit = () => {\r\n    setEditingSet(null);\r\n    setTempSetData({ weight: '', reps: '' });\r\n  };\r\n\r\n  const handleAddSet = (exerciseIndex: number) => {\r\n    setSelectedExercises(prev => {\r\n      const newExercises = [...prev];\r\n      const lastSet = newExercises[exerciseIndex].sets[newExercises[exerciseIndex].sets.length - 1];\r\n      newExercises[exerciseIndex] = {\r\n        ...newExercises[exerciseIndex],\r\n        sets: [\r\n          ...newExercises[exerciseIndex].sets,\r\n          {\r\n            reps: lastSet?.reps || 8,\r\n            weight: lastSet?.weight || 0,\r\n            difficulty: DifficultyCategory.NORMAL\r\n          }\r\n        ]\r\n      };\r\n      return newExercises;\r\n    });\r\n  };\r\n\r\n  const handleRemoveSet = (exerciseIndex: number, setIndex: number) => {\r\n    setSelectedExercises(prev => {\r\n      const newExercises = [...prev];\r\n      if (newExercises[exerciseIndex].sets.length > 1) {\r\n        newExercises[exerciseIndex] = {\r\n          ...newExercises[exerciseIndex],\r\n          sets: newExercises[exerciseIndex].sets.filter((_, idx) => idx !== setIndex)\r\n        };\r\n      }\r\n      return newExercises;\r\n    });\r\n  };\r\n\r\n  const handleEditExerciseName = (exerciseIndex: number) => {\r\n    setTempExerciseName(selectedExercises[exerciseIndex].exercise.name);\r\n    setEditingExerciseName(exerciseIndex);\r\n  };\r\n\r\n  const handleSaveExerciseName = () => {\r\n    if (!tempExerciseName.trim()) {\r\n      alert('Exercise name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    if (editingExerciseName !== null) {\r\n      setSelectedExercises(prev => {\r\n        const newExercises = [...prev];\r\n        newExercises[editingExerciseName] = {\r\n          ...newExercises[editingExerciseName],\r\n          exercise: {\r\n            ...newExercises[editingExerciseName].exercise,\r\n            name: tempExerciseName.trim()\r\n          }\r\n        };\r\n        return newExercises;\r\n      });\r\n      setEditingExerciseName(null);\r\n      setTempExerciseName('');\r\n    }\r\n  };\r\n\r\n  const handleCancelExerciseNameEdit = () => {\r\n    setEditingExerciseName(null);\r\n    setTempExerciseName('');\r\n  };\r\n\r\n  const handleDuplicateExercise = (exerciseIndex: number) => {\r\n    const exerciseToDuplicate = selectedExercises[exerciseIndex];\r\n    const duplicatedExercise = {\r\n      ...exerciseToDuplicate,\r\n      exercise: {\r\n        ...exerciseToDuplicate.exercise,\r\n        id: `${exerciseToDuplicate.exercise.id}-duplicate-${Date.now()}`,\r\n        name: `${exerciseToDuplicate.exercise.name} (Copy)`\r\n      }\r\n    };\r\n    \r\n    setSelectedExercises(prev => [\r\n      ...prev.slice(0, exerciseIndex + 1),\r\n      duplicatedExercise,\r\n      ...prev.slice(exerciseIndex + 1)\r\n    ]);\r\n  };\r\n\r\n  const handleSaveSession = () => {\r\n    if (!currentSessionName.trim()) {\r\n      alert('Please enter a session name');\r\n      return;\r\n    }\r\n\r\n    if (selectedExercises.length === 0) {\r\n      alert('Please add at least one exercise');\r\n      return;\r\n    }\r\n\r\n    // Validate that all exercises have names\r\n    const exercisesWithoutNames = selectedExercises.filter(item => !item.exercise.name?.trim());\r\n    if (exercisesWithoutNames.length > 0) {\r\n      alert(`Please ensure all exercises have names. Found ${exercisesWithoutNames.length} exercise(s) without names.`);\r\n      return;\r\n    }\r\n\r\n    // Convert exercises to ProgramExercise format\r\n    const exercises: ProgramExercise[] = selectedExercises.map((item, index) => ({\r\n      id: `${item.exercise.id}-${index}`,\r\n      name: item.exercise.name,\r\n      order: index,\r\n      sets: item.sets.length,\r\n      reps: item.sets.reduce((total, set) => total + (set.reps || 0), 0),\r\n      setsData: item.sets,\r\n      notes: item.exercise.description || ''\r\n    }));\r\n\r\n    const session: Omit<ProgramSession, 'userId'> = {\r\n      id: initialSession?.id || '',\r\n      name: currentSessionName.trim(),\r\n      exercises,\r\n      notes: sessionNotes.trim()\r\n    };\r\n\r\n    onSave(session);\r\n  };\r\n\r\n  // Conditional rendering for different views\r\n  if (view === 'programPicker') {\r\n    return (\r\n      <ProgramExercisePicker\r\n        onClose={() => setView('main')}\r\n        onSelectExercises={handleAddFromPrograms}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'copyPrevious') {\r\n    return (\r\n      <CopyFromPreviousSessionDialog\r\n        isOpen={true}\r\n        onClose={() => setView('main')}\r\n        onExercisesSelected={(exercises) => {\r\n          const convertedExercises = exercises.map(ex => ({\r\n            exercise: {\r\n              id: ex.id || `temp-${ex.exerciseName?.toLowerCase().replace(/\\s+/g, '-')}`,\r\n              name: ex.exerciseName || '',\r\n              type: 'strength' as const,\r\n              category: 'compound' as const,\r\n              primaryMuscles: [],\r\n              secondaryMuscles: [],\r\n              instructions: [],\r\n              description: '',\r\n              defaultUnit: 'kg' as const,\r\n              metrics: { trackWeight: true, trackReps: true }\r\n            },\r\n            sets: ex.sets || []\r\n          }));\r\n          handleCopiedExercises(convertedExercises);\r\n        }}\r\n        currentDate={new Date()}\r\n        userId={user?.id || ''}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'history') {\r\n    return (\r\n      <ExerciseHistoryPicker\r\n        onClose={() => setView('main')}\r\n        onSelectExercises={handleAddFromHistory}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'database') {\r\n    return (\r\n      <ExerciseDatabasePicker\r\n        onClose={() => setView('main')}\r\n        onSelectExercises={handleAddFromDatabase}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'search') {\r\n    return (\r\n      <ExerciseSearch\r\n        onClose={() => setView('main')}\r\n        category={selectedCategory}\r\n        onSelectExercise={handleExerciseSelect}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'setEditor' && selectedExercise) {\r\n    return (\r\n      <SetEditorDialog\r\n        onClose={() => {\r\n          setSelectedExercise(null);\r\n          setView('main');\r\n        }}\r\n        onSave={handleSaveNewExercise}\r\n        exerciseName={selectedExercise.name}\r\n        setNumber={1}\r\n        totalSets={1}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'exerciseSelection') {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/90 backdrop-blur-sm flex flex-col z-50\">\r\n        {/* Header - Fixed at top */}\r\n        <header className=\"sticky top-0 flex items-center justify-between p-4 bg-[#1a1a1a] border-b border-white/10\">\r\n          <h2 className=\"text-xl font-bold text-white\">Add Exercises</h2>\r\n          <button \r\n            onClick={() => setView('main')}\r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </header>\r\n\r\n        {/* Main Content - Scrollable */}\r\n        <main className=\"flex-1 overflow-y-auto overscroll-contain pb-safe min-h-0\">\r\n          <div className=\"max-w-md mx-auto p-4 space-y-6 md:space-y-8\">\r\n            {/* Quick Add Section */}\r\n            <section className=\"space-y-3 md:space-y-4\">\r\n              <h3 className=\"text-lg font-semibold text-white/90\">Quick Add</h3>\r\n              <div className=\"grid grid-cols-2 gap-3 md:gap-4\">\r\n                {helperCategories.map(category => (\r\n                  <CategoryButton\r\n                    key={category.id}\r\n                    category={category}\r\n                    onClick={() => handleCategorySelect(category)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </section>\r\n\r\n            {/* Muscle Groups Section */}\r\n            <section className=\"space-y-3 md:space-y-4\">\r\n              <h3 className=\"text-lg font-semibold text-white/90\">Muscle Groups</h3>\r\n              <div className=\"grid grid-cols-2 gap-3 sm:grid-cols-3 md:gap-4\">\r\n                {muscleGroups.map(category => (\r\n                  <CategoryButton\r\n                    key={category.id}\r\n                    category={category}\r\n                    onClick={() => handleCategorySelect(category)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </section>\r\n\r\n            {/* Training Types Section */}\r\n            <section className=\"space-y-3 md:space-y-4\">\r\n              <h3 className=\"text-lg font-semibold text-white/90\">Training Types</h3>\r\n              <div className=\"grid grid-cols-2 gap-3 sm:grid-cols-3 md:gap-4\">\r\n                {trainingTypes.map(category => (\r\n                  <CategoryButton\r\n                    key={category.id}\r\n                    category={category}\r\n                    onClick={() => handleCategorySelect(category)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main session builder view\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black z-50 flex flex-col\">\r\n      {/* Header */}\r\n      <header className=\"flex items-center justify-between px-4 py-4 bg-black/95 backdrop-blur-sm border-b border-white/10\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <button \r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n            onClick={onClose}\r\n            aria-label=\"Close\"\r\n          >\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n          <h1 className=\"text-white text-xl font-medium\">Session Builder</h1>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={handleSaveSession}\r\n          className=\"px-4 py-2 bg-[#8B5CF6] hover:bg-[#7C3AED] text-white rounded-lg transition-colors font-medium\"\r\n        >\r\n          Save Session\r\n        </button>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-1 overflow-y-auto px-4 py-6\">\r\n        {/* Session Details */}\r\n        <div className=\"mb-6 space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Session Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={currentSessionName}\r\n              onChange={(e) => setCurrentSessionName(e.target.value)}\r\n              placeholder=\"Enter session name\"\r\n              className=\"w-full px-3 py-2 bg-[#2a2a2a] border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-[#8B5CF6]\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Session Notes (Optional)\r\n            </label>\r\n            <textarea\r\n              value={sessionNotes}\r\n              onChange={(e) => setSessionNotes(e.target.value)}\r\n              placeholder=\"Add notes about this session\"\r\n              className=\"w-full px-3 py-2 bg-[#2a2a2a] border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-[#8B5CF6] resize-none\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Exercises Section */}\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-lg font-semibold text-white\">Exercises ({selectedExercises.length})</h2>\r\n            <button\r\n              onClick={() => setView('exerciseSelection')}\r\n              className=\"px-4 py-2 bg-[#2a2a2a] hover:bg-[#3a3a3a] text-white rounded-lg transition-colors border border-white/10\"\r\n            >\r\n              Add Exercise\r\n            </button>\r\n          </div>\r\n\r\n          {selectedExercises.length === 0 ? (\r\n            <div className=\"text-center py-12 text-gray-400\">\r\n              <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-[#2a2a2a] flex items-center justify-center\">\r\n                <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                </svg>\r\n              </div>\r\n              <p className=\"text-lg mb-2\">No exercises added yet</p>\r\n              <p className=\"text-sm mb-4\">Add exercises from your history, programs, or the database</p>\r\n              <button\r\n                onClick={() => setView('exerciseSelection')}\r\n                className=\"px-6 py-3 bg-[#8B5CF6] hover:bg-[#7C3AED] text-white rounded-lg transition-colors\"\r\n              >\r\n                Add First Exercise\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-3\">\r\n              {selectedExercises.map((item, exerciseIndex) => (\r\n                <div key={`${item.exercise.id}-${exerciseIndex}`} className=\"bg-[#1a1a1a] rounded-xl border border-white/10 p-4\">\r\n                  {/* Exercise Header */}\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    <div className=\"flex-1\">\r\n                      {editingExerciseName === exerciseIndex ? (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={tempExerciseName}\r\n                            onChange={(e) => setTempExerciseName(e.target.value)}\r\n                            className=\"flex-1 px-2 py-1 bg-[#2a2a2a] border border-white/10 rounded text-white text-lg font-medium focus:outline-none focus:border-[#8B5CF6]\"\r\n                            autoFocus\r\n                          />\r\n                          <button\r\n                            onClick={handleSaveExerciseName}\r\n                            className=\"p-1 hover:bg-white/10 rounded text-green-400\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={handleCancelExerciseNameEdit}\r\n                            className=\"p-1 hover:bg-white/10 rounded text-red-400\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleEditExerciseName(exerciseIndex)}\r\n                          className=\"text-left hover:bg-white/5 rounded p-1 -m-1 transition-colors\"\r\n                        >\r\n                          <h3 className=\"text-lg font-medium text-white\">{item.exercise.name}</h3>\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {/* Exercise Controls */}\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {/* Move Up */}\r\n                      {exerciseIndex > 0 && (\r\n                        <button\r\n                          onClick={() => moveExercise(exerciseIndex, 'up')}\r\n                          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n                          title=\"Move up\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\r\n                          </svg>\r\n                        </button>\r\n                      )}\r\n                      \r\n                      {/* Move Down */}\r\n                      {exerciseIndex < selectedExercises.length - 1 && (\r\n                        <button\r\n                          onClick={() => moveExercise(exerciseIndex, 'down')}\r\n                          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n                          title=\"Move down\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                          </svg>\r\n                        </button>\r\n                      )}\r\n                      \r\n                      {/* Duplicate */}\r\n                      <button\r\n                        onClick={() => handleDuplicateExercise(exerciseIndex)}\r\n                        className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n                        title=\"Duplicate exercise\"\r\n                      >\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                        </svg>\r\n                      </button>\r\n                      \r\n                      {/* Delete */}\r\n                      <button\r\n                        onClick={() => handleRemoveExercise(exerciseIndex)}\r\n                        className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-red-400\"\r\n                        title=\"Remove exercise\"\r\n                      >\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Sets */}\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm font-medium text-gray-300\">Sets ({item.sets.length})</span>\r\n                      <button\r\n                        onClick={() => handleAddSet(exerciseIndex)}\r\n                        className=\"px-3 py-1 bg-[#2a2a2a] hover:bg-[#3a3a3a] text-white rounded-lg transition-colors text-sm border border-white/10\"\r\n                      >\r\n                        Add Set\r\n                      </button>\r\n                    </div>\r\n                    \r\n                    {item.sets.map((set, setIndex) => (\r\n                      <div key={`${item.exercise.id}-set-${setIndex}`} className=\"flex items-center gap-3 p-3 bg-[#2a2a2a] rounded-lg\">\r\n                        <span className=\"text-sm text-gray-400 w-8\">#{setIndex + 1}</span>\r\n                        \r\n                        {editingSet?.exerciseIndex === exerciseIndex && editingSet?.setIndex === setIndex ? (\r\n                          <>\r\n                            <input\r\n                              type=\"number\"\r\n                              value={tempSetData.weight}\r\n                              onChange={(e) => setTempSetData(prev => ({ ...prev, weight: e.target.value }))}\r\n                              placeholder=\"Weight\"\r\n                              className=\"flex-1 px-2 py-1 bg-[#1a1a1a] border border-white/10 rounded text-white text-sm focus:outline-none focus:border-[#8B5CF6]\"\r\n                            />\r\n                            <span className=\"text-gray-400 text-sm\">kg</span>\r\n                            <span className=\"text-gray-400\">×</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              value={tempSetData.reps}\r\n                              onChange={(e) => setTempSetData(prev => ({ ...prev, reps: e.target.value }))}\r\n                              placeholder=\"Reps\"\r\n                              className=\"flex-1 px-2 py-1 bg-[#1a1a1a] border border-white/10 rounded text-white text-sm focus:outline-none focus:border-[#8B5CF6]\"\r\n                            />\r\n                            <button\r\n                              onClick={handleSaveSetEdit}\r\n                              className=\"p-1 hover:bg-white/10 rounded text-green-400\"\r\n                            >\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                              </svg>\r\n                            </button>\r\n                            <button\r\n                              onClick={handleCancelSetEdit}\r\n                              className=\"p-1 hover:bg-white/10 rounded text-red-400\"\r\n                            >\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                              </svg>\r\n                            </button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <button\r\n                              onClick={() => handleEditSet(exerciseIndex, setIndex)}\r\n                              className=\"flex-1 text-left hover:bg-white/5 rounded p-1 -m-1 transition-colors\"\r\n                            >\r\n                              <span className=\"text-white font-medium\">{set.weight || 0} kg</span>\r\n                              <span className=\"text-gray-400 mx-2\">×</span>\r\n                              <span className=\"text-white font-medium\">{set.reps || 0} reps</span>\r\n                            </button>\r\n                            {item.sets.length > 1 && (\r\n                              <button\r\n                                onClick={() => handleRemoveSet(exerciseIndex, setIndex)}\r\n                                className=\"p-1 hover:bg-white/10 rounded text-red-400\"\r\n                                title=\"Remove set\"\r\n                              >\r\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                                </svg>\r\n                              </button>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionBuilder;\r\n","import React, { useState } from 'react';\r\nimport { Program, ProgramSession } from '@/types/program';\r\nimport { PlusIcon, BookmarkIcon, TrashIcon, PencilIcon } from '@heroicons/react/outline';\r\nimport SessionBuilder from './SessionBuilder';\r\nimport { auth } from '@/services/firebase/config';\r\n\r\ninterface ProgramBuilderProps {\r\n  onClose: () => void;\r\n  onSave: (program: Omit<Program, 'id' | 'userId'>) => void;\r\n  initialProgram?: Partial<Program>;\r\n}\r\n\r\nconst ProgramBuilder: React.FC<ProgramBuilderProps> = ({\r\n  onClose,\r\n  onSave,\r\n  initialProgram\r\n}) => {\r\n  const [programName, setProgramName] = useState(initialProgram?.name || '');\r\n  const [programDescription, setProgramDescription] = useState(initialProgram?.description || '');\r\n  const [programLevel, setProgramLevel] = useState<'beginner' | 'intermediate' | 'advanced'>(\r\n    initialProgram?.level || 'beginner'\r\n  );\r\n  const [sessions, setSessions] = useState<ProgramSession[]>(initialProgram?.sessions || []);\r\n  const [showSessionBuilder, setShowSessionBuilder] = useState(false);\r\n  const [editingSession, setEditingSession] = useState<ProgramSession | null>(null);\r\n  const [showSaveTemplate, setShowSaveTemplate] = useState(false);\r\n\r\n  const handleAddSession = () => {\r\n    setEditingSession(null);\r\n    setShowSessionBuilder(true);\r\n  };\r\n\r\n  const handleEditSession = (session: ProgramSession) => {\r\n    setEditingSession(session);\r\n    setShowSessionBuilder(true);\r\n  };\r\n\r\n  const handleSaveSession = (sessionData: Omit<ProgramSession, 'userId'>) => {\r\n    const user = auth.currentUser;\r\n    if (!user) return;\r\n\r\n    const session: ProgramSession = {\r\n      ...sessionData,\r\n      userId: user.uid\r\n    };\r\n\r\n    console.log('[ProgramBuilder] Saving session:', {\r\n      sessionId: session.id,\r\n      sessionName: session.name,\r\n      exerciseCount: session.exercises.length,\r\n      isEditing: !!editingSession\r\n    });\r\n\r\n    if (editingSession) {\r\n      // Update existing session\r\n      setSessions(prev => prev.map(s => s.id === editingSession.id ? session : s));\r\n      console.log('[ProgramBuilder] Updated existing session');\r\n    } else {\r\n      // Add new session\r\n      setSessions(prev => {\r\n        const newSessions = [...prev, session];\r\n        console.log('[ProgramBuilder] Added new session. Total sessions:', newSessions.length);\r\n        return newSessions;\r\n      });\r\n    }\r\n    \r\n    setShowSessionBuilder(false);\r\n    setEditingSession(null);\r\n  };\r\n\r\n  const handleDeleteSession = (sessionId: string) => {\r\n    if (confirm('Are you sure you want to delete this session?')) {\r\n      setSessions(prev => prev.filter(s => s.id !== sessionId));\r\n    }\r\n  };\r\n\r\n  const moveSession = (index: number, direction: 'up' | 'down') => {\r\n    const newSessions = [...sessions];\r\n    if (direction === 'up' && index > 0) {\r\n      [newSessions[index - 1], newSessions[index]] = [newSessions[index], newSessions[index - 1]];\r\n    } else if (direction === 'down' && index < sessions.length - 1) {\r\n      [newSessions[index], newSessions[index + 1]] = [newSessions[index + 1], newSessions[index]];\r\n    }\r\n    \r\n    // Update order property\r\n    newSessions.forEach((session, idx) => {\r\n      session.order = idx;\r\n    });\r\n    \r\n    setSessions(newSessions);\r\n  };\r\n\r\n  const saveAsTemplate = () => {\r\n    if (!programName.trim()) {\r\n      alert('Please enter a program name first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const templates = JSON.parse(localStorage.getItem('program-templates') || '[]');\r\n      const newTemplate = {\r\n        id: Date.now().toString(),\r\n        name: programName,\r\n        description: programDescription,\r\n        level: programLevel,\r\n        sessions: sessions,\r\n        createdAt: new Date().toISOString()\r\n      };\r\n      \r\n      templates.push(newTemplate);\r\n      localStorage.setItem('program-templates', JSON.stringify(templates));\r\n      setShowSaveTemplate(false);\r\n      alert('Program saved as template!');\r\n    } catch (error) {\r\n      console.error('Error saving template:', error);\r\n      alert('Failed to save template');\r\n    }\r\n  };\r\n\r\n  const handleSaveProgram = () => {\r\n    if (!programName.trim()) {\r\n      alert('Please enter a program name');\r\n      return;\r\n    }\r\n\r\n    if (sessions.length === 0) {\r\n      alert('Please add at least one session');\r\n      return;\r\n    }\r\n\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      alert('You must be logged in to save a program');\r\n      return;\r\n    }\r\n\r\n    console.log('[ProgramBuilder] Saving program:', {\r\n      name: programName,\r\n      sessionCount: sessions.length,\r\n      totalExercises: getTotalExercises(),\r\n      sessions: sessions.map(s => ({ id: s.id, name: s.name, exerciseCount: s.exercises.length }))\r\n    });\r\n\r\n    const program: Omit<Program, 'id' | 'userId'> = {\r\n      name: programName,\r\n      description: programDescription,\r\n      level: programLevel,\r\n      createdBy: user.uid,\r\n      createdAt: initialProgram?.createdAt || new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      sessions: sessions,\r\n      isPublic: initialProgram?.isPublic || false,\r\n      tags: initialProgram?.tags || []\r\n    };\r\n\r\n    onSave(program);\r\n  };\r\n\r\n  const getTotalExercises = () => {\r\n    return sessions.reduce((total, session) => total + session.exercises.length, 0);\r\n  };\r\n\r\n  const getTotalSets = () => {\r\n    return sessions.reduce((total, session) => \r\n      total + session.exercises.reduce((sessionTotal, exercise) => \r\n        sessionTotal + (exercise.setsData?.length || exercise.sets), 0\r\n      ), 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-50\">\r\n        <div className=\"bg-[#23272F] rounded-xl w-full max-w-6xl h-5/6 flex flex-col shadow-2xl\">\r\n          {/* Header */}\r\n          <div className=\"p-6 border-b border-white/10\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h2 className=\"text-3xl font-bold text-white\">\r\n                {initialProgram ? 'Edit Program' : 'Create Program'}\r\n              </h2>\r\n              <button \r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-white text-2xl font-bold w-8 h-8 flex items-center justify-center transition-colors\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            {/* Program Details */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Program Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g., Push/Pull/Legs, Upper/Lower Split\"\r\n                  value={programName}\r\n                  onChange={(e) => setProgramName(e.target.value)}\r\n                  className=\"w-full px-4 py-3 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none text-lg\"\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                    Difficulty Level\r\n                  </label>\r\n                  <select\r\n                    value={programLevel}\r\n                    onChange={(e) => setProgramLevel(e.target.value as 'beginner' | 'intermediate' | 'advanced')}\r\n                    className=\"w-full px-4 py-3 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none\"\r\n                  >\r\n                    <option value=\"beginner\">🟢 Beginner</option>\r\n                    <option value=\"intermediate\">🟡 Intermediate</option>\r\n                    <option value=\"advanced\">🔴 Advanced</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"flex items-end\">\r\n                  <button\r\n                    onClick={() => setShowSaveTemplate(true)}\r\n                    disabled={sessions.length === 0}\r\n                    className=\"w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 transition-colors\"\r\n                  >\r\n                    <BookmarkIcon className=\"w-4 h-4\" />\r\n                    Save as Template\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Program Description (Optional)\r\n                </label>\r\n                <textarea\r\n                  placeholder=\"Describe your program goals, frequency, and notes...\"\r\n                  value={programDescription}\r\n                  onChange={(e) => setProgramDescription(e.target.value)}\r\n                  className=\"w-full px-4 py-3 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none resize-none\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sessions List */}\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            {sessions.length === 0 ? (\r\n              <div className=\"text-center text-gray-400 py-16\">\r\n                <PlusIcon className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\r\n                <h3 className=\"text-xl font-medium mb-2\">No sessions added yet</h3>\r\n                <p className=\"text-gray-500 mb-6\">Create sessions like \"Push Day\", \"Pull Day\", \"Leg Day\" etc.</p>\r\n                <button\r\n                  onClick={handleAddSession}\r\n                  className=\"px-8 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto text-lg font-medium transition-colors\"\r\n                >\r\n                  <PlusIcon className=\"w-5 h-5\" />\r\n                  Create First Session\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between mb-6\">\r\n                  <h3 className=\"text-xl font-semibold text-white\">\r\n                    Program Sessions ({sessions.length})\r\n                  </h3>\r\n                  <div className=\"text-sm text-gray-400\">\r\n                    {getTotalExercises()} exercises • {getTotalSets()} total sets\r\n                  </div>\r\n                </div>\r\n                \r\n                {sessions.map((session, index) => (\r\n                  <div key={session.id} className=\"bg-[#181A20] rounded-xl p-5 border border-white/10 hover:border-white/20 transition-colors\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <div className=\"flex-1\">\r\n                        <h4 className=\"text-white font-semibold text-lg\">{session.name}</h4>\r\n                        <div className=\"text-sm text-gray-400 mt-1\">\r\n                          {session.exercises.length} exercise{session.exercises.length !== 1 ? 's' : ''} • \r\n                          {session.exercises.reduce((total, ex) => total + (ex.setsData?.length || ex.sets), 0)} sets\r\n                          {session.notes && (\r\n                            <span className=\"ml-2 text-gray-500\">• {session.notes}</span>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center gap-2\">\r\n                        <button\r\n                          onClick={() => moveSession(index, 'up')}\r\n                          disabled={index === 0}\r\n                          className=\"p-2 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors\"\r\n                          title=\"Move up\"\r\n                        >\r\n                          ↑\r\n                        </button>\r\n                        <button\r\n                          onClick={() => moveSession(index, 'down')}\r\n                          disabled={index === sessions.length - 1}\r\n                          className=\"p-2 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors\"\r\n                          title=\"Move down\"\r\n                        >\r\n                          ↓\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleEditSession(session)}\r\n                          className=\"p-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n                          title=\"Edit session\"\r\n                        >\r\n                          <PencilIcon className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteSession(session.id)}\r\n                          className=\"p-2 text-red-400 hover:text-red-300 transition-colors\"\r\n                          title=\"Delete session\"\r\n                        >\r\n                          <TrashIcon className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Exercise Preview */}\r\n                    {session.exercises.length > 0 && (\r\n                      <div className=\"mt-4 p-4 bg-[#23272F] rounded-lg border border-white/5\">\r\n                        <div className=\"text-xs font-medium text-gray-400 mb-3\">EXERCISES:</div>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                          {session.exercises.slice(0, 6).map((exercise, idx) => (\r\n                            <div key={`${session.id}-exercise-${idx}-${exercise.name}`} className=\"text-sm text-gray-300 flex items-center gap-2\">\r\n                              <span className=\"w-2 h-2 bg-blue-500 rounded-full flex-shrink-0\"></span>\r\n                              <span className=\"truncate\">\r\n                                {exercise.name} ({exercise.setsData?.length || exercise.sets} sets)\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        {session.exercises.length > 6 && (\r\n                          <div className=\"text-xs text-gray-500 mt-3 text-center\">\r\n                            +{session.exercises.length - 6} more exercises...\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n\r\n                {/* Add Session Button */}\r\n                <div className=\"mt-8 text-center\">\r\n                  <button\r\n                    onClick={handleAddSession}\r\n                    className=\"px-8 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto text-lg font-medium transition-colors\"\r\n                  >\r\n                    <PlusIcon className=\"w-5 h-5\" />\r\n                    Add Another Session\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"p-6 border-t border-white/10 bg-[#1A1D23]\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-gray-400 text-sm\">\r\n                <div className=\"font-medium\">\r\n                  {sessions.length} session{sessions.length !== 1 ? 's' : ''} • {getTotalExercises()} exercises • {getTotalSets()} total sets\r\n                </div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  💡 Create sessions first, then add exercises to each session\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-3\">\r\n                <button \r\n                  onClick={onClose}\r\n                  className=\"px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  onClick={handleSaveProgram}\r\n                  disabled={sessions.length === 0 || !programName.trim()}\r\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium\"\r\n                >\r\n                  {initialProgram ? 'Update Program' : 'Save Program'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Session Builder Modal */}\r\n      {showSessionBuilder && (\r\n        <SessionBuilder\r\n          onClose={() => {\r\n            setShowSessionBuilder(false);\r\n            setEditingSession(null);\r\n          }}\r\n          onSave={handleSaveSession}\r\n          initialSession={editingSession || undefined}\r\n          sessionName={editingSession ? editingSession.name : `Session ${sessions.length + 1}`}\r\n        />\r\n      )}\r\n\r\n      {/* Save Template Modal */}\r\n      {showSaveTemplate && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-60\">\r\n          <div className=\"bg-[#23272F] p-6 rounded-lg max-w-md w-full\">\r\n            <h3 className=\"text-white text-lg font-bold mb-4\">Save as Template</h3>\r\n            <p className=\"text-gray-400 text-sm mb-4\">\r\n              This will save the entire program with all sessions as a reusable template.\r\n            </p>\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={() => setShowSaveTemplate(false)}\r\n                className=\"flex-1 px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={saveAsTemplate}\r\n                className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n              >\r\n                Save Template\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgramBuilder;\r\n"],"names":["BookmarkIcon","props","svgRef","React.createElement","ForwardRef","React.forwardRef","PencilIcon","PlusIcon","TrashIcon","XIcon","normalizeMuscle","muscle","ExerciseDatabasePicker","onClose","onSelectExercises","user","useAuth","searchTerm","setSearchTerm","useState","selectedCategory","setSelectedCategory","isLoading","setIsLoading","customExercises","setCustomExercises","combinedExercises","setCombinedExercises","selectedExercises","setSelectedExercises","categories","useEffect","exercisesRef","collection","db","q","query","where","querySnapshot","getDocs","exercises","doc","data","error","toast","normalizedExercises","allExercises","ex","importedExercises","filteredExercises","exercise","primaryMuscles","matchesSearch","m","handleExerciseToggle","newSelected","handleAddSelected","exercisesWithSets","DifficultyCategory","jsxs","jsx","SearchIcon","e","category","idx","helperCategories","muscleGroups","trainingTypes","SessionBuilder","onSave","initialSession","sessionName","useSelector","state","view","setView","selectedExercise","setSelectedExercise","_a","currentSessionName","setCurrentSessionName","sessionNotes","setSessionNotes","editingSet","setEditingSet","tempSetData","setTempSetData","editingExerciseName","setEditingExerciseName","tempExerciseName","setTempExerciseName","handleAddFromHistory","prev","handleAddFromPrograms","handleAddFromDatabase","handleCopiedExercises","handleCategorySelect","handleExerciseSelect","handleSaveNewExercise","set","newExerciseWithSets","handleRemoveExercise","index","_","i","moveExercise","direction","result","handleEditSet","exerciseIndex","setIndex","currentSet","_b","handleSaveSetEdit","newExercises","handleCancelSetEdit","handleAddSet","lastSet","handleRemoveSet","handleEditExerciseName","handleSaveExerciseName","handleCancelExerciseNameEdit","handleDuplicateExercise","exerciseToDuplicate","duplicatedExercise","handleSaveSession","exercisesWithoutNames","item","total","session","ProgramExercisePicker","CopyFromPreviousSessionDialog","convertedExercises","ExerciseHistoryPicker","ExerciseSearch","SetEditorDialog","CategoryButton","Fragment","ProgramBuilder","initialProgram","programName","setProgramName","programDescription","setProgramDescription","programLevel","setProgramLevel","sessions","setSessions","showSessionBuilder","setShowSessionBuilder","editingSession","setEditingSession","showSaveTemplate","setShowSaveTemplate","handleAddSession","handleEditSession","sessionData","auth","s","newSessions","handleDeleteSession","sessionId","moveSession","saveAsTemplate","templates","newTemplate","handleSaveProgram","getTotalExercises","program","getTotalSets","sessionTotal"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}