{"version":3,"file":"CreateExerciseDialog-D-vEJcPb.js","sources":["../../src/hooks/useAuth.ts","../../src/components/exercises/CreateExerciseDialog.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/store';\r\nimport { setUser, setLoading } from '@/features/auth/authSlice';\r\nimport { getCurrentUser, User } from '@/services/firebase/auth';\r\n\r\nexport const useAuth = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading, isAuthenticated } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        const user = await getCurrentUser();\r\n        dispatch(setUser(user));\r\n      } catch (error) {\r\n        dispatch(setUser(null));\r\n      } finally {\r\n        dispatch(setLoading(false));\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    user: user as User | null,\r\n    isLoading,\r\n    isAuthenticated,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { Exercise, MuscleGroup } from '@/types/exercise';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { db } from '@/services/firebase/config';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface CreateExerciseDialogProps {\r\n  onClose: () => void;\r\n  onSuccess?: (exerciseId: string) => void;\r\n}\r\n\r\nexport const bodyParts = [\r\n  'Chest',\r\n  'Back',\r\n  'Shoulders',\r\n  'Biceps',\r\n  'Triceps',\r\n  'Legs',\r\n  'Core',\r\n  'Full Body',\r\n  'Cardio',\r\n] as const;\r\n\r\nexport const exerciseTypes = [\r\n  'Strength',\r\n  'Hypertrophy',\r\n  'Endurance',\r\n  'Power',\r\n  'Cardio',\r\n  'Flexibility',\r\n  'Balance',\r\n] as const;\r\n\r\nexport const trainingCategories = [\r\n  'Beginner',\r\n  'Intermediate',\r\n  'Advanced',\r\n] as const;\r\n\r\ntype BodyPart = typeof bodyParts[number];\r\ntype ExerciseTypeEnum = typeof exerciseTypes[number];\r\ntype TrainingCategory = typeof trainingCategories[number];\r\n\r\ninterface ExerciseFormData {\r\n  name: string;\r\n  bodyParts: BodyPart[];\r\n  type: ExerciseTypeEnum;\r\n  trainingCategory: TrainingCategory;\r\n  description: string;\r\n}\r\n\r\ninterface FormErrors {\r\n  name?: string;\r\n  bodyParts?: string;\r\n  description?: string;\r\n}\r\n\r\nexport const CreateExerciseDialog: React.FC<CreateExerciseDialogProps> = ({\r\n  onClose,\r\n  onSuccess\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [exercise, setExercise] = useState<ExerciseFormData>({\r\n    name: '',\r\n    bodyParts: [],\r\n    type: 'Strength',\r\n    trainingCategory: 'Beginner',\r\n    description: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: FormErrors = {};\r\n\r\n    if (!exercise.name?.trim()) {\r\n      newErrors.name = 'Exercise name is required';\r\n    } else if (exercise.name.length < 3) {\r\n      newErrors.name = 'Name must be at least 3 characters';\r\n    }\r\n\r\n    if (!exercise.bodyParts?.length) {\r\n      newErrors.bodyParts = 'Select at least one body part';\r\n    }\r\n\r\n    if (!exercise.description?.trim()) {\r\n      newErrors.description = 'Description is required';\r\n    } else if (exercise.description.length < 10) {\r\n      newErrors.description = 'Description must be at least 10 characters';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    \r\n    if (!user) {\r\n      toast.error('You must be logged in to create exercises');\r\n      return;\r\n    }\r\n\r\n    if (!validateForm()) {\r\n      toast.error('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const exerciseData: Omit<Exercise, 'id'> = {\r\n        name: exercise.name.trim(),\r\n        description: exercise.description.trim(),\r\n        type: exercise.type === 'Cardio' ? 'cardio' : \r\n              exercise.type === 'Flexibility' ? 'flexibility' : 'strength',\r\n        category: exercise.type === 'Cardio' ? 'cardio' : \r\n                 exercise.type === 'Flexibility' ? 'stretching' : \r\n                 exercise.bodyParts.length > 1 ? 'compound' : 'isolation',\r\n        primaryMuscles: exercise.bodyParts.map(p => p.toLowerCase().replace(/\\s+/g, '_') as MuscleGroup),\r\n        secondaryMuscles: [],\r\n        instructions: [exercise.description],\r\n        defaultUnit: exercise.type === 'Cardio' ? 'time' : 'kg',\r\n        metrics: {\r\n          trackWeight: exercise.type !== 'Cardio',\r\n          trackReps: exercise.type !== 'Cardio',\r\n          trackTime: exercise.type === 'Cardio',\r\n          trackDistance: false,\r\n          trackRPE: true,\r\n        },\r\n        customExercise: true,\r\n        userId: user.id\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, 'exercises'), exerciseData);\r\n      toast.success('Exercise created successfully!');\r\n      onSuccess?.(docRef.id);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error creating exercise:', error);\r\n      toast.error('Failed to create exercise. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const value = e.target.value as ExerciseTypeEnum;\r\n    setExercise(prev => ({ ...prev, type: value }));\r\n  };\r\n\r\n  const handleCategoryChange = (category: TrainingCategory) => {\r\n    setExercise(prev => ({ ...prev, trainingCategory: category }));\r\n  };\r\n\r\n  const handleBodyPartToggle = (part: BodyPart) => {\r\n    setExercise(prev => ({\r\n      ...prev,\r\n      bodyParts: prev.bodyParts.includes(part)\r\n        ? prev.bodyParts.filter(p => p !== part)\r\n        : [...prev.bodyParts, part]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\r\n        <div className=\"relative transform overflow-hidden rounded-lg bg-[#1a1a1a] px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-white/90\">\r\n                Exercise Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                required\r\n                className=\"mt-1 block w-full rounded-md border-gray-600 bg-[#2a2a2a] text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm placeholder-white/40\"\r\n                value={exercise.name}\r\n                onChange={(e) => setExercise(prev => ({ ...prev, name: e.target.value }))}\r\n              />\r\n              {errors.name && <p className=\"mt-1 text-sm text-red-400\">{errors.name}</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white/90\">Body Parts</label>\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {bodyParts.map((part) => (\r\n                  <button\r\n                    key={part}\r\n                    type=\"button\"\r\n                    className={`rounded-full px-3 py-1 text-sm ${\r\n                      exercise.bodyParts.includes(part)\r\n                        ? 'bg-blue-600 text-white'\r\n                        : 'bg-[#2a2a2a] text-white/70 hover:bg-[#3a3a3a]'\r\n                    }`}\r\n                    onClick={() => handleBodyPartToggle(part)}\r\n                  >\r\n                    {part}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              {errors.bodyParts && <p className=\"mt-1 text-sm text-red-400\">{errors.bodyParts}</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"type\" className=\"block text-sm font-medium text-white/90\">\r\n                Exercise Type\r\n              </label>\r\n              <select\r\n                id=\"type\"\r\n                required\r\n                className=\"mt-1 block w-full rounded-md border-gray-600 bg-[#2a2a2a] text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                value={exercise.type}\r\n                onChange={handleTypeChange}\r\n              >\r\n                {exerciseTypes.map((type) => (\r\n                  <option key={type} value={type}>\r\n                    {type}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"category\" className=\"block text-sm font-medium text-white/90\">\r\n                Training Category\r\n              </label>\r\n              <select\r\n                id=\"category\"\r\n                required\r\n                className=\"mt-1 block w-full rounded-md border-gray-600 bg-[#2a2a2a] text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                value={exercise.trainingCategory}\r\n                onChange={(e) => handleCategoryChange(e.target.value as TrainingCategory)}\r\n              >\r\n                {trainingCategories.map((category) => (\r\n                  <option key={category} value={category}>\r\n                    {category}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-white/90\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows={3}\r\n                className=\"mt-1 block w-full rounded-md border-gray-600 bg-[#2a2a2a] text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm placeholder-white/40\"\r\n                value={exercise.description}\r\n                onChange={(e) => setExercise(prev => ({ ...prev, description: e.target.value }))}\r\n              />\r\n              {errors.description && <p className=\"mt-1 text-sm text-red-400\">{errors.description}</p>}\r\n            </div>\r\n\r\n            <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"inline-flex w-full justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 sm:col-start-2 sm:text-sm disabled:opacity-50\"\r\n              >\r\n                {isSubmitting ? 'Creating...' : 'Create Exercise'}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 sm:col-start-1 sm:mt-0 sm:text-sm\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateExerciseDialog;\r\n"],"names":["useAuth","dispatch","useDispatch","user","isLoading","isAuthenticated","useSelector","state","useEffect","getCurrentUser","setUser","setLoading","bodyParts","exerciseTypes","trainingCategories","CreateExerciseDialog","onClose","onSuccess","isSubmitting","setIsSubmitting","useState","exercise","setExercise","errors","setErrors","validateForm","newErrors","_a","_b","_c","handleSubmit","toast","exerciseData","p","docRef","addDoc","collection","db","error","handleTypeChange","value","prev","handleCategoryChange","category","handleBodyPartToggle","part","jsx","jsxs","type"],"mappings":"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"}