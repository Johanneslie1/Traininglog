{"version":3,"file":"Login-DWN8XHOW.js","sources":["../../src/features/auth/Login.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { loginUser } from '@/services/firebase/auth';\r\nimport { setUser } from '@/features/auth/authSlice';\r\nimport { auth } from '@/services/firebase/config';\r\n\r\nconst loginSchema = z.object({\r\n  email: z.string().email('Invalid email address'),\r\n  password: z.string().min(6, 'Password must be at least 6 characters'),\r\n});\r\n\r\ntype LoginFormData = z.infer<typeof loginSchema>;\r\n\r\nconst Login = () => {\r\n  const [error, setError] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<LoginFormData>({\r\n    resolver: zodResolver(loginSchema),\r\n  });\r\n  const onSubmit = async (data: LoginFormData) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError('');\r\n      console.log('Attempting login...');\r\n      \r\n      // Test mode bypass for testing purposes\r\n      if (data.email === 'test@test.com' && data.password === 'test123') {\r\n        console.log('Using test mode bypass');\r\n        const testUser = {\r\n          id: 'test-user-id',\r\n          email: 'test@test.com',\r\n          firstName: 'Test',\r\n          lastName: 'User',\r\n          role: 'athlete' as const,\r\n          createdAt: new Date(),\r\n          updatedAt: new Date()\r\n        };\r\n        dispatch(setUser(testUser));\r\n        // Mock Firebase auth state for test user\r\n        Object.defineProperty(auth, 'currentUser', {\r\n          get: () => ({\r\n            uid: 'test-user-id',\r\n            email: 'test@test.com'\r\n          }),\r\n          configurable: true\r\n        });\r\n        console.log('Test user dispatched to Redux store and Firebase auth mocked');\r\n        navigate('/');\r\n        console.log('Navigation attempted');\r\n        return;\r\n      }\r\n      \r\n      const user = await loginUser(data);\r\n      console.log('Login successful, user:', user);\r\n      dispatch(setUser(user));\r\n      console.log('User dispatched to Redux store');\r\n      // Navigate to root which has the protected route with ExerciseLog\r\n      navigate('/');\r\n      console.log('Navigation attempted');\r\n    } catch (err: any) {\r\n      console.error('Login error:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Sign in to your account\r\n          </h2>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                {...register('email')}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n              />\r\n              {errors.email && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                {...register('password')}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n              />\r\n              {errors.password && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"text-sm text-red-600 text-center\">{error}</div>\r\n          )}\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\r\n            >\r\n              {isLoading ? 'Signing in...' : 'Sign in'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["loginSchema","z.object","z.string","Login","error","setError","useState","isLoading","setIsLoading","navigate","useNavigate","dispatch","useDispatch","register","handleSubmit","errors","useForm","zodResolver","onSubmit","data","setUser","auth","user","loginUser","err","jsxs","jsx"],"mappings":"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"}