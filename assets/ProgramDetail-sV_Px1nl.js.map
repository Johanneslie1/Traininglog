{"version":3,"mappings":"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","names":["ArrowLeftIcon","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ChevronDownIcon","CogIcon","SessionExerciseLogOptions","onClose","onSave","handleSelectExercise","useCallback","exercise","exerciseWithSets","error","jsxs","jsx","ExerciseSearch","SessionModal","isOpen","initialData","name","setName","useState","exercises","setExercises","ex","showAddExercise","setShowAddExercise","getCurrentUserId","auth","getAuth","_a","handleAddExercise","prev","removeExercise","id","idx","handleSubmit","e","userId","sessionExercises","_b","set","session","ProgramDetail","program","onBack","onUpdate","selectionMode","sessions","showSessionModal","setShowSessionModal","showSessionBuilder","setShowSessionBuilder","showProgramEditor","setShowProgramEditor","editingSession","setEditingSession","expandedSessions","setExpandedSessions","setIsLoading","isDeletingProgram","setIsDeletingProgram","updateSession","deleteProgram","updateProgram","usePrograms","React","timeoutId","toggleSession","sessionId","handleDeleteSession","deleteSession","updatedSessions","s","handleSessionSave","existingOrders","nextOrder","sessionToCreate","newSessionId","createSession","newSession","a","b","handleDeleteProgram","handleProgramEdit","handleProgramUpdate","updatedProgram","programToUpdate","handleSessionEdit","handleSessionBuilderSave","sessionData","updatedSession","user","n","Fragment","TrashIcon","PencilIcon","index","ProgramBuilder","SessionBuilder"],"ignoreList":[0,1,2],"sources":["../../node_modules/@heroicons/react/outline/esm/ArrowLeftIcon.js","../../node_modules/@heroicons/react/outline/esm/ChevronDownIcon.js","../../node_modules/@heroicons/react/outline/esm/CogIcon.js","../../src/features/programs/SessionExerciseLogOptions.tsx","../../src/features/programs/SessionModal.tsx","../../src/features/programs/ProgramDetail.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction ArrowLeftIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10 19l-7-7m0 0l7-7m-7 7h18\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction ChevronDownIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 9l-7 7-7-7\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction CogIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CogIcon);\nexport default ForwardRef;","import React, { useCallback } from 'react';\r\nimport { Exercise } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\nimport ExerciseSearch from '../exercises/ExerciseSearch';\r\n\r\nexport type ExerciseWithSets = Exercise & { sets: ExerciseSet[] };\r\n\r\ninterface SessionExerciseLogOptionsProps {\r\n  onClose: () => void;\r\n  onSave: (exercise: ExerciseWithSets) => void;\r\n}\r\n\r\nconst SessionExerciseLogOptions: React.FC<SessionExerciseLogOptionsProps> = ({ onClose, onSave }) => {\r\n  const handleSelectExercise = useCallback((exercise: Omit<Exercise, 'id'>) => {\r\n    try {\r\n      const exerciseWithSets: ExerciseWithSets = {\r\n        ...exercise,\r\n        id: crypto.randomUUID(),\r\n        sets: [] // Empty sets - will be logged during workout\r\n      };\r\n      onSave(exerciseWithSets);\r\n    } catch (error) {\r\n      console.error('Error adding exercise:', error);\r\n    }\r\n  }, [onSave]);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black z-50 flex flex-col\">\r\n      {/* Header */}\r\n      <header className=\"flex items-center justify-between px-4 py-4 bg-black/95 backdrop-blur-sm border-b border-white/10\">\r\n        <h1 className=\"text-white text-xl font-medium\">Add Exercise</h1>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n        >\r\n          <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n      </header>\r\n\r\n      {/* Exercise Search */}\r\n      <main className=\"flex-1 overflow-hidden\">\r\n        <ExerciseSearch onClose={onClose} onSelectExercise={handleSelectExercise} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionExerciseLogOptions;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { ProgramSession } from '@/types/program';\r\nimport SessionExerciseLogOptions, { ExerciseWithSets as SessionExerciseWithSets } from './SessionExerciseLogOptions';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\ninterface SessionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (session: ProgramSession) => void;\r\n  initialData?: ProgramSession;\r\n}\r\n\r\nconst SessionModal: React.FC<SessionModalProps> = ({ isOpen, onClose, onSave, initialData }) => {\r\n  const [name, setName] = useState(initialData?.name || '');\r\n  const [exercises, setExercises] = useState<SessionExerciseWithSets[]>(\r\n    initialData?.exercises.map(ex => ({\r\n      id: ex.id,\r\n      name: ex.name,\r\n      description: '',\r\n      type: 'strength',\r\n      category: 'compound',\r\n      primaryMuscles: [],\r\n      secondaryMuscles: [],\r\n      defaultUnit: 'kg',\r\n      metrics: {\r\n        trackWeight: true,\r\n        trackReps: true\r\n      },\r\n      instructions: [],\r\n      sets: [] // Empty sets - will be logged during workout\r\n    })) || []\r\n  );\r\n  const [showAddExercise, setShowAddExercise] = useState(false);\r\n\r\n  // Get current user ID\r\n  const getCurrentUserId = useCallback(() => {\r\n    const auth = getAuth();\r\n    if (!auth.currentUser?.uid) {\r\n      throw new Error('User must be logged in to perform this action');\r\n    }\r\n    return auth.currentUser.uid;\r\n  }, []);\r\n\r\n  // Add a single exercise (from SessionExerciseLogOptions)\r\n  const handleAddExercise = (exercise: SessionExerciseWithSets) => {\r\n    setExercises(prev => [...prev, exercise]);\r\n    setShowAddExercise(false);\r\n  };\r\n\r\n  const removeExercise = (id: string) => {\r\n    setExercises(prev => prev.filter((ex, idx) => ex.id !== id && idx.toString() !== id));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!name) return;\r\n    \r\n    try {\r\n      const userId = getCurrentUserId();\r\n      console.log('[SessionModal] Creating/updating session:', {\r\n        isEdit: !!initialData,\r\n        name,\r\n        exerciseCount: exercises.length\r\n      });\r\n      \r\n      // Convert ExerciseWithSets to proper format for saving\r\n      const sessionExercises = exercises.map(ex => ({\r\n        id: ex.id || '', // Ensure id is a string, server will replace if needed\r\n        name: ex.name,\r\n        sets: ex.sets.length || 3,\r\n        reps: ex.sets[0]?.reps || 10,\r\n        weight: ex.sets[0]?.weight || 0,\r\n        setsData: ex.sets.map(set => ({\r\n          reps: set.reps || 10,\r\n          weight: typeof set.weight === 'number' ? set.weight : 0,\r\n          difficulty: set.difficulty || 'MODERATE'\r\n        }))\r\n      }));\r\n      \r\n      const session: ProgramSession = {\r\n        id: initialData?.id || '', // Server will replace this for new sessions\r\n        name,\r\n        exercises: sessionExercises,\r\n        userId,\r\n        order: initialData?.order ?? 0\r\n      };\r\n\r\n      console.log('[SessionModal] Saving session:', session);\r\n      onSave(session);\r\n      \r\n      // Reset form\r\n      setName('');\r\n      setExercises([]);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('[SessionModal] Error saving session:', error);\r\n      alert(error instanceof Error ? error.message : 'Failed to save session');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 z-50\">\r\n      <form onSubmit={handleSubmit} className=\"bg-[#23272F] p-6 rounded-lg w-full max-w-sm shadow-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-white\">Add Session</h2>\r\n        <input\r\n          className=\"w-full mb-3 px-3 py-2 rounded bg-[#181A20] text-white border border-white/10\"\r\n          placeholder=\"Session Name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-white text-lg font-medium mb-3\">Exercises</h3>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => setShowAddExercise(true)} \r\n            className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors mb-4\"\r\n          >\r\n            Add Exercise\r\n          </button>\r\n          {exercises.length === 0 ? (\r\n            <div className=\"text-gray-400 text-center py-4 bg-gray-800 rounded-lg\">\r\n              No exercises added yet\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-2\">\r\n              {exercises.map((ex, idx) => (\r\n                <div key={ex.id || idx} className=\"flex items-center justify-between p-3 bg-gray-800 rounded-lg\">\r\n                  <span className=\"text-gray-200 font-medium\">{ex.name}</span>\r\n                  <button \r\n                    type=\"button\" \r\n                    onClick={() => removeExercise(ex.id || idx.toString())}\r\n                    className=\"text-red-400 hover:text-red-300 transition-colors\"\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end gap-2\">\r\n          <button type=\"button\" onClick={onClose} className=\"px-4 py-2 bg-gray-700 text-white rounded-lg\">Cancel</button>\r\n          <button type=\"submit\" className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\">Save</button>\r\n        </div>\r\n      </form>\r\n      \r\n      {showAddExercise && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-60\">\r\n          <div className=\"bg-[#23272F] p-6 rounded-lg w-full max-w-md shadow-lg\">\r\n            <SessionExerciseLogOptions\r\n              onSave={handleAddExercise}\r\n              onClose={() => setShowAddExercise(false)}\r\n              // Removed onCopyFromAnotherDay prop (feature removed)\r\n              // Removed onCopyPreviousSession prop (feature removed from this context)\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Program, ProgramSession } from '@/types/program';\r\nimport SessionModal from './SessionModal';\r\nimport SessionBuilder from './SessionBuilder';\r\nimport ProgramBuilder from './ProgramBuilder';\r\nimport { PencilIcon, TrashIcon, ChevronDownIcon, CogIcon, ArrowLeftIcon } from '@heroicons/react/outline';\r\nimport { usePrograms } from '@/context/ProgramsContext';\r\nimport { createSession, deleteSession } from '@/services/programService';\r\n\r\ninterface Props {\r\n  program: Program;\r\n  onBack: () => void;\r\n  onUpdate: (updated: Program) => void;\r\n  selectionMode?: boolean;\r\n}\r\n\r\nconst ProgramDetail: React.FC<Props> = ({ program, onBack, onUpdate, selectionMode = false }) => {\r\n  const sessions: ProgramSession[] = program.sessions ?? [];\r\n  const [showSessionModal, setShowSessionModal] = useState(false);\r\n  const [showSessionBuilder, setShowSessionBuilder] = useState(false);\r\n  const [showProgramEditor, setShowProgramEditor] = useState(false);\r\n  const [editingSession, setEditingSession] = useState<ProgramSession | null>(null);\r\n  const [expandedSessions, setExpandedSessions] = useState<string[]>([]);\r\n  const [, setIsLoading] = useState(false);\r\n  const [isDeletingProgram, setIsDeletingProgram] = useState(false);\r\n  const { updateSessionInProgram: updateSession, deleteProgram, updateProgram } = usePrograms();\r\n\r\n  React.useEffect(() => {\r\n    // Set a timeout to show loading state for maximum 2 seconds\r\n    let timeoutId: NodeJS.Timeout;\r\n    \r\n    if (sessions.length === 0) {\r\n      setIsLoading(true);\r\n      timeoutId = setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 2000);\r\n    }\r\n\r\n    return () => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    };\r\n  }, [sessions.length]);\r\n\r\n  const toggleSession = useCallback((sessionId: string) => {\r\n    setExpandedSessions(prev => \r\n      prev.includes(sessionId) \r\n        ? prev.filter(id => id !== sessionId)\r\n        : [...prev, sessionId]\r\n    );\r\n  }, []);\r\n\r\n  const handleDeleteSession = useCallback(async (sessionId: string) => {\r\n    if (window.confirm('Are you sure you want to delete this session?')) {\r\n      try {\r\n        console.log('[ProgramDetail] Deleting session:', sessionId);\r\n        // Delete from Firestore first\r\n        await deleteSession(program.id, sessionId);\r\n        console.log('[ProgramDetail] Session deleted from Firestore');\r\n        \r\n        // Update local state\r\n        const updatedSessions = sessions.filter(s => s.id !== sessionId);\r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        console.log('[ProgramDetail] Local state updated after session deletion');\r\n      } catch (error) {\r\n        console.error('Error deleting session:', error);\r\n        alert(error instanceof Error ? error.message : 'Failed to delete session. Please try again.');\r\n      }\r\n    }\r\n  }, [program, sessions, onUpdate]);\r\n\r\n  const handleSessionSave = useCallback(async (session: ProgramSession) => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('[ProgramDetail] Starting session save:', { \r\n        sessionId: session.id, \r\n        sessionName: session.name, \r\n        isEdit: !!editingSession,\r\n        exerciseCount: session.exercises.length \r\n      });\r\n      \r\n      if (editingSession) {\r\n        // Update existing session's exercises\r\n        console.log('[ProgramDetail] Updating existing session via updateSession service');\r\n        await updateSession(program.id, session.id, session.exercises);\r\n        \r\n        // Update local state, preserving order\r\n        const updatedSessions = sessions.map(s => \r\n          s.id === session.id \r\n            ? { ...session, order: s.order } \r\n            : s);\r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        console.log('[ProgramDetail] Local state updated for existing session');\r\n      } else {\r\n        // Add new session - persist to Firestore first\r\n        console.log('[ProgramDetail] Creating new session via createSession service');\r\n        const existingOrders = sessions.map(s => s.order ?? 0);\r\n        const nextOrder = existingOrders.length > 0 ? Math.max(...existingOrders) + 1 : 0;\r\n        \r\n        const sessionToCreate = {\r\n          name: session.name,\r\n          exercises: session.exercises.map(ex => ({\r\n            id: ex.id || undefined,\r\n            name: ex.name,\r\n            notes: ex.notes,\r\n            order: ex.order\r\n          })),\r\n          order: nextOrder\r\n        };\r\n        \r\n        // Create session in Firestore\r\n        const newSessionId = await createSession(program.id, sessionToCreate);\r\n        console.log('[ProgramDetail] New session created in Firestore with ID:', newSessionId);\r\n        \r\n        // Update local state with the new session including the Firestore-generated ID\r\n        const newSession = {\r\n          ...session,\r\n          id: newSessionId,\r\n          order: nextOrder\r\n        };\r\n        \r\n        // Add session and sort by order\r\n        const updatedSessions = [...sessions, newSession]\r\n          .sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\r\n          \r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        console.log('[ProgramDetail] Local state updated with new session');\r\n      }\r\n      \r\n      setShowSessionModal(false);\r\n      setEditingSession(null);\r\n      \r\n      // Expand the newly added/edited session\r\n      if (!expandedSessions.includes(session.id)) {\r\n        setExpandedSessions(prev => [...prev, session.id]);\r\n      }\r\n    } catch (error) {\r\n      console.error('[ProgramDetail] Error saving session:', error);\r\n      alert(error instanceof Error ? error.message : 'Failed to save session. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [program, sessions, onUpdate, editingSession, updateSession, expandedSessions]);\r\n\r\n  const handleDeleteProgram = async () => {\r\n    if (window.confirm(`Are you sure you want to delete the program \"${program.name}\"? This will delete all sessions and exercises. This action cannot be undone.`)) {\r\n      setIsDeletingProgram(true);\r\n      \r\n      try {\r\n        console.log('[ProgramDetail] Deleting program:', program.id);\r\n        await deleteProgram(program.id);\r\n        console.log('[ProgramDetail] Program deleted successfully');\r\n        // Navigate back to programs list after successful deletion\r\n        onBack();\r\n      } catch (error) {\r\n        console.error('[ProgramDetail] Error deleting program:', error);\r\n        alert(error instanceof Error ? error.message : 'Failed to delete program. Please try again.');\r\n      } finally {\r\n        setIsDeletingProgram(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleProgramEdit = () => {\r\n    setShowProgramEditor(true);\r\n  };\r\n\r\n  const handleProgramUpdate = async (updatedProgram: Omit<Program, 'id' | 'userId'>) => {\r\n    try {\r\n      const programToUpdate: Program = {\r\n        ...program,\r\n        ...updatedProgram,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      await updateProgram(program.id, programToUpdate);\r\n      onUpdate(programToUpdate);\r\n      setShowProgramEditor(false);\r\n    } catch (error) {\r\n      console.error('[ProgramDetail] Error updating program:', error);\r\n      alert(error instanceof Error ? error.message : 'Failed to update program. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSessionEdit = (session: ProgramSession) => {\r\n    setEditingSession(session);\r\n    setShowSessionBuilder(true);\r\n  };\r\n\r\n  const handleSessionBuilderSave = async (sessionData: Omit<ProgramSession, 'userId'>) => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      if (editingSession) {\r\n        // Update existing session\r\n        const updatedSession = {\r\n          ...sessionData,\r\n          id: editingSession.id,\r\n          userId: editingSession.userId\r\n        };\r\n        \r\n        await updateSession(program.id, editingSession.id, updatedSession.exercises);\r\n        \r\n        // Update local state\r\n        const updatedSessions = sessions.map(s => \r\n          s.id === editingSession.id ? updatedSession : s\r\n        );\r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n      } else {\r\n        // Create new session - use the existing logic from handleSaveSession\r\n        const user = await import('firebase/auth').then(auth => auth.getAuth().currentUser);\r\n        if (!user) throw new Error('User must be logged in');\r\n        \r\n        const session = {\r\n          ...sessionData,\r\n          userId: user.uid\r\n        };\r\n        \r\n        const nextOrder = Math.max(...sessions.map(s => s.order ?? 0), 0) + 1;\r\n        const sessionToCreate = {\r\n          ...session,\r\n          exercises: session.exercises.map(ex => ({\r\n            ...ex,\r\n            id: ex.id || undefined\r\n          })),\r\n          order: nextOrder\r\n        };\r\n        \r\n        const newSessionId = await createSession(program.id, sessionToCreate);\r\n        const newSession = {\r\n          ...session,\r\n          id: newSessionId,\r\n          order: nextOrder\r\n        };\r\n        \r\n        const updatedSessions = [...sessions, newSession]\r\n          .sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\r\n          \r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        \r\n        if (!expandedSessions.includes(newSession.id)) {\r\n          setExpandedSessions(prev => [...prev, newSession.id]);\r\n        }\r\n      }\r\n      \r\n      setShowSessionBuilder(false);\r\n      setEditingSession(null);\r\n    } catch (error) {\r\n      console.error('[ProgramDetail] Error saving session:', error);\r\n      alert(error instanceof Error ? error.message : 'Failed to save session. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black/90 text-white\">\r\n      <div className=\"p-6\">\r\n      {/* Header - Match LogOptions styling */}\r\n      <header className=\"sticky top-0 flex items-center justify-between p-4 bg-[#1a1a1a] border-b border-white/10\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <button\r\n            onClick={onBack}\r\n            className=\"p-2 hover:bg-white/10 rounded-xl transition-all duration-200\"\r\n          >\r\n            <ArrowLeftIcon className=\"w-5 h-5 text-gray-300\" />\r\n          </button>\r\n          <div>\r\n            <h1 className=\"text-xl font-semibold text-white\">{program.name}</h1>\r\n            {program.description && (\r\n              <p className=\"text-sm text-gray-400 mt-0.5\">{program.description}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Quick Actions */}\r\n        <div className=\"flex items-center gap-2\">\r\n          {!selectionMode && (\r\n            <>\r\n              <button\r\n                onClick={handleProgramEdit}\r\n                className=\"p-2.5 hover:bg-gray-800/60 rounded-xl transition-all duration-200 text-blue-400 hover:text-blue-300\"\r\n                title=\"Edit program\"\r\n                aria-label={`Edit program ${program.name}`}\r\n              >\r\n                <CogIcon className=\"w-5 h-5\" />\r\n              </button>\r\n              <button\r\n                onClick={handleDeleteProgram}\r\n                disabled={isDeletingProgram}\r\n                className=\"p-2.5 hover:bg-gray-800/60 rounded-xl transition-all duration-200 text-red-400 hover:text-red-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                title=\"Delete program\"\r\n                aria-label={`Delete program ${program.name}`}\r\n              >\r\n                {isDeletingProgram ? (\r\n                  <div className=\"w-5 h-5 border-2 border-red-400 border-t-transparent rounded-full animate-spin\" />\r\n                ) : (\r\n                  <TrashIcon className=\"w-5 h-5\" />\r\n                )}\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-1 overflow-y-auto overscroll-contain pb-safe min-h-0 p-6\">\r\n\r\n      <div className=\"space-y-3\">\r\n        {sessions.length > 0 ? (\r\n          sessions.map((session) => (\r\n            <div key={session.id} className=\"bg-[#1a1a1a] rounded-2xl overflow-hidden border border-gray-800 hover:border-gray-700 transition-all duration-200\">\r\n              {/* Session Header */}\r\n              <div className=\"px-5 py-4 flex items-center justify-between border-b border-gray-800/50\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <h3 className=\"text-lg font-semibold text-white\">{session.name}</h3>\r\n                    <span className=\"text-xs font-medium text-gray-400 bg-gray-800/60 px-2.5 py-1 rounded-full\">\r\n                      {session.exercises.length} exercises\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-1\">\r\n                  {!selectionMode && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => handleSessionEdit(session)}\r\n                        className=\"p-2 hover:bg-gray-800/60 rounded-xl transition-all duration-200 text-blue-400 hover:text-blue-300\"\r\n                        title=\"Edit session\"\r\n                      >\r\n                        <PencilIcon className=\"w-4 h-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteSession(session.id)}\r\n                        className=\"p-2 hover:bg-gray-800/60 rounded-xl transition-all duration-200 text-red-400 hover:text-red-300\"\r\n                        title=\"Delete session\"\r\n                      >\r\n                        <TrashIcon className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  <button\r\n                    onClick={() => toggleSession(session.id)}\r\n                    className=\"p-2 hover:bg-gray-800/60 rounded-xl transition-all duration-200\"\r\n                    title={expandedSessions.includes(session.id) ? \"Collapse session\" : \"Expand session\"}\r\n                  >\r\n                    <ChevronDownIcon\r\n                      className={`w-4 h-4 text-gray-400 transition-transform duration-200 ${\r\n                        expandedSessions.includes(session.id) ? 'rotate-180' : ''\r\n                      }`}\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Session Content */}\r\n              {expandedSessions.includes(session.id) && (\r\n                <div className=\"p-1\">\r\n                  {session.exercises.map((exercise, index) => (\r\n                    <div \r\n                      key={exercise.id}\r\n                      className={`px-4 py-3 hover:bg-gray-800/40 transition-all duration-200 rounded-xl mx-1 ${\r\n                        index !== session.exercises.length - 1 ? 'mb-1' : ''\r\n                      }`}\r\n                    >\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <h4 className=\"text-base font-medium text-white\">{exercise.name}</h4>\r\n                          <div className=\"text-sm text-gray-400 mt-0.5\">\r\n                            Sets and reps will be logged during workout\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"w-16 h-16 mx-auto mb-4 rounded-2xl bg-gray-800/50 flex items-center justify-center\">\r\n              <svg className=\"w-8 h-8 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n              </svg>\r\n            </div>\r\n            <h3 className=\"text-lg font-medium text-white mb-2\">No sessions yet</h3>\r\n            <p className=\"text-gray-400 text-sm mb-6\">Create your first training session to get started</p>\r\n          </div>\r\n        )}\r\n        \r\n        {!selectionMode && (\r\n          <button \r\n            onClick={() => {\r\n              setEditingSession(null);\r\n              setShowSessionBuilder(true);\r\n            }} \r\n            className=\"w-full py-4 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-2xl hover:from-blue-700 hover:to-blue-800 transition-all duration-200 flex items-center justify-center gap-3 font-medium shadow-lg hover:shadow-xl border border-blue-500/20\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n            Add New Session\r\n          </button>\r\n        )}\r\n      </div>\r\n      </main>\r\n\r\n      {/* Program Editor Modal */}\r\n      {showProgramEditor && (\r\n        <ProgramBuilder\r\n          onClose={() => setShowProgramEditor(false)}\r\n          onSave={handleProgramUpdate}\r\n          initialProgram={program}\r\n        />\r\n      )}\r\n\r\n      {/* Session Builder Modal */}\r\n      {showSessionBuilder && (\r\n        <SessionBuilder\r\n          onClose={() => {\r\n            setShowSessionBuilder(false);\r\n            setEditingSession(null);\r\n          }}\r\n          onSave={handleSessionBuilderSave}\r\n          initialSession={editingSession || undefined}\r\n        />\r\n      )}\r\n\r\n      {/* Legacy Session Modal - Keep for backward compatibility if needed */}\r\n      <SessionModal \r\n        isOpen={showSessionModal} \r\n        onClose={() => setShowSessionModal(false)} \r\n        onSave={handleSessionSave}\r\n      />\r\n\r\n      {editingSession && showSessionModal && (\r\n        <SessionModal \r\n          isOpen={true}\r\n          onClose={() => setEditingSession(null)}\r\n          onSave={handleSessionSave}\r\n          initialData={editingSession}\r\n        />\r\n      )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramDetail;\r\n"],"file":"assets/ProgramDetail-sV_Px1nl.js"}