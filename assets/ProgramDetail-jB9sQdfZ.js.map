{"version":3,"file":"ProgramDetail-jB9sQdfZ.js","sources":["../../src/features/exercises/ExerciseLogOptionsForm.tsx","../../src/features/programs/SessionExerciseLogOptions.tsx","../../src/features/programs/SessionModal.tsx","../../node_modules/@heroicons/react/outline/esm/ChevronDownIcon.js","../../node_modules/@heroicons/react/outline/esm/PencilIcon.js","../../node_modules/@heroicons/react/outline/esm/TrashIcon.js","../../src/features/programs/ProgramDetail.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ExerciseSearch from './ExerciseSearch';\r\nimport { ExerciseSetLogger } from './ExerciseSetLogger';\r\nimport { Exercise } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\n\r\nexport interface ExerciseLogOptionsFormProps {\r\n  onClose: () => void;\r\n  onSave: (exercises: ExerciseWithSets[]) => void;\r\n  initialExercises?: ExerciseWithSets[];\r\n}\r\n\r\nexport type ExerciseTemplate = Omit<Exercise, 'id'>;\r\n\r\nexport type ExerciseWithSets = Exercise & { sets: ExerciseSet[] };\r\n\r\ntype View = 'main' | 'search' | 'setLogger';\r\n\r\nconst ExerciseLogOptionsForm: React.FC<ExerciseLogOptionsFormProps> = ({ onClose, onSave, initialExercises = [] }) => {\r\n  const [view, setView] = useState<View>('main');\r\n  const [exercises, setExercises] = useState<ExerciseWithSets[]>(initialExercises);\r\n  const [currentExercise, setCurrentExercise] = useState<ExerciseWithSets | null>(null);\r\n\r\n  const handleAddExercise = useCallback((exercise: Exercise | ExerciseTemplate) => {\r\n    // If exercise has no id, generate one\r\n    const id = (exercise as Exercise).id || `temp-${Date.now()}`;\r\n    setCurrentExercise({ ...(exercise as Exercise), id, sets: [] });\r\n    setView('setLogger');\r\n  }, []);\r\n\r\n  const handleSaveSets = useCallback((sets: ExerciseSet[]) => {\r\n    if (!currentExercise) return;\r\n    setExercises(prev => [...prev, { ...currentExercise, sets }]);\r\n    setCurrentExercise(null);\r\n    setView('main');\r\n  }, [currentExercise]);\r\n\r\n  const handleRemoveExercise = (id: string) => {\r\n    setExercises(prev => prev.filter(ex => ex.id !== id));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSave(exercises);\r\n  };\r\n\r\n  if (view === 'search') {\r\n    return (\r\n      <ExerciseSearch\r\n        onClose={() => setView('main')}\r\n        onSelectExercise={handleAddExercise}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'setLogger' && currentExercise) {\r\n    return (\r\n      <ExerciseSetLogger\r\n        exercise={currentExercise}\r\n        onSave={handleSaveSets}\r\n        onCancel={() => setView('main')}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <h3 className=\"text-lg font-semibold text-white mb-2\">Exercises</h3>\r\n      {exercises.length === 0 && <div className=\"text-gray-500\">No exercises added yet.</div>}\r\n      <ul>\r\n        {exercises.map((ex, idx) => (\r\n          <li key={ex.id || idx} className=\"flex items-center gap-2 text-gray-200 text-sm mb-1\">\r\n            {ex.name} - {ex.sets.length} sets\r\n            <button type=\"button\" onClick={() => handleRemoveExercise(ex.id)} className=\"ml-2 text-red-400\">Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button type=\"button\" onClick={() => setView('search')} className=\"px-3 py-1 bg-blue-700 text-white rounded\">Add Exercise</button>\r\n      <div className=\"flex justify-end gap-2\">\r\n        <button type=\"button\" onClick={onClose} className=\"px-4 py-2 bg-gray-700 text-white rounded-lg\">Cancel</button>\r\n        <button type=\"submit\" className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExerciseLogOptionsForm;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Exercise } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\nimport ExerciseSearch from '../exercises/ExerciseSearch';\r\nimport { ExerciseSetLogger } from '../exercises/ExerciseSetLogger';\r\n\r\nexport type ExerciseWithSets = Exercise & { sets: ExerciseSet[] };\r\n\r\ninterface SessionExerciseLogOptionsProps {\r\n  onClose: () => void;\r\n  onSave: (exercise: ExerciseWithSets) => void;\r\n}\r\n\r\nconst SessionExerciseLogOptions: React.FC<SessionExerciseLogOptionsProps> = ({ onClose, onSave }) => {\r\n  const [step, setStep] = useState<'search' | 'setLogger'>('search');\r\n  const [currentExercise, setCurrentExercise] = useState<Exercise | null>(null);\r\n  const [exerciseSets, setExerciseSets] = useState<ExerciseSet[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSelectExercise = useCallback((exercise: Omit<Exercise, 'id'>) => {\r\n    try {\r\n      setCurrentExercise({\r\n        ...exercise,\r\n        id: crypto.randomUUID(),\r\n        sets: []\r\n      } as Exercise);\r\n      setExerciseSets([]);\r\n      setStep('setLogger');\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to add exercise. Please try again.');\r\n      console.error('Error adding exercise:', err);\r\n    }\r\n  }, []);\r\n\r\n  const handleSave = useCallback((sets: ExerciseSet[]) => {\r\n    if (!currentExercise) return;\r\n    try {\r\n      setExerciseSets(sets);\r\n      onSave({ ...currentExercise, sets });\r\n    } catch (err) {\r\n      setError('Failed to save exercise. Please try again.');\r\n      console.error('Error saving exercise:', err);\r\n    }\r\n  }, [currentExercise, onSave]);\r\n\r\n  // Step 1: Search for exercise\r\n  if (step === 'search') {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/90 flex items-center justify-center p-4 z-50\">\r\n        <div className=\"bg-[#1a1a1a] rounded-lg w-full max-w-4xl flex flex-col h-[90vh]\">\r\n          <div className=\"p-6 border-b border-white/10 flex items-center justify-between\">\r\n            <h2 className=\"text-2xl font-medium text-white\">Add Exercise</h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          {error && (\r\n            <div className=\"p-4 bg-red-500/10 border border-red-500/20 m-4 rounded-lg\">\r\n              <p className=\"text-red-500\">{error}</p>\r\n            </div>\r\n          )}\r\n          <ExerciseSearch\r\n            onClose={onClose}\r\n            onSelectExercise={handleSelectExercise}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Step 2: Set logger\r\n  if (step === 'setLogger' && currentExercise) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/90 flex items-center justify-center p-4 z-50\">\r\n        <div className=\"bg-[#1a1a1a] rounded-lg w-full max-w-4xl h-[90vh] flex flex-col\">\r\n          <div className=\"p-6 border-b border-white/10\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <h2 className=\"text-xl font-medium text-white\">{currentExercise.name}</h2>\r\n              <div className=\"flex items-center gap-4\">\r\n                <button\r\n                  onClick={() => setStep('search')}\r\n                  className=\"text-gray-400 hover:text-white transition-colors\"\r\n                >\r\n                  Change Exercise\r\n                </button>\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {currentExercise.description && (\r\n              <p className=\"mt-2 text-gray-400\">{currentExercise.description}</p>\r\n            )}\r\n          </div>\r\n          {error && (\r\n            <div className=\"p-4 bg-red-500/10 border border-red-500/20 mx-4 mt-4 rounded-lg\">\r\n              <p className=\"text-red-500\">{error}</p>\r\n            </div>\r\n          )}\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <ExerciseSetLogger\r\n              exercise={currentExercise}\r\n              onSave={handleSave}\r\n              onCancel={onClose}\r\n              showPreviousSets={true}\r\n              isEditing={false}\r\n              previousSet={exerciseSets.length > 0 ? exerciseSets[exerciseSets.length - 1] : undefined}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default SessionExerciseLogOptions;","import React, { useState, useCallback } from 'react';\r\nimport { ProgramSession } from '@/types/program';\r\nimport ExerciseLogOptionsForm, { ExerciseWithSets } from '../exercises/ExerciseLogOptionsForm';\r\nimport SessionExerciseLogOptions, { ExerciseWithSets as SessionExerciseWithSets } from './SessionExerciseLogOptions';\r\nimport { ExerciseSetLogger } from '../exercises/ExerciseSetLogger';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\ninterface SessionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (session: ProgramSession) => void;\r\n  initialData?: ProgramSession;\r\n}\r\n\r\nconst SessionModal: React.FC<SessionModalProps> = ({ isOpen, onClose, onSave, initialData }) => {\r\n  const [name, setName] = useState(initialData?.name || '');\r\n  const [exercises, setExercises] = useState<ExerciseWithSets[]>(\r\n    initialData?.exercises.map(ex => ({\r\n      id: ex.id,\r\n      name: ex.name,\r\n      description: '',\r\n      type: 'strength',\r\n      category: 'compound',\r\n      primaryMuscles: [],\r\n      secondaryMuscles: [],\r\n      defaultUnit: 'kg',\r\n      metrics: {\r\n        trackWeight: true,\r\n        trackReps: true\r\n      },\r\n      instructions: [],\r\n      sets: Array(ex.sets).fill({\r\n        reps: ex.reps,\r\n        weight: ex.weight || 0,\r\n        difficulty: 'MODERATE'\r\n      })\r\n    })) || []\r\n  );\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showAddExercise, setShowAddExercise] = useState(false);\r\n  const [editIndex, setEditIndex] = useState<number | null>(null);\r\n\r\n  // Get current user ID\r\n  const getCurrentUserId = useCallback(() => {\r\n    const auth = getAuth();\r\n    if (!auth.currentUser?.uid) {\r\n      throw new Error('User must be logged in to perform this action');\r\n    }\r\n    return auth.currentUser.uid;\r\n  }, []);\r\n\r\n  // Add a single exercise (from SessionExerciseLogOptions)\r\n  const handleAddExercise = (exercise: SessionExerciseWithSets) => {\r\n    setExercises(prev => [...prev, exercise]);\r\n    setShowAddExercise(false);\r\n  };\r\n\r\n  // Edit an exercise's sets\r\n  const handleEditExercise = (sets: any[]) => {\r\n    if (editIndex === null) return;\r\n    setExercises(prev => prev.map((ex, idx) => idx === editIndex ? { ...ex, sets } : ex));\r\n    setEditIndex(null);\r\n  };\r\n\r\n  // For batch edit (legacy, keep for now)\r\n  const handleSaveExercises = (exs: ExerciseWithSets[]) => {\r\n    setExercises(exs);\r\n    setShowForm(false);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!name) return;\r\n    \r\n    try {\r\n      const userId = getCurrentUserId();\r\n      console.log('[SessionModal] Creating/updating session:', {\r\n        isEdit: !!initialData,\r\n        name,\r\n        exerciseCount: exercises.length\r\n      });\r\n      \r\n      // Convert ExerciseWithSets to proper format for saving\r\n      const sessionExercises = exercises.map(ex => ({\r\n        id: ex.id || '', // Ensure id is a string, server will replace if needed\r\n        name: ex.name,\r\n        sets: ex.sets.length || 3,\r\n        reps: ex.sets[0]?.reps || 10,\r\n        weight: ex.sets[0]?.weight || 0,\r\n        setsData: ex.sets.map(set => ({\r\n          reps: set.reps || 10,\r\n          weight: typeof set.weight === 'number' ? set.weight : 0,\r\n          difficulty: set.difficulty || 'MODERATE'\r\n        }))\r\n      }));\r\n      \r\n      const session: ProgramSession = {\r\n        id: initialData?.id || '', // Server will replace this for new sessions\r\n        name,\r\n        exercises: sessionExercises,\r\n        userId,\r\n        order: initialData?.order ?? 0\r\n      };\r\n\r\n      console.log('[SessionModal] Saving session:', session);\r\n      onSave(session);\r\n      \r\n      // Reset form\r\n      setName('');\r\n      setExercises([]);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('[SessionModal] Error saving session:', error);\r\n      alert(error instanceof Error ? error.message : 'Failed to save session');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 z-50\">\r\n      <form onSubmit={handleSubmit} className=\"bg-[#23272F] p-6 rounded-lg w-full max-w-sm shadow-lg\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-white\">Add Session</h2>\r\n        <input\r\n          className=\"w-full mb-3 px-3 py-2 rounded bg-[#181A20] text-white border border-white/10\"\r\n          placeholder=\"Session Name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n        <div className=\"mb-4\">\r\n          <h3 className=\"text-white mb-2\">Exercises</h3>\r\n          <div className=\"flex gap-2 mb-2\">\r\n            <button type=\"button\" onClick={() => setShowAddExercise(true)} className=\"px-3 py-1 bg-green-700 text-white rounded\">Add Exercise</button>\r\n            <button type=\"button\" onClick={() => setShowForm(true)} className=\"px-3 py-1 bg-blue-700 text-white rounded\">Edit All</button>\r\n          </div>\r\n          {exercises.length === 0 && <div className=\"text-gray-500\">No exercises added yet.</div>}\r\n          <ul>\r\n            {exercises.map((ex, idx) => (\r\n              <li key={ex.id || idx} className=\"text-gray-200 text-sm mb-1 flex items-center gap-2\">\r\n                {ex.name} - {ex.sets.length} sets\r\n                <button type=\"button\" className=\"text-blue-400 ml-2\" onClick={() => setEditIndex(idx)}>Edit</button>\r\n                <button type=\"button\" className=\"text-red-400 ml-2\" onClick={() => setExercises(prev => prev.filter((_, i) => i !== idx))}>Remove</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"flex justify-end gap-2\">\r\n          <button type=\"button\" onClick={onClose} className=\"px-4 py-2 bg-gray-700 text-white rounded-lg\">Cancel</button>\r\n          <button type=\"submit\" className=\"px-4 py-2 bg-blue-600 text-white rounded-lg\">Save</button>\r\n        </div>\r\n      </form>\r\n      {showForm && (\r\n        <>\r\n          {typeof editIndex === 'number' && exercises[editIndex] && (\r\n            <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-60\">\r\n              <div className=\"bg-[#23272F] p-6 rounded-lg w-full max-w-md shadow-lg\">\r\n                <ExerciseSetLogger\r\n                  exercise={exercises[editIndex]}\r\n                  onSave={handleEditExercise}\r\n                  onCancel={() => setEditIndex(null)}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-60\">\r\n            <div className=\"bg-[#23272F] p-6 rounded-lg w-full max-w-md shadow-lg\">\r\n              <ExerciseLogOptionsForm\r\n                initialExercises={exercises}\r\n                onSave={handleSaveExercises}\r\n                onClose={() => setShowForm(false)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {showAddExercise && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-60\">\r\n          <div className=\"bg-[#23272F] p-6 rounded-lg w-full max-w-md shadow-lg\">\r\n            <SessionExerciseLogOptions\r\n              onSave={handleAddExercise}\r\n              onClose={() => setShowAddExercise(false)}\r\n              // Removed onCopyFromAnotherDay prop (feature removed)\r\n              // Removed onCopyPreviousSession prop (feature removed from this context)\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionModal;\r\n","import * as React from \"react\";\n\nfunction ChevronDownIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 9l-7 7-7-7\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction PencilIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction TrashIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;","import React, { useState, useCallback } from 'react';\r\nimport { Program, ProgramSession } from '@/types/program';\r\nimport SessionModal from './SessionModal';\r\nimport { PencilIcon, TrashIcon, ChevronDownIcon } from '@heroicons/react/outline';\r\nimport { usePrograms } from '@/context/ProgramsContext';\r\nimport { createSession, deleteSession } from '@/services/programService';\r\n\r\ninterface Props {\r\n  program: Program;\r\n  onBack: () => void;\r\n  onUpdate: (updated: Program) => void;\r\n  selectionMode?: boolean;\r\n}\r\n\r\nconst ProgramDetail: React.FC<Props> = ({ program, onBack, onUpdate, selectionMode = false }) => {\r\n  const sessions: ProgramSession[] = program.sessions ?? [];\r\n  const [showSessionModal, setShowSessionModal] = useState(false);\r\n  const [editingSession, setEditingSession] = useState<ProgramSession | null>(null);\r\n  const [expandedSessions, setExpandedSessions] = useState<string[]>([]);\r\n  const [, setIsLoading] = useState(false);\r\n  const { updateSessionInProgram: updateSession } = usePrograms();\r\n\r\n  React.useEffect(() => {\r\n    // Set a timeout to show loading state for maximum 2 seconds\r\n    let timeoutId: NodeJS.Timeout;\r\n    \r\n    if (sessions.length === 0) {\r\n      setIsLoading(true);\r\n      timeoutId = setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 2000);\r\n    }\r\n\r\n    return () => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    };\r\n  }, [sessions.length]);\r\n\r\n  const toggleSession = useCallback((sessionId: string) => {\r\n    setExpandedSessions(prev => \r\n      prev.includes(sessionId) \r\n        ? prev.filter(id => id !== sessionId)\r\n        : [...prev, sessionId]\r\n    );\r\n  }, []);\r\n\r\n  const handleDeleteSession = useCallback(async (sessionId: string) => {\r\n    if (window.confirm('Are you sure you want to delete this session?')) {\r\n      try {\r\n        console.log('[ProgramDetail] Deleting session:', sessionId);\r\n        // Delete from Firestore first\r\n        await deleteSession(program.id, sessionId);\r\n        console.log('[ProgramDetail] Session deleted from Firestore');\r\n        \r\n        // Update local state\r\n        const updatedSessions = sessions.filter(s => s.id !== sessionId);\r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        console.log('[ProgramDetail] Local state updated after session deletion');\r\n      } catch (error) {\r\n        console.error('Error deleting session:', error);\r\n        alert(error instanceof Error ? error.message : 'Failed to delete session. Please try again.');\r\n      }\r\n    }\r\n  }, [program, sessions, onUpdate]);\r\n\r\n  const handleSessionSave = useCallback(async (session: ProgramSession) => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('[ProgramDetail] Starting session save:', { \r\n        sessionId: session.id, \r\n        sessionName: session.name, \r\n        isEdit: !!editingSession,\r\n        exerciseCount: session.exercises.length \r\n      });\r\n      \r\n      if (editingSession) {\r\n        // Update existing session's exercises\r\n        console.log('[ProgramDetail] Updating existing session via updateSession service');\r\n        await updateSession(program.id, session.id, session.exercises);\r\n        \r\n        // Update local state, preserving order\r\n        const updatedSessions = sessions.map(s => \r\n          s.id === session.id \r\n            ? { ...session, order: s.order } \r\n            : s);\r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        console.log('[ProgramDetail] Local state updated for existing session');\r\n      } else {\r\n        // Add new session - persist to Firestore first\r\n        console.log('[ProgramDetail] Creating new session via createSession service');\r\n        const existingOrders = sessions.map(s => s.order ?? 0);\r\n        const nextOrder = existingOrders.length > 0 ? Math.max(...existingOrders) + 1 : 0;\r\n        \r\n        const sessionToCreate = {\r\n          name: session.name,\r\n          exercises: session.exercises.map(ex => ({\r\n            ...ex,\r\n            id: ex.id || undefined // Let Firestore generate IDs for new exercises\r\n          })),\r\n          order: nextOrder\r\n        };\r\n        \r\n        // Create session in Firestore\r\n        const newSessionId = await createSession(program.id, sessionToCreate);\r\n        console.log('[ProgramDetail] New session created in Firestore with ID:', newSessionId);\r\n        \r\n        // Update local state with the new session including the Firestore-generated ID\r\n        const newSession = {\r\n          ...session,\r\n          id: newSessionId,\r\n          order: nextOrder\r\n        };\r\n        \r\n        // Add session and sort by order\r\n        const updatedSessions = [...sessions, newSession]\r\n          .sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\r\n          \r\n        onUpdate({ ...program, sessions: updatedSessions });\r\n        console.log('[ProgramDetail] Local state updated with new session');\r\n      }\r\n      \r\n      setShowSessionModal(false);\r\n      setEditingSession(null);\r\n      \r\n      // Expand the newly added/edited session\r\n      if (!expandedSessions.includes(session.id)) {\r\n        setExpandedSessions(prev => [...prev, session.id]);\r\n      }\r\n    } catch (error) {\r\n      console.error('[ProgramDetail] Error saving session:', error);\r\n      alert(error instanceof Error ? error.message : 'Failed to save session. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [program, sessions, onUpdate, editingSession, updateSession, expandedSessions]);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-white\">{program.name}</h1>\r\n          <p className=\"text-gray-400 mt-1\">{program.description}</p>\r\n        </div>\r\n        <button\r\n          onClick={onBack}\r\n          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n        >\r\n          <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        {sessions.length > 0 ? (\r\n          sessions.map((session) => (\r\n            <div key={session.id} className=\"bg-[#1a1a1a] rounded-xl overflow-hidden shadow-lg border border-white/5\">\r\n              {/* Session Header */}\r\n              <div className=\"bg-gradient-to-r from-[#2a2a2a] to-[#222] px-6 py-4 flex items-center justify-between border-b border-white/5\">\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"text-xl font-bold text-white flex items-center gap-2\">\r\n                    {session.name}\r\n                    <span className=\"text-sm font-normal text-gray-400 bg-black/20 px-2 py-0.5 rounded-full\">\r\n                      {session.exercises.length} exercises\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  {!selectionMode && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setEditingSession(session)}\r\n                        className=\"p-2 hover:bg-black/20 rounded-lg transition-colors text-blue-400 hover:text-blue-300\"\r\n                        title=\"Edit session\"\r\n                      >\r\n                        <PencilIcon className=\"w-5 h-5\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteSession(session.id)}\r\n                        className=\"p-2 hover:bg-black/20 rounded-lg transition-colors text-red-400 hover:text-red-300\"\r\n                        title=\"Delete session\"\r\n                      >\r\n                        <TrashIcon className=\"w-5 h-5\" />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  <button\r\n                    onClick={() => toggleSession(session.id)}\r\n                    className=\"p-2 hover:bg-black/20 rounded-lg transition-colors\"\r\n                    title={expandedSessions.includes(session.id) ? \"Collapse session\" : \"Expand session\"}\r\n                  >\r\n                    <ChevronDownIcon\r\n                      className={`w-5 h-5 text-gray-400 transition-transform duration-200 ${\r\n                        expandedSessions.includes(session.id) ? 'rotate-180' : ''\r\n                      }`}\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Session Content */}\r\n              {expandedSessions.includes(session.id) && (\r\n                <div className=\"divide-y divide-white/5\">\r\n                  {session.exercises.map((exercise) => (\r\n                    <div \r\n                      key={exercise.id}\r\n                      className=\"px-6 py-4 hover:bg-white/5 transition-colors\"\r\n                    >\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <h4 className=\"text-lg font-medium text-white\">{exercise.name}</h4>\r\n                          <div className=\"text-sm text-gray-400 mt-1\">\r\n                            {exercise.sets} sets × {exercise.reps} reps\r\n                            {typeof exercise.weight === 'number' && exercise.weight > 0 && ` @ ${exercise.weight}kg`}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"text-gray-500\">No sessions yet.</div>\r\n        )}\r\n        \r\n        {!selectionMode && (\r\n          <button \r\n            onClick={() => setShowSessionModal(true)} \r\n            className=\"mt-4 w-full py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n            Add Session\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <SessionModal \r\n        isOpen={showSessionModal} \r\n        onClose={() => setShowSessionModal(false)} \r\n        onSave={handleSessionSave}\r\n      />\r\n\r\n      {editingSession && (\r\n        <SessionModal \r\n          isOpen={true}\r\n          onClose={() => setEditingSession(null)}\r\n          onSave={handleSessionSave}\r\n          initialData={editingSession}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramDetail;\r\n"],"names":["ExerciseLogOptionsForm","onClose","onSave","initialExercises","view","setView","useState","exercises","setExercises","currentExercise","setCurrentExercise","handleAddExercise","useCallback","exercise","id","handleSaveSets","sets","prev","handleRemoveExercise","ex","handleSubmit","e","jsx","ExerciseSearch","ExerciseSetLogger","jsxs","idx","SessionExerciseLogOptions","step","setStep","exerciseSets","setExerciseSets","error","setError","handleSelectExercise","err","handleSave","SessionModal","isOpen","initialData","name","setName","showForm","setShowForm","showAddExercise","setShowAddExercise","editIndex","setEditIndex","getCurrentUserId","auth","getAuth","_a","handleEditExercise","handleSaveExercises","exs","userId","sessionExercises","_b","set","session","_","i","Fragment","ChevronDownIcon","props","svgRef","React.createElement","ForwardRef","React.forwardRef","PencilIcon","TrashIcon","ProgramDetail","program","onBack","onUpdate","selectionMode","sessions","showSessionModal","setShowSessionModal","editingSession","setEditingSession","expandedSessions","setExpandedSessions","setIsLoading","updateSession","usePrograms","React","timeoutId","toggleSession","sessionId","handleDeleteSession","deleteSession","updatedSessions","s","handleSessionSave","existingOrders","nextOrder","sessionToCreate","newSessionId","createSession","newSession","a","b"],"mappings":"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","x_google_ignoreList":[3,4,5]}