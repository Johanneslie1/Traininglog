{"version":3,"file":"Dashboard-CyUS77gJ.js","sources":["../../src/features/dashboard/Dashboard.tsx"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/store';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { deleteExerciseLog, getExerciseLogs } from '@/services/firebase/exerciseLogs';\r\nimport { getExerciseLogsByDate } from '@/utils/localStorageUtils';\r\nimport ExerciseCard from '@/components/ExerciseCard';\r\nimport { ExerciseLog } from '@/types/exercise';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n  const [todaysExercises, setTodaysExercises] = useState<ExerciseLog[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Date utility functions (same as ExerciseLog)\r\n  const normalizeDate = useCallback((date: Date): Date => {\r\n    const normalized = new Date(date);\r\n    normalized.setHours(0, 0, 0, 0);\r\n    return normalized;\r\n  }, []);\r\n\r\n  const getDateRange = useCallback((date: Date): { startOfDay: Date; endOfDay: Date } => {\r\n    const startOfDay = normalizeDate(date);\r\n    const endOfDay = new Date(startOfDay);\r\n    endOfDay.setHours(23, 59, 59, 999);\r\n    return { startOfDay, endOfDay };\r\n  }, [normalizeDate]);\r\n\r\n  // Unified data fetching that combines Firebase and localStorage (same strategy as ExerciseLog)\r\n  const fetchExercises = useCallback(async (date: Date) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    if (!user?.id) {\r\n      setTodaysExercises([]);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const loadedDate = normalizeDate(date);\r\n\r\n    try {\r\n      // Get local exercises first\r\n      const localExercises = getExerciseLogsByDate(loadedDate);\r\n      \r\n      // Get Firebase exercises\r\n      const { startOfDay, endOfDay } = getDateRange(loadedDate);\r\n      const firebaseExercises = await getExerciseLogs(user.id, startOfDay, endOfDay);\r\n      \r\n      // Filter local exercises to only include those not in Firebase\r\n      const uniqueLocalExercises = localExercises.filter(localEx => \r\n        !localEx.id || !firebaseExercises.some(fbEx => fbEx.id === localEx.id)\r\n      );\r\n      \r\n      // Combine and sort exercises\r\n      const allExercises = [...firebaseExercises, ...uniqueLocalExercises];\r\n      allExercises.sort((a, b) => {\r\n        const aTime = a.timestamp instanceof Date ? a.timestamp.getTime() : new Date(a.timestamp).getTime();\r\n        const bTime = b.timestamp instanceof Date ? b.timestamp.getTime() : new Date(b.timestamp).getTime();\r\n        return aTime - bTime;\r\n      });\r\n      \r\n      setTodaysExercises(allExercises);\r\n    } catch (err) {\r\n      console.error('Error fetching exercises:', err);\r\n      // Fallback to local storage on error\r\n      const localExercises = getExerciseLogsByDate(loadedDate);\r\n      setTodaysExercises(localExercises);\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user?.id, normalizeDate, getDateRange]);\r\n\r\n  // Load exercises when user or selectedDate changes\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      fetchExercises(selectedDate);\r\n    } else {\r\n      setTodaysExercises([]);\r\n      setIsLoading(false);\r\n    }\r\n  }, [user?.id, selectedDate]);\r\n\r\n  const handleDateChange = useCallback((newDate: Date) => {\r\n    const normalized = normalizeDate(newDate);\r\n    setSelectedDate(normalized);\r\n  }, [normalizeDate]);\r\n\r\n\r\n  const formatDate = (date: Date): string => {\r\n    return date.toLocaleDateString('no-NO', {\r\n      day: 'numeric',\r\n      month: 'long',\r\n    });\r\n  };\r\n\r\n\r\n  const handleDeleteExercise = async (exercise: ExerciseLog) => {\r\n    if (!exercise.id || !user?.id) {\r\n      const errorMessage = 'Cannot delete exercise: missing user ID or exercise ID';\r\n      console.error(errorMessage, { userId: user?.id, exerciseId: exercise.id });\r\n      setError(errorMessage);\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`Are you sure you want to delete \"${exercise.exerciseName}\"?`)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('üóëÔ∏è Attempting to delete exercise:', {\r\n        exerciseId: exercise.id,\r\n        userId: user.id\r\n      });\r\n\r\n      await deleteExerciseLog(exercise.id, user.id);\r\n      console.log('‚úÖ Exercise deleted from Firestore successfully');\r\n\r\n      await fetchExercises(selectedDate);\r\n    } catch (error) {\r\n      console.error('‚ùå Error deleting exercise:', error);\r\n      const errorMessage =\r\n        error instanceof Error ? error.message : 'An unknown error occurred';\r\n      setError(`Failed to delete exercise: ${errorMessage}`);\r\n      await fetchExercises(selectedDate);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 bg-black min-h-screen text-white\">\r\n      {error && (\r\n        <div className=\"bg-red-500 text-white p-4 rounded-lg mb-4 flex justify-between items-center\">\r\n          <span>{error}</span>\r\n          <button onClick={() => setError(null)} className=\"text-white\">\r\n            ‚úï\r\n          </button>\r\n        </div>\r\n      )}\r\n      {/* Header with navigation */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <button \r\n            onClick={() => navigate('/')}\r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n            aria-label=\"Back to Exercise Log\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n            </svg>\r\n          </button>\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold\">Dashboard - {formatDate(selectedDate)}</h1>\r\n            <small className=\"text-gray-400\">Exercise Summary</small>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <button \r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\" \r\n            onClick={() => handleDateChange(new Date(selectedDate.getTime() - 86400000))}\r\n            aria-label=\"Previous day\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n            </svg>\r\n          </button>\r\n          <button \r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n            onClick={() => handleDateChange(new Date())}\r\n            aria-label=\"Today\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n            </svg>\r\n          </button>\r\n          <button \r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\" \r\n            onClick={() => handleDateChange(new Date(selectedDate.getTime() + 86400000))}\r\n            aria-label=\"Next day\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Exercise list */}\r\n      <div className=\"space-y-4\">\r\n        {todaysExercises.length === 0 ? (\r\n          <div className=\"text-center py-8 text-gray-400\">\r\n            <p>No exercises logged for this date</p>\r\n            <button \r\n              onClick={() => navigate('/')}\r\n              className=\"mt-4 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors\"\r\n            >\r\n              Go to Exercise Log\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          todaysExercises.map((exercise) => {\r\n            // Ensure timestamp is always a Date\r\n            const exerciseWithDate = {\r\n              ...exercise,\r\n              timestamp: exercise.timestamp instanceof Date\r\n                ? exercise.timestamp\r\n                : new Date(exercise.timestamp),\r\n              userId: exercise.userId ?? (user ? user.id : '') // Ensure userId is always a string and user is not null\r\n            };\r\n            return (\r\n              <ExerciseCard\r\n                key={exercise.id || `${exercise.exerciseName}-${new Date(exercise.timestamp).getTime()}`}\r\n                exercise={exerciseWithDate}\r\n                onDelete={() => handleDeleteExercise(exerciseWithDate)}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      {/* Floating action button */}\r\n      <button\r\n        className=\"fixed right-6 bottom-6 w-16 h-16 bg-green-600 rounded-full flex items-center justify-center text-white shadow-lg hover:bg-green-700 transition-colors\"\r\n        onClick={() => navigate('/')}\r\n        aria-label=\"Go to Exercise Log\"\r\n      >\r\n        <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M12 4v16m8-8H4\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Dashboard","navigate","useNavigate","user","useSelector","state","todaysExercises","setTodaysExercises","useState","selectedDate","setSelectedDate","isLoading","setIsLoading","error","setError","normalizeDate","useCallback","date","normalized","getDateRange","startOfDay","endOfDay","fetchExercises","loadedDate","localExercises","getExerciseLogsByDate","firebaseExercises","getExerciseLogs","uniqueLocalExercises","localEx","fbEx","allExercises","a","b","aTime","bTime","err","useEffect","handleDateChange","newDate","formatDate","handleDeleteExercise","exercise","errorMessage","deleteExerciseLog","jsx","jsxs","exerciseWithDate","ExerciseCard"],"mappings":"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"}