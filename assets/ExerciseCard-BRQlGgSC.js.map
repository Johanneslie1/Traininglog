{"version":3,"file":"ExerciseCard-BRQlGgSC.js","sources":["../../src/context/SupersetContext.tsx","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/services/firebase/exerciseLogs.ts","../../src/utils/localStorageUtils.ts","../../src/components/ExerciseCard.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, ReactNode, useEffect } from 'react';\r\nimport { SupersetGroup } from '../types/session';\r\n\r\nexport interface SupersetState {\r\n  isCreating: boolean;\r\n  selectedExercises: string[];\r\n  activeSuperset: SupersetGroup | null;\r\n  supersets: SupersetGroup[];\r\n}\r\n\r\ninterface SupersetContextType {\r\n  state: SupersetState;\r\n  startCreating: () => void;\r\n  cancelCreating: () => void;\r\n  toggleExerciseSelection: (exerciseId: string) => void;\r\n  createSuperset: (name?: string) => SupersetGroup | null;\r\n  breakSuperset: (supersetId: string) => void;\r\n  addSuperset: (superset: SupersetGroup) => void;\r\n  removeSuperset: (supersetId: string) => void;\r\n  getSupersetByExercise: (exerciseId: string) => SupersetGroup | null;\r\n  isExerciseInSuperset: (exerciseId: string) => boolean;\r\n  removeExerciseFromSuperset: (exerciseId: string) => void;\r\n  clearAll: () => void;\r\n  loadSupersetsForDate: (date: string) => void;\r\n  saveSupersetsForDate: (date: string) => void;\r\n  updateExerciseOrder: (exerciseIds: string[]) => void;\r\n  renameSuperset: (supersetId: string, newName: string) => void;\r\n}\r\n\r\nconst SupersetContext = createContext<SupersetContextType | undefined>(undefined);\r\n\r\nexport const useSupersets = () => {\r\n  const context = useContext(SupersetContext);\r\n  if (!context) {\r\n    throw new Error('useSupersets must be used within a SupersetProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface SupersetProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst STORAGE_KEY = 'superset_data';\r\nconst EXERCISE_ORDER_KEY = 'exercise_order';\r\n\r\n// Helper functions for persistence\r\nconst getSupersetStorageKey = (date: string) => `${STORAGE_KEY}_${date}`;\r\nconst getExerciseOrderKey = (date: string) => `${EXERCISE_ORDER_KEY}_${date}`;\r\n\r\nconst loadSupersetsFromStorage = (date: string): SupersetGroup[] => {\r\n  try {\r\n    const stored = localStorage.getItem(getSupersetStorageKey(date));\r\n    return stored ? JSON.parse(stored) : [];\r\n  } catch (error) {\r\n    console.error('Error loading supersets from storage:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveSupersetsToStorage = (date: string, supersets: SupersetGroup[]) => {\r\n  try {\r\n    localStorage.setItem(getSupersetStorageKey(date), JSON.stringify(supersets));\r\n  } catch (error) {\r\n    console.error('Error saving supersets to storage:', error);\r\n  }\r\n};\r\n\r\n// New functions to handle exercise order persistence\r\nconst saveExerciseOrderToStorage = (date: string, exerciseIds: string[]) => {\r\n  try {\r\n    localStorage.setItem(getExerciseOrderKey(date), JSON.stringify(exerciseIds));\r\n  } catch (error) {\r\n    console.error('Error saving exercise order to storage:', error);\r\n  }\r\n};\r\n\r\nconst loadExerciseOrderFromStorage = (date: string): string[] => {\r\n  try {\r\n    const stored = localStorage.getItem(getExerciseOrderKey(date));\r\n    return stored ? JSON.parse(stored) : [];\r\n  } catch (error) {\r\n    console.error('Error loading exercise order from storage:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const SupersetProvider: React.FC<SupersetProviderProps> = ({ children }) => {\r\n  const [state, setState] = useState<SupersetState>({\r\n    isCreating: false,\r\n    selectedExercises: [],\r\n    activeSuperset: null,\r\n    supersets: []\r\n  });\r\n\r\n  const [currentDate, setCurrentDate] = useState<string>('');\r\n  const [exerciseOrder, setExerciseOrder] = useState<string[]>([]);\r\n\r\n  // Load supersets for a specific date\r\n  const loadSupersetsForDate = useCallback((date: string) => {\r\n    const storedSupersets = loadSupersetsFromStorage(date);\r\n    const storedExerciseOrder = loadExerciseOrderFromStorage(date);\r\n    \r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: storedSupersets\r\n    }));\r\n    \r\n    setExerciseOrder(storedExerciseOrder);\r\n    setCurrentDate(date);\r\n  }, []);\r\n\r\n  // Save supersets for current date\r\n  const saveSupersetsForDate = useCallback((date: string) => {\r\n    saveSupersetsToStorage(date, state.supersets);\r\n    saveExerciseOrderToStorage(date, exerciseOrder);\r\n  }, [state.supersets, exerciseOrder]);\r\n\r\n  // Auto-save when supersets change\r\n  useEffect(() => {\r\n    if (currentDate) {\r\n      saveSupersetsToStorage(currentDate, state.supersets);\r\n    }\r\n  }, [state.supersets, currentDate]);\r\n\r\n  // Auto-save when exercise order changes\r\n  useEffect(() => {\r\n    if (currentDate && exerciseOrder.length > 0) {\r\n      saveExerciseOrderToStorage(currentDate, exerciseOrder);\r\n    }\r\n  }, [exerciseOrder, currentDate]);\r\n\r\n  // Update exercise order\r\n  const updateExerciseOrder = useCallback((exerciseIds: string[]) => {\r\n    setExerciseOrder(exerciseIds);\r\n    if (currentDate) {\r\n      saveExerciseOrderToStorage(currentDate, exerciseIds);\r\n    }\r\n  }, [currentDate]);\r\n\r\n  const startCreating = useCallback(() => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      isCreating: true,\r\n      selectedExercises: []\r\n    }));\r\n  }, []);\r\n\r\n  const cancelCreating = useCallback(() => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      isCreating: false,\r\n      selectedExercises: []\r\n    }));\r\n  }, []);\r\n\r\n  const toggleExerciseSelection = useCallback((exerciseId: string) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      selectedExercises: prev.selectedExercises.includes(exerciseId)\r\n        ? prev.selectedExercises.filter(id => id !== exerciseId)\r\n        : [...prev.selectedExercises, exerciseId]\r\n    }));\r\n  }, []);\r\n\r\n  const createSuperset = useCallback((name?: string): SupersetGroup | null => {\r\n    if (state.selectedExercises.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    const newSuperset: SupersetGroup = {\r\n      id: crypto.randomUUID(),\r\n      name: name || `Superset ${state.supersets.length + 1}`,\r\n      exerciseIds: state.selectedExercises,\r\n      order: state.supersets.length\r\n    };\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: [...prev.supersets, newSuperset],\r\n      isCreating: false,\r\n      selectedExercises: []\r\n    }));\r\n\r\n    return newSuperset;\r\n  }, [state.selectedExercises, state.supersets.length]);\r\n\r\n  const breakSuperset = useCallback((supersetId: string) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: prev.supersets.filter(s => s.id !== supersetId)\r\n    }));\r\n  }, []);\r\n\r\n  const addSuperset = useCallback((superset: SupersetGroup) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: [...prev.supersets, superset]\r\n    }));\r\n  }, []);\r\n\r\n  const removeSuperset = useCallback((supersetId: string) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: prev.supersets.filter(s => s.id !== supersetId)\r\n    }));\r\n  }, []);\r\n\r\n  const getSupersetByExercise = useCallback((exerciseId: string): SupersetGroup | null => {\r\n    return state.supersets.find(s => s.exerciseIds.includes(exerciseId)) || null;\r\n  }, [state.supersets]);\r\n\r\n  const isExerciseInSuperset = useCallback((exerciseId: string): boolean => {\r\n    return state.supersets.some(s => s.exerciseIds.includes(exerciseId));\r\n  }, [state.supersets]);\r\n\r\n  const removeExerciseFromSuperset = useCallback((exerciseId: string) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: prev.supersets\r\n        .map(superset => ({\r\n          ...superset,\r\n          exerciseIds: superset.exerciseIds.filter(id => id !== exerciseId)\r\n        }))\r\n        .filter(superset => superset.exerciseIds.length > 1) // Remove supersets with fewer than 2 exercises\r\n    }));\r\n  }, []);\r\n\r\n  const renameSuperset = useCallback((supersetId: string, newName: string) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      supersets: prev.supersets.map(superset => \r\n        superset.id === supersetId \r\n          ? { ...superset, name: newName } \r\n          : superset\r\n      )\r\n    }));\r\n  }, []);\r\n\r\n  const clearAll = useCallback(() => {\r\n    setState({\r\n      isCreating: false,\r\n      selectedExercises: [],\r\n      activeSuperset: null,\r\n      supersets: []\r\n    });\r\n    setExerciseOrder([]);\r\n  }, []);\r\n\r\n  const value: SupersetContextType = {\r\n    state,\r\n    startCreating,\r\n    cancelCreating,\r\n    toggleExerciseSelection,\r\n    createSuperset,\r\n    breakSuperset,\r\n    addSuperset,\r\n    removeSuperset,\r\n    getSupersetByExercise,\r\n    isExerciseInSuperset,\r\n    removeExerciseFromSuperset,\r\n    clearAll,\r\n    loadSupersetsForDate,\r\n    saveSupersetsForDate,\r\n    updateExerciseOrder,\r\n    renameSuperset\r\n  };\r\n\r\n  return (\r\n    <SupersetContext.Provider value={value}>\r\n      {children}\r\n    </SupersetContext.Provider>\r\n  );\r\n};\r\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import {\r\n  collection,\r\n  doc,\r\n  deleteDoc,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  Timestamp,\r\n  getDoc,\r\n  setDoc\r\n} from 'firebase/firestore';\r\nimport { db } from './config';\r\nimport { ExerciseLog } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\n\r\ntype ExerciseLogInput = {\r\n  exerciseName: string;\r\n  userId: string;\r\n  sets: ExerciseSet[];\r\n};\r\n\r\nexport const addExerciseLog = async (\r\n  logData: ExerciseLogInput,\r\n  selectedDate: Date,\r\n  existingId?: string\r\n): Promise<string> => {\r\n  try {\r\n    console.log('📝 addExerciseLog called with:', { logData, selectedDate, existingId });\r\n    \r\n    if (!logData.userId) {\r\n      throw new Error('userId is required to save exercise log');\r\n    }\r\n\r\n    const exerciseData = {\r\n      ...logData,\r\n      timestamp: Timestamp.fromDate(selectedDate || new Date()),\r\n      deviceId: window.navigator.userAgent,\r\n      userId: logData.userId,\r\n      sets: Array.isArray(logData.sets) ? logData.sets : [] // Ensure sets is always an array\r\n    };\r\n\r\n    console.log('📝 Prepared exercise data:', exerciseData);\r\n\r\n    let docRef;\r\n    let docId;\r\n\r\n    // Simplified ID management - always use the new subcollection structure\r\n    if (existingId) {\r\n      // Update existing document\r\n      docRef = doc(db, 'users', logData.userId, 'exercises', existingId);\r\n      docId = existingId;\r\n      console.log('📝 Updating existing document:', docId);\r\n      \r\n      // Clean up any old location document if it exists\r\n      try {\r\n        const oldRef = doc(db, 'exerciseLogs', existingId);\r\n        const oldDoc = await getDoc(oldRef);\r\n        if (oldDoc.exists()) {\r\n          await deleteDoc(oldRef);\r\n          console.log('✅ Cleaned up old location document:', existingId);\r\n        }\r\n      } catch (error) {\r\n        console.warn('⚠️ Could not clean up old location:', error);\r\n      }\r\n    } else {\r\n      // Create new document\r\n      docRef = doc(collection(db, 'users', logData.userId, 'exercises'));\r\n      docId = docRef.id;\r\n      console.log('📝 Creating new document with ID:', docId);\r\n    }\r\n\r\n    // Save the document\r\n    await setDoc(docRef, exerciseData);\r\n    console.log('✅ Exercise saved successfully with ID:', docId);\r\n    return docId;\r\n    \r\n  } catch (error) {\r\n    const firebaseError = error as { code?: string; message?: string };\r\n    console.error('❌ Error adding exercise log:', {\r\n      error,\r\n      code: firebaseError.code,\r\n      message: firebaseError.message,\r\n      userId: logData.userId\r\n    });\r\n    \r\n    if (firebaseError.code === 'permission-denied') {\r\n      throw new Error('Permission denied. Please check your authentication.');\r\n    }\r\n    throw new Error('Failed to add exercise log: ' + (firebaseError.message || 'Unknown error'));\r\n  }\r\n};\r\n\r\nexport const deleteExerciseLog = async (logId: string, userId: string): Promise<void> => {\r\n  try {\r\n    console.log('🗑️ deleteExerciseLog called with:', { logId, userId });\r\n    \r\n    if (!userId) {\r\n      throw new Error('userId is required to delete exercise log');\r\n    }\r\n\r\n    if (!logId) {\r\n      throw new Error('logId is required to delete exercise log');\r\n    }\r\n\r\n    // Try both locations - the new subcollection path and the old top-level path\r\n    const exerciseRef = doc(db, 'users', userId, 'exercises', logId);\r\n    const oldExerciseRef = doc(db, 'exerciseLogs', logId);\r\n\r\n    // Try to get documents from both locations\r\n    let exerciseDoc = null;\r\n    let oldExerciseDoc = null;\r\n\r\n    try {\r\n      exerciseDoc = await getDoc(exerciseRef);\r\n      console.log('📄 New path document check:', {\r\n        exists: exerciseDoc.exists(),\r\n        userId: exerciseDoc.exists() ? exerciseDoc.data()?.userId : null,\r\n      });\r\n    } catch (error) {\r\n      console.warn('⚠️ Error checking new path:', error);\r\n    }\r\n\r\n    try {\r\n      oldExerciseDoc = await getDoc(oldExerciseRef);\r\n      console.log('📄 Old path document check:', {\r\n        exists: oldExerciseDoc.exists(),\r\n        userId: oldExerciseDoc.exists() ? oldExerciseDoc.data()?.userId : null,\r\n      });\r\n    } catch (error) {\r\n      console.warn('⚠️ Error checking old path:', error);\r\n    }\r\n\r\n    let deleted = false;\r\n    let errors = [];\r\n\r\n    // Try to delete from new location first if it exists and belongs to the user\r\n    if (exerciseDoc?.exists()) {\r\n      const data = exerciseDoc.data();\r\n      if (data?.userId === userId) {\r\n        try {\r\n          await deleteDoc(exerciseRef);\r\n          console.log('✅ Exercise deleted from new location successfully');\r\n          deleted = true;\r\n        } catch (error) {\r\n          console.error('❌ Failed to delete from new location:', error);\r\n          const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n          errors.push(`New location error: ${errorMessage}`);\r\n        }\r\n      } else if (data?.userId) {\r\n        console.warn('⚠️ Document exists but belongs to different user:', {\r\n          docUserId: data.userId,\r\n          requestUserId: userId\r\n        });\r\n      }\r\n    }\r\n\r\n    // If not deleted yet, try old location\r\n    if (!deleted && oldExerciseDoc?.exists()) {\r\n      const data = oldExerciseDoc.data();\r\n      if (data?.userId === userId) {\r\n        try {\r\n          await deleteDoc(oldExerciseRef);\r\n          console.log('✅ Exercise deleted from old location successfully');\r\n          deleted = true;\r\n        } catch (error) {\r\n          console.error('❌ Failed to delete from old location:', error);\r\n          const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n          errors.push(`Old location error: ${errorMessage}`);\r\n        }\r\n      } else if (data?.userId) {\r\n        console.warn('⚠️ Document exists but belongs to different user:', {\r\n          docUserId: data.userId,\r\n          requestUserId: userId\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!deleted) {\r\n      const errorMessage = !exerciseDoc && !oldExerciseDoc \r\n        ? 'Could not access exercise document. Please check your permissions.'\r\n        : errors.length > 0\r\n          ? `Failed to delete exercise: ${errors.join('; ')}`\r\n          : 'Exercise log not found or you do not have permission to delete it';\r\n      \r\n      throw new Error(errorMessage);\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Error deleting exercise log:', error);\r\n    throw error instanceof Error ? error : new Error('Failed to delete exercise log');\r\n  }\r\n};\r\n\r\nexport const getExerciseLogs = async (userId: string, startDate: Date, endDate: Date): Promise<ExerciseLog[]> => {\r\n  try {\r\n    console.log('📖 getExerciseLogs called with:', { userId, startDate, endDate });\r\n    \r\n    if (!userId) {\r\n      throw new Error('userId is required to fetch exercise logs');\r\n    }\r\n\r\n    // Query from the user's exercises subcollection\r\n    const exercisesRef = collection(db, 'users', userId, 'exercises');\r\n    const q = query(\r\n      exercisesRef,\r\n      where('timestamp', '>=', Timestamp.fromDate(startDate)),\r\n      where('timestamp', '<=', Timestamp.fromDate(endDate)),\r\n      orderBy('timestamp', 'desc')\r\n    );\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    const exercises = querySnapshot.docs.map((doc) => {\r\n      const data = doc.data();\r\n      return {\r\n        id: doc.id,\r\n        exerciseName: data.exerciseName,\r\n        sets: data.sets,\r\n        timestamp: data.timestamp.toDate(),\r\n        deviceId: data.deviceId || 'legacy',\r\n        userId: data.userId\r\n      } as ExerciseLog;\r\n    });\r\n\r\n    console.log('📖 Retrieved exercises:', exercises.length);\r\n    return exercises;\r\n  } catch (error) {\r\n    console.error('❌ Error fetching exercise logs:', error);\r\n    throw new Error('Failed to fetch exercises');\r\n  }\r\n};\r\n","import { auth, db } from '@/services/firebase/config';\r\nimport { doc, deleteDoc, getDoc } from 'firebase/firestore';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ExerciseLog } from '@/types/exercise';\r\n\r\n// Constants\r\nconst LOGS_STORAGE_KEY = 'exercise_logs';\r\n\r\n// Helper to get date range\r\nconst getDateRange = (date: Date) => {\r\n  const startOfDay = new Date(date);\r\n  startOfDay.setHours(0, 0, 0, 0);\r\n  \r\n  const endOfDay = new Date(date);\r\n  endOfDay.setHours(23, 59, 59, 999);\r\n  \r\n  return { startOfDay, endOfDay };\r\n};\r\n\r\n// Get or create a persistent device ID\r\nexport const getDeviceId = (): string => {\r\n  let deviceId = localStorage.getItem('device_id');\r\n  \r\n  if (!deviceId) {\r\n    deviceId = uuidv4();\r\n    localStorage.setItem('device_id', deviceId);\r\n  }\r\n  \r\n  return deviceId;\r\n};\r\n\r\n// Get all exercise logs from local storage\r\nexport const getExerciseLogs = (): ExerciseLog[] => {\r\n  const logsString = localStorage.getItem(LOGS_STORAGE_KEY);\r\n  if (!logsString) return [];\r\n\r\n  try {\r\n    const logs = JSON.parse(logsString);\r\n    return Array.isArray(logs) ? logs.map(log => ({\r\n      ...log,\r\n      timestamp: new Date(log.timestamp)\r\n    })) : [];\r\n  } catch (error) {\r\n    console.error('Error parsing exercise logs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Get exercise logs for a specific date\r\nexport const getExerciseLogsByDate = (date: Date): ExerciseLog[] => {\r\n  const exerciseLogs = getExerciseLogs();\r\n  const { startOfDay, endOfDay } = getDateRange(date);\r\n\r\n  return exerciseLogs.filter(log => {\r\n    const logDate = new Date(log.timestamp);\r\n    return logDate >= startOfDay && logDate <= endOfDay;\r\n  });\r\n};\r\n\r\n// Save exercise log to local storage\r\nexport const saveExerciseLog = (exerciseLog: ExerciseLog): ExerciseLog => {\r\n  const logs = getExerciseLogs();\r\n  \r\n  // Ensure the log has a unique ID\r\n  const newLog = {\r\n    ...exerciseLog,\r\n    id: exerciseLog.id || uuidv4(),\r\n    deviceId: exerciseLog.deviceId || getDeviceId(),\r\n    timestamp: exerciseLog.timestamp || new Date(),\r\n    userId: auth.currentUser?.uid || 'anonymous'  // Fallback to anonymous if not authenticated\r\n  };\r\n\r\n  // Convert Date to string for storage\r\n  const storableLog = {\r\n    ...newLog,\r\n    timestamp: newLog.timestamp instanceof Date \r\n      ? newLog.timestamp.toISOString() \r\n      : new Date(newLog.timestamp).toISOString()\r\n  };\r\n\r\n  // If the log has an ID, update the existing log instead of adding a new one\r\n  const existingLogIndex = logs.findIndex(l => l.id === exerciseLog.id);\r\n  let storableLogs;\r\n  \r\n  if (existingLogIndex !== -1) {\r\n    // Update existing log\r\n    storableLogs = [\r\n      ...logs.slice(0, existingLogIndex),\r\n      storableLog,\r\n      ...logs.slice(existingLogIndex + 1)\r\n    ];\r\n  } else {\r\n    // Add new log\r\n    storableLogs = [...logs, storableLog];\r\n  }\r\n  \r\n  localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(storableLogs));\r\n  return newLog;\r\n};\r\n\r\n// Delete an exercise log\r\nexport const deleteExerciseLog = async (log: ExerciseLog): Promise<boolean> => {\r\n  try {\r\n    // First try to delete from Firestore if we have an ID\r\n    if (log.id && auth.currentUser) {\r\n      const docRef = doc(db, 'exerciseLogs', log.id);\r\n      const docSnap = await getDoc(docRef);\r\n      \r\n      if (docSnap.exists()) {\r\n        await deleteDoc(docRef);\r\n      }\r\n    }\r\n    \r\n    // Then delete from local storage\r\n    const logs = getExerciseLogs();\r\n    const filteredLogs = logs.filter(l => l.id !== log.id);\r\n    \r\n    if (filteredLogs.length === logs.length) {\r\n      return false; // Log wasn't found\r\n    }\r\n    \r\n    localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(filteredLogs));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error deleting exercise log:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Delete exercise log from local storage\r\nexport const deleteLocalExerciseLog = (exerciseId: string) => {\r\n  let exerciseLogs = getExerciseLogs();\r\n  const updatedLogs = exerciseLogs.filter(log => log.id !== exerciseId);\r\n  localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(updatedLogs));\r\n};\r\n\r\n// Clear all exercise logs from local storage\r\nexport const clearExerciseLogs = () => {\r\n  localStorage.removeItem(LOGS_STORAGE_KEY);\r\n};\r\n\r\n// Import exercise logs from JSON\r\nexport const importExerciseLogs = (jsonData: string): boolean => {\r\n  try {\r\n    const importedLogs = JSON.parse(jsonData);\r\n    \r\n    if (!Array.isArray(importedLogs)) {\r\n      throw new Error('Imported data is not an array');\r\n    }\r\n    \r\n    // Convert string timestamps to Date objects\r\n    const processedLogs = importedLogs.map((log: any) => ({\r\n      ...log,\r\n      timestamp: log.timestamp ? new Date(log.timestamp) : new Date(),\r\n      deviceId: log.deviceId || getDeviceId(),\r\n      id: log.id || uuidv4()\r\n    }));\r\n    \r\n    // Store the imported logs\r\n    const storableLogs = processedLogs.map((log: ExerciseLog) => ({\r\n      ...log,\r\n      timestamp: log.timestamp instanceof Date \r\n        ? log.timestamp.toISOString() \r\n        : new Date(log.timestamp).toISOString()\r\n    }));\r\n    \r\n    localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(storableLogs));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error importing logs:', error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { ExerciseSet } from '../types/sets';\r\nimport { ExerciseData } from '../services/exerciseDataService';\r\nimport { useSupersets } from '../context/SupersetContext';\r\n\r\ninterface ExerciseCardProps {\r\n  exercise: ExerciseData;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  showActions?: boolean;\r\n  exerciseNumber?: number; // Add exercise number prop\r\n  subNumber?: number; // Add sub-number for exercises within a superset\r\n}\r\n\r\nconst getDifficultyColor = (difficulty?: string): string => {\r\n  if (!difficulty) return 'var(--color-normal)';\r\n  \r\n  switch (difficulty) {\r\n    case 'WARMUP': return 'var(--color-warmup)';\r\n    case 'EASY': return 'var(--color-easy)';\r\n    case 'MODERATE': return 'var(--color-moderate)';\r\n    case 'HARD': return 'var(--color-hard)';\r\n    default: return 'var(--color-moderate)';\r\n  }\r\n};\r\n\r\nconst ExerciseCard: React.FC<ExerciseCardProps> = ({\r\n  exercise,\r\n  onEdit,\r\n  onDelete,\r\n  showActions = true,\r\n  exerciseNumber,\r\n  subNumber\r\n}) => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [showDetails, setShowDetails] = useState(true); // Add toggle state\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n  const { state, toggleExerciseSelection, isExerciseInSuperset, startCreating } = useSupersets();\r\n  \r\n  const isInSuperset = isExerciseInSuperset(exercise.id || '');\r\n  const isSelected = state.selectedExercises.includes(exercise.id || '');\r\n  \r\n  // Close menu when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setShowMenu(false);\r\n      }\r\n    };\r\n\r\n    if (showMenu) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [showMenu]);\r\n\r\n  const handleSupersetToggle = () => {\r\n    if (exercise.id) {\r\n      toggleExerciseSelection(exercise.id);\r\n    }\r\n  };\r\n\r\n  // Calculate total volume for the exercise\r\n  const calculateTotalVolume = () => {\r\n    return exercise.sets.reduce((total, set) => total + (set.weight * set.reps), 0);\r\n  };\r\n\r\n  // Toggle details display\r\n  const toggleDetails = () => {\r\n    setShowDetails(!showDetails);\r\n  };\r\n\r\n  const cardClassName = `bg-[#1a1a1a] rounded-lg p-3 transition-all duration-200 ${\r\n    isInSuperset \r\n      ? 'bg-[#2196F3]/5' \r\n      : isSelected \r\n      ? 'bg-[#8B5CF6]/10 border-l-2 border-[#8B5CF6]' \r\n      : 'hover:bg-black/20'\r\n  }`;\r\n\r\n  return (\r\n    <div className={cardClassName}>\r\n      {/* Removed standalone superset label - now handled in DraggableExerciseDisplay */}\r\n\r\n      {/* Selection indicator during superset creation */}\r\n      {state.isCreating && (\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isSelected}\r\n            onChange={handleSupersetToggle}\r\n            className=\"w-4 h-4 text-[#8B5CF6] bg-gray-100 border-gray-300 rounded focus:ring-[#8B5CF6] focus:ring-2\"\r\n          />\r\n          <span className=\"text-sm text-gray-400\">Select for superset</span>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-2\">\r\n          {/* Compact exercise number with optional sub-number */}\r\n          {exerciseNumber && (\r\n            <div className=\"flex items-center justify-center min-w-6 h-6 bg-[#8B5CF6] text-white text-xs font-bold rounded-full px-1.5\">\r\n              {exerciseNumber}{subNumber ? String.fromCharCode(96 + subNumber) : ''}\r\n            </div>\r\n          )}\r\n          <h3 className=\"text-base font-medium text-white\">{exercise.exerciseName}</h3>\r\n        </div>\r\n        {showActions && (\r\n          <div className=\"flex gap-2\">\r\n            {/* Toggle details button */}\r\n            <button\r\n              onClick={toggleDetails}\r\n              className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n              aria-label={showDetails ? \"Hide details\" : \"Show details\"}\r\n            >\r\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                {showDetails ? (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\r\n                ) : (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                )}\r\n              </svg>\r\n            </button>\r\n            \r\n            {/* Unified superset button with different states */}\r\n            <button\r\n              onClick={() => {\r\n                if (isInSuperset) return; // Already in a superset\r\n                \r\n                if (!state.isCreating) {\r\n                  // Start superset creation mode\r\n                  startCreating();\r\n                  \r\n                  // Auto-select this exercise\r\n                  if (exercise.id) {\r\n                    setTimeout(() => {\r\n                      toggleExerciseSelection(exercise.id || '');\r\n                    }, 50);\r\n                  }\r\n                } else {\r\n                  // In creation mode - toggle selection\r\n                  handleSupersetToggle();\r\n                }\r\n              }}\r\n              className={`p-2 rounded-lg transition-colors ${\r\n                isInSuperset \r\n                  ? 'bg-[#2196F3] text-white' // Blue for existing superset\r\n                  : isSelected\r\n                    ? 'bg-[#8B5CF6] text-white' // Purple for selected\r\n                    : 'hover:bg-white/10 text-gray-400 hover:text-white'\r\n              }`}\r\n              aria-label={isInSuperset ? \"In superset\" : isSelected ? \"Selected for superset\" : \"Add to superset\"}\r\n            >\r\n              {isInSuperset ? (\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.1a3 3 0 004.24-4.24l-1.1-1.102z\" />\r\n                </svg>\r\n              ) : isSelected ? (\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              ) : (\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n              )}\r\n            </button>\r\n            \r\n            {onEdit && (\r\n              <button \r\n                onClick={onEdit}\r\n                className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n                aria-label=\"Edit exercise\"\r\n              >\r\n                <svg className=\"w-5 h-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n            {onDelete && (\r\n              <button \r\n                onClick={onDelete}\r\n                className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-red-500\"\r\n                aria-label=\"Delete exercise\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m4-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"mt-3\">\r\n        {showDetails ? (\r\n          // Detailed view - show all sets horizontally with color coding\r\n          <div className=\"text-sm\">\r\n            <div className=\"flex flex-wrap items-center\">\r\n              {exercise.sets.map((set: ExerciseSet, index: number) => (\r\n                <div key={index} className=\"flex items-center\" style={{ marginRight: index === exercise.sets.length - 1 ? 0 : 8 }}>\r\n                  <span \r\n                    className=\"font-medium whitespace-nowrap\"\r\n                    style={{ color: getDifficultyColor(set.difficulty) }}\r\n                  >\r\n                    {set.weight}kg {set.reps}r\r\n                  </span>\r\n                  {index < exercise.sets.length - 1 && (\r\n                    <span className=\"text-gray-500 mx-1\">|</span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Summary view - show total sets and volume\r\n          <div className=\"text-sm text-gray-300\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-gray-400\">Sets</span>\r\n              <span className=\"text-white\">{exercise.sets.length}</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between mt-1\">\r\n              <span className=\"text-gray-400\">Total Volume</span>\r\n              <span className=\"text-white\">{calculateTotalVolume()}kg</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseCard;\r\n"],"names":["SupersetContext","createContext","useSupersets","context","useContext","STORAGE_KEY","EXERCISE_ORDER_KEY","getSupersetStorageKey","date","getExerciseOrderKey","loadSupersetsFromStorage","stored","error","saveSupersetsToStorage","supersets","saveExerciseOrderToStorage","exerciseIds","loadExerciseOrderFromStorage","SupersetProvider","children","state","setState","useState","currentDate","setCurrentDate","exerciseOrder","setExerciseOrder","loadSupersetsForDate","useCallback","storedSupersets","storedExerciseOrder","prev","saveSupersetsForDate","useEffect","updateExerciseOrder","startCreating","cancelCreating","toggleExerciseSelection","exerciseId","id","createSuperset","name","newSuperset","breakSuperset","supersetId","s","addSuperset","superset","removeSuperset","getSupersetByExercise","isExerciseInSuperset","removeExerciseFromSuperset","renameSuperset","newName","clearAll","value","jsx","byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","options","buf","rnds","_a","addExerciseLog","logData","selectedDate","existingId","exerciseData","Timestamp","docRef","docId","doc","db","oldRef","getDoc","deleteDoc","collection","setDoc","firebaseError","deleteExerciseLog","logId","userId","exerciseRef","oldExerciseRef","exerciseDoc","oldExerciseDoc","_b","deleted","errors","data","errorMessage","getExerciseLogs","startDate","endDate","exercisesRef","q","query","where","orderBy","exercises","getDocs","LOGS_STORAGE_KEY","getDateRange","startOfDay","endOfDay","getDeviceId","deviceId","uuidv4","logsString","logs","log","getExerciseLogsByDate","exerciseLogs","logDate","saveExerciseLog","exerciseLog","newLog","auth","storableLog","existingLogIndex","l","storableLogs","deleteLocalExerciseLog","updatedLogs","getDifficultyColor","difficulty","ExerciseCard","exercise","onEdit","onDelete","showActions","exerciseNumber","subNumber","showMenu","setShowMenu","showDetails","setShowDetails","menuRef","useRef","isInSuperset","isSelected","handleClickOutside","event","handleSupersetToggle","calculateTotalVolume","total","set","toggleDetails","cardClassName","jsxs","index"],"mappings":"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","x_google_ignoreList":[1,2,3,4]}