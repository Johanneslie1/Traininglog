{"version":3,"file":"ProgramBuilder-BzEeHDp7.js","sources":["../../node_modules/@heroicons/react/outline/esm/BookmarkIcon.js","../../node_modules/@heroicons/react/outline/esm/PencilIcon.js","../../node_modules/@heroicons/react/outline/esm/PlusIcon.js","../../node_modules/@heroicons/react/outline/esm/TrashIcon.js","../../node_modules/@heroicons/react/outline/esm/XIcon.js","../../src/features/programs/ExerciseDatabasePicker.tsx","../../src/features/programs/ProgramAddExerciseOptions.tsx","../../src/features/programs/SessionBuilder.tsx","../../src/features/programs/ProgramBuilder.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction BookmarkIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(BookmarkIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction PencilIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction PlusIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4v16m8-8H4\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction TrashIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction XIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 18L18 6M6 6l12 12\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(XIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\r\nimport { allExercises } from '@/data/exercises';\r\nimport { importedExercises } from '@/data/importedExercises';\r\nimport { Exercise, MuscleGroup } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\nimport { DifficultyCategory } from '@/types/difficulty';\r\nimport { toast } from 'react-hot-toast';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { db } from '@/services/firebase/config';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { SearchIcon, XIcon } from '@heroicons/react/outline';\r\n\r\ninterface ExerciseDatabasePickerProps {\r\n  onClose: () => void;\r\n  onSelectExercises: (exercises: Array<{ exercise: Exercise; sets: ExerciseSet[] }>) => void;\r\n}\r\n\r\nconst normalizeMuscle = (muscle: string): MuscleGroup => {\r\n  const muscleMap: Record<string, MuscleGroup> = {\r\n    'chest': 'chest',\r\n    'pectorals': 'chest',\r\n    'back': 'back',\r\n    'lats': 'lats',\r\n    'traps': 'traps',\r\n    'shoulders': 'shoulders',\r\n    'deltoids': 'shoulders',\r\n    'biceps': 'biceps',\r\n    'triceps': 'triceps',\r\n    'forearms': 'forearms',\r\n    'legs': 'quadriceps',\r\n    'quadriceps': 'quadriceps',\r\n    'hamstrings': 'hamstrings',\r\n    'calves': 'calves',\r\n    'glutes': 'glutes',\r\n    'core': 'core',\r\n    'abs': 'core',\r\n    'abdominals': 'core',\r\n    'lower back': 'lower_back',\r\n    'full body': 'full_body'\r\n  };\r\n\r\n  const normalized = muscleMap[muscle.toLowerCase()];\r\n  return normalized || 'full_body';\r\n};\r\n\r\nconst ExerciseDatabasePicker: React.FC<ExerciseDatabasePickerProps> = ({\r\n  onClose,\r\n  onSelectExercises\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [customExercises, setCustomExercises] = useState<Exercise[]>([]);\r\n  const [combinedExercises, setCombinedExercises] = useState<Exercise[]>([]);\r\n  const [selectedExercises, setSelectedExercises] = useState<Set<string>>(new Set());\r\n\r\n  const categories = [\r\n    { id: '', name: 'All', icon: '💪' },\r\n    { id: 'chest', name: 'Chest', icon: '🫀' },\r\n    { id: 'back', name: 'Back', icon: '🔙' },\r\n    { id: 'legs', name: 'Legs', icon: '🦵' },\r\n    { id: 'shoulders', name: 'Shoulders', icon: '💪' },\r\n    { id: 'arms', name: 'Arms', icon: '💪' },\r\n    { id: 'core', name: 'Core', icon: '🎯' },\r\n  ];\r\n\r\n  // Load custom exercises from Firebase\r\n  useEffect(() => {\r\n    const loadCustomExercises = async () => {\r\n      if (!user) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        const exercisesRef = collection(db, 'exercises');\r\n        const q = query(exercisesRef, where('userId', '==', user.id));\r\n        const querySnapshot = await getDocs(q);\r\n        \r\n        const exercises: Exercise[] = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          exercises.push({\r\n            ...data,\r\n            id: doc.id,\r\n            primaryMuscles: data.primaryMuscles.map(normalizeMuscle),\r\n            type: data.type as Exercise['type'],\r\n            category: data.category as Exercise['category'],\r\n            defaultUnit: data.defaultUnit as Exercise['defaultUnit']\r\n          } as Exercise);\r\n        });\r\n        \r\n        setCustomExercises(exercises);\r\n      } catch (error) {\r\n        console.error('Error loading custom exercises:', error);\r\n        toast.error('Failed to load custom exercises');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadCustomExercises();\r\n  }, [user]);\r\n\r\n  // Combine exercises whenever custom exercises change\r\n  useEffect(() => {\r\n    const normalizedExercises: Exercise[] = [\r\n      ...allExercises.map(ex => ({\r\n        ...ex,\r\n        id: `default-${ex.name.replace(/\\s+/g, '-').toLowerCase()}`,\r\n        primaryMuscles: (ex.primaryMuscles || []).map(normalizeMuscle),\r\n        secondaryMuscles: [],\r\n        customExercise: false\r\n      })),\r\n      ...importedExercises.map(ex => ({\r\n        ...ex,\r\n        id: ex.id || `imported-${ex.name.replace(/\\s+/g, '-').toLowerCase()}`,\r\n        primaryMuscles: Array.isArray(ex.primaryMuscles) \r\n          ? ex.primaryMuscles.map(normalizeMuscle)\r\n          : [normalizeMuscle(String(ex.primaryMuscles))],\r\n        secondaryMuscles: [],\r\n        instructions: [ex.description || ''],\r\n        defaultUnit: (ex.type === 'cardio' ? 'time' : 'kg') as Exercise['defaultUnit'],\r\n        metrics: {\r\n          trackWeight: ex.type !== 'cardio',\r\n          trackReps: ex.type !== 'cardio',\r\n          trackTime: ex.type === 'cardio',\r\n          trackDistance: false,\r\n          trackRPE: true,\r\n        },\r\n        customExercise: false\r\n      }))\r\n    ];\r\n\r\n    setCombinedExercises([...normalizedExercises, ...customExercises]);\r\n  }, [customExercises]);\r\n\r\n  // Filter exercises based on search term and category\r\n  const filteredExercises = combinedExercises.filter(exercise => {\r\n    const primaryMuscles = exercise.primaryMuscles || [];\r\n    const matchesSearch = searchTerm === '' || \r\n      exercise.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      primaryMuscles.some(m => \r\n        m.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n\r\n    if (!selectedCategory) return matchesSearch;\r\n\r\n    switch (selectedCategory) {\r\n      case 'chest':\r\n        return matchesSearch && primaryMuscles.includes('chest');\r\n      case 'back':\r\n        return matchesSearch && primaryMuscles.some(m => ['back', 'lats', 'traps'].includes(m));\r\n      case 'legs':\r\n        return matchesSearch && primaryMuscles.some(m => ['quadriceps', 'hamstrings', 'calves', 'glutes'].includes(m));\r\n      case 'shoulders':\r\n        return matchesSearch && primaryMuscles.includes('shoulders');\r\n      case 'arms':\r\n        return matchesSearch && primaryMuscles.some(m => ['biceps', 'triceps', 'forearms'].includes(m));\r\n      case 'core':\r\n        return matchesSearch && primaryMuscles.includes('core');\r\n      default:\r\n        return matchesSearch;\r\n    }\r\n  });\r\n\r\n  const handleExerciseToggle = (exercise: Exercise) => {\r\n    const newSelected = new Set(selectedExercises);\r\n    if (newSelected.has(exercise.id)) {\r\n      newSelected.delete(exercise.id);\r\n    } else {\r\n      newSelected.add(exercise.id);\r\n    }\r\n    setSelectedExercises(newSelected);\r\n  };\r\n\r\n  const handleAddSelected = () => {\r\n    const exercisesToAdd = filteredExercises.filter(ex => selectedExercises.has(ex.id));\r\n    const exercisesWithSets = exercisesToAdd.map(exercise => ({\r\n      exercise,\r\n      sets: [\r\n        { reps: 8, weight: 0, difficulty: DifficultyCategory.NORMAL },\r\n        { reps: 8, weight: 0, difficulty: DifficultyCategory.NORMAL },\r\n        { reps: 8, weight: 0, difficulty: DifficultyCategory.NORMAL }\r\n      ] as ExerciseSet[]\r\n    }));\r\n    \r\n    onSelectExercises(exercisesWithSets);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 z-50\">\r\n      <div className=\"bg-[#23272F] rounded-lg w-full max-w-4xl h-5/6 flex flex-col shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"p-6 border-b border-white/10\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-white\">Exercise Database</h2>\r\n            <button \r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-white text-2xl\"\r\n            >\r\n              <XIcon className=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"relative mb-4\">\r\n            <SearchIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search exercises...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none\"\r\n            />\r\n          </div>\r\n\r\n          {/* Category Filter */}\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {categories.map((category) => (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => setSelectedCategory(category.id)}\r\n                className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\r\n                  selectedCategory === category.id\r\n                    ? 'bg-blue-600 text-white'\r\n                    : 'bg-[#181A20] text-gray-300 hover:bg-gray-600'\r\n                }`}\r\n              >\r\n                {category.icon} {category.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Exercise List */}\r\n        <div className=\"flex-1 overflow-y-auto p-6\">\r\n          {isLoading ? (\r\n            <div className=\"text-center text-gray-400 py-12\">\r\n              <div className=\"animate-spin w-8 h-8 border-2 border-blue-400/30 border-t-blue-400 rounded-full mx-auto mb-4\"></div>\r\n              Loading exercises...\r\n            </div>\r\n          ) : filteredExercises.length === 0 ? (\r\n            <div className=\"text-center text-gray-400 py-12\">\r\n              <p className=\"text-lg mb-2\">No exercises found</p>\r\n              <p className=\"text-sm\">Try adjusting your search or category filter</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {filteredExercises.map((exercise) => (\r\n                <div\r\n                  key={exercise.id}\r\n                  onClick={() => handleExerciseToggle(exercise)}\r\n                  className={`p-4 rounded-lg border cursor-pointer transition-all ${\r\n                    selectedExercises.has(exercise.id)\r\n                      ? 'bg-blue-600/20 border-blue-500'\r\n                      : 'bg-[#181A20] border-white/10 hover:border-white/20'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-2\">\r\n                    <h3 className=\"text-white font-medium text-sm leading-tight\">{exercise.name}</h3>\r\n                    {selectedExercises.has(exercise.id) && (\r\n                      <div className=\"w-5 h-5 bg-blue-600 rounded-full flex items-center justify-center flex-shrink-0 ml-2\">\r\n                        <span className=\"text-white text-xs\">✓</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex flex-wrap gap-1 mb-2\">\r\n                    {(exercise.primaryMuscles || []).slice(0, 2).map((muscle, idx) => (\r\n                      <span key={idx} className=\"px-2 py-1 text-xs bg-gray-700 text-gray-300 rounded\">\r\n                        {muscle}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs text-gray-400\">\r\n                    {exercise.type} • {exercise.category}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"p-6 border-t border-white/10\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"text-gray-400 text-sm\">\r\n              {selectedExercises.size} exercise{selectedExercises.size !== 1 ? 's' : ''} selected\r\n            </div>\r\n            <div className=\"flex gap-3\">\r\n              <button \r\n                onClick={onClose}\r\n                className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                onClick={handleAddSelected}\r\n                disabled={selectedExercises.size === 0}\r\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Add Selected ({selectedExercises.size})\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseDatabasePicker;\r\n","import React, { useState } from 'react';\r\nimport { Exercise } from '@/types/exercise';\r\nimport { ExerciseSet } from '@/types/sets';\r\nimport CategoryButton, { Category } from '@/features/exercises/CategoryButton';\r\nimport ExerciseSearch from '@/features/exercises/ExerciseSearch';\r\nimport { ActivityType } from '@/types/activityTypes';\r\nimport { getExercisesByActivityType, searchExercises } from '@/services/exerciseDatabaseService';\r\nimport UniversalExercisePicker from '@/components/activities/UniversalExercisePicker';\r\nimport { enrich as sportEnrich, collectFacets as sportCollectFacets, applyFilters as sportApplyFilters } from '@/utils/sportFilters';\r\nimport { CreateUniversalExerciseDialog } from '@/components/exercises/CreateUniversalExerciseDialog';\r\n\r\n/**\r\n * ProgramAddExerciseOptions\r\n * Mirrors LogOptions UI but returns selected exercises to SessionBuilder\r\n */\r\n\r\ntype ViewState = 'main' | 'resistance' | 'search' | 'universalSearch'\r\n  | 'sport' | 'stretching' | 'endurance' | 'speedAgility' | 'other';\r\n\r\ninterface ProgramAddExerciseOptionsProps {\r\n  onClose: () => void;\r\n  onAddExercises: (items: { exercise: Exercise; sets: ExerciseSet[] }[]) => void;\r\n  onOpenProgramPicker: () => void;\r\n  onOpenCopyPrevious: () => void;\r\n  onOpenHistory: () => void;\r\n  onOpenDatabase: () => void;\r\n}\r\n\r\nconst helperCategories: Category[] = [\r\n  { id: 'programs', name: 'Add from Program', icon: '📋', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-purple-600', textColor: 'text-white' },\r\n  { id: 'copyPrevious', name: 'Copy from Previous', icon: '📝', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-blue-600', textColor: 'text-white' },\r\n  { id: 'history', name: 'From History', icon: '🕒', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-green-600', textColor: 'text-white' },\r\n  { id: 'database', name: 'Exercise Database', icon: '🗄️', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-orange-600', textColor: 'text-white' }\r\n];\r\n\r\nconst muscleGroups: Category[] = [\r\n  { id: 'chest', name: 'Chest', icon: '💪', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-green-600', textColor: 'text-white' },\r\n  { id: 'back', name: 'Back', icon: '🔙', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-blue-600', textColor: 'text-white' },\r\n  { id: 'legs', name: 'Legs', icon: '🦵', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-yellow-600', textColor: 'text-white' },\r\n  { id: 'shoulders', name: 'Shoulders', icon: '🎯', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-cyan-600', textColor: 'text-white' },\r\n  { id: 'arms', name: 'Arms', icon: '💪', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-red-600', textColor: 'text-white' },\r\n  { id: 'core', name: 'Core', icon: '⭕', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-primary-600', textColor: 'text-white' },\r\n  { id: 'fullBody', name: 'Full-Body', icon: '👤', bgColor: 'bg-gymkeeper-light', iconBgColor: 'bg-orange-600', textColor: 'text-white' },\r\n];\r\n\r\nconst activityTypes = [\r\n  { id: 'resistance', name: 'Resistance Training', description: 'Weight lifting, strength training', icon: '🏋️‍♂️', bgColor: 'bg-gradient-to-r from-blue-500 to-blue-700', textColor: 'text-white', examples: 'Squats, Deadlifts, Bench Press' },\r\n  { id: 'sport', name: 'Sports', description: 'Team sports, competitions', icon: '⚽', bgColor: 'bg-gradient-to-r from-green-500 to-green-700', textColor: 'text-white', examples: 'Football, Basketball, Tennis' },\r\n  { id: 'stretching', name: 'Stretching & Flexibility', description: 'Mobility, yoga, flexibility', icon: '🧘‍♀️', bgColor: 'bg-gradient-to-r from-purple-500 to-purple-700', textColor: 'text-white', examples: 'Yoga, Static Stretches' },\r\n  { id: 'endurance', name: 'Endurance Training', description: 'Cardio, running, cycling', icon: '🏃‍♂️', bgColor: 'bg-gradient-to-r from-red-500 to-red-700', textColor: 'text-white', examples: 'Running, Cycling, Swimming' },\r\n  { id: 'speedAgility', name: 'Speed, Agility & Plyo', description: 'Sprints, jumps, change of direction', icon: '⚡', bgColor: 'bg-gradient-to-r from-yellow-500 to-amber-600', textColor: 'text-white', examples: 'Ladder, Sprints, Jumps' },\r\n  { id: 'other', name: 'Other Activities', description: 'Custom & misc activities', icon: '🎯', bgColor: 'bg-gradient-to-r from-gray-500 to-gray-700', textColor: 'text-white', examples: 'Meditation, Therapy' }\r\n];\r\n\r\nexport const ProgramAddExerciseOptions: React.FC<ProgramAddExerciseOptionsProps> = ({\r\n  onClose,\r\n  onAddExercises,\r\n  onOpenProgramPicker,\r\n  onOpenCopyPrevious,\r\n  onOpenHistory,\r\n  onOpenDatabase\r\n}) => {\r\n  const [view, setView] = useState<ViewState>('main');\r\n  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null);\r\n  const [universalSearchQuery, setUniversalSearchQuery] = useState('');\r\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\r\n  const [createDialogActivityType, setCreateDialogActivityType] = useState<ActivityType>(ActivityType.RESISTANCE);\r\n\r\n  if (view === 'universalSearch') {\r\n    const searchResults = searchExercises(universalSearchQuery);\r\n    \r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/90 backdrop-blur-sm flex flex-col z-50\">\r\n        <header className=\"sticky top-0 flex items-center justify-between p-4 bg-[#1a1a1a] border-b border-white/10\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button\r\n              onClick={() => setView('main')}\r\n              className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n              aria-label=\"Back\"\r\n            >\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\r\n            </button>\r\n            <h2 className=\"text-xl font-bold text-white\">🔍 Universal Search</h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" /></svg>\r\n          </button>\r\n        </header>\r\n        <main className=\"flex-1 overflow-y-auto overscroll-contain pb-safe min-h-0\">\r\n          <div className=\"max-w-md mx-auto p-4 space-y-6\">\r\n            <section className=\"space-y-3\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search all exercise databases...\"\r\n                  value={universalSearchQuery}\r\n                  onChange={(e) => setUniversalSearchQuery(e.target.value)}\r\n                  className=\"w-full px-4 py-3 pl-10 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  autoFocus\r\n                />\r\n                <svg className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg>\r\n              </div>\r\n            </section>\r\n            {universalSearchQuery && universalSearchQuery.length >= 2 && (\r\n              <section className=\"space-y-2\">\r\n                <h3 className=\"text-lg font-semibold text-white/90\">\r\n                  Search Results ({searchResults.length})\r\n                </h3>\r\n                <div className=\"space-y-2\">\r\n                  {searchResults.length > 0 ? (\r\n                    searchResults.slice(0, 20).map((exercise) => (\r\n                      <button\r\n                        key={exercise.id}\r\n                        onClick={() => {\r\n                          // Directly add exercise without set editor\r\n                          const exerciseWithSets = {\r\n                            exercise,\r\n                            sets: [] // Empty sets - will be logged during workout\r\n                          };\r\n                          onAddExercises([exerciseWithSets]);\r\n                        }}\r\n                        className=\"w-full text-left p-4 bg-[#1a1a1a] rounded-xl hover:bg-[#222] transition-colors border border-white/10\"\r\n                      >\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <h4 className=\"text-white font-medium\">{exercise.name}</h4>\r\n                            <p className=\"text-gray-400 text-sm mt-1\">\r\n                              {exercise.activityType && `${exercise.activityType} • `}\r\n                              {(exercise.primaryMuscles || []).join(', ') || 'No muscles specified'}\r\n                            </p>\r\n                            {exercise.description && (\r\n                              <p className=\"text-gray-500 text-xs mt-1 line-clamp-2\">\r\n                                {exercise.description}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-white/40\">\r\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                            </svg>\r\n                          </div>\r\n                        </div>\r\n                      </button>\r\n                    ))\r\n                  ) : universalSearchQuery.length > 1 ? (\r\n                    <div className=\"text-center py-8\">\r\n                      <p className=\"text-white/60\">No exercises found for \"{universalSearchQuery}\"</p>\r\n                      <p className=\"text-white/40 text-sm mt-2\">Try a different search term or create a new exercise</p>\r\n                      <button\r\n                        onClick={() => {\r\n                          setCreateDialogActivityType(ActivityType.RESISTANCE);\r\n                          setShowCreateDialog(true);\r\n                        }}\r\n                        className=\"mt-4 flex items-center justify-center gap-2 px-6 py-3 rounded-lg bg-purple-600 text-white font-medium hover:bg-purple-700 transition-colors mx-auto\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                          <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 00-1 1v5H4a1 1 0 100 2h5v5a1 1 0 102 0v-5h5a1 1 0 100-2h-5V4a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                        Create New Exercise\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8\">\r\n                      <p className=\"text-white/60\">Type at least 2 characters to search</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </section>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (view === 'search') {\r\n    return (\r\n      <ExerciseSearch\r\n        onClose={() => setView('resistance')}\r\n        category={selectedCategory}\r\n        onSelectExercise={(exercise) => {\r\n          // Directly add exercise without set editor\r\n          const exerciseToAdd = {\r\n            ...exercise,\r\n            id: exercise.id || `temp-${exercise.name.toLowerCase().replace(/\\s+/g, '-')}`\r\n          };\r\n          const exerciseWithSets = {\r\n            exercise: exerciseToAdd,\r\n            sets: [] // Empty sets - will be logged during workout\r\n          };\r\n          onAddExercises([exerciseWithSets]);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const renderActivityPicker = (activity: ActivityType, title: string, subtitle: string) => {\r\n    const data = getExercisesByActivityType(activity) as any[];\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/90 flex items-center justify-center p-4 z-50\">\r\n        <div className=\"bg-[#1a1a1a] rounded-xl w-full max-w-5xl max-h-[90vh] flex flex-col\">\r\n          <button\r\n            onClick={() => setView('main')}\r\n            className=\"absolute top-4 left-4 px-3 py-1 rounded-md bg-gray-800 text-gray-300 hover:text-white hover:bg-gray-700 text-sm\"\r\n          >← Back</button>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"absolute top-4 right-4 text-gray-400 hover:text-white\"\r\n          >✕</button>\r\n          <UniversalExercisePicker\r\n            data={data}\r\n            enrich={sportEnrich as any}\r\n            collectFacets={sportCollectFacets as any}\r\n            applyFilters={sportApplyFilters as any}\r\n            activityType={activity}\r\n            onSelect={(ex) => {\r\n              const exercise: Exercise = {\r\n                ...ex,\r\n                id: ex.id || `temp-${ex.name.toLowerCase().replace(/\\s+/g, '-')}`,\r\n                primaryMuscles: ex.primaryMuscles || [],\r\n                secondaryMuscles: ex.secondaryMuscles || [],\r\n                instructions: ex.instructions || [],\r\n                metrics: ex.metrics || {},\r\n                defaultUnit: ex.defaultUnit || 'time'\r\n              };\r\n              onAddExercises([{ exercise, sets: [] }]);\r\n              onClose();\r\n            }}\r\n            title={title}\r\n            subtitle={subtitle}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (view === 'sport') return renderActivityPicker(ActivityType.SPORT, 'Sports Activities', 'Browse sports & drills');\r\n  if (view === 'stretching') return renderActivityPicker(ActivityType.STRETCHING, 'Stretching & Flexibility', 'Mobility & flexibility exercises');\r\n  if (view === 'endurance') return renderActivityPicker(ActivityType.ENDURANCE, 'Endurance Training', 'Cardio & endurance activities');\r\n  if (view === 'speedAgility') return renderActivityPicker(ActivityType.SPEED_AGILITY, 'Speed & Agility', 'Plyometrics & agility drills');\r\n  if (view === 'other') return renderActivityPicker(ActivityType.OTHER, 'Other Activities', 'Miscellaneous & custom activities');\r\n\r\n  if (view === 'resistance') {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/90 backdrop-blur-sm flex flex-col z-50\">\r\n        <header className=\"sticky top-0 flex items-center justify-between p-4 bg-[#1a1a1a] border-b border-white/10\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button\r\n              onClick={() => setView('main')}\r\n              className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n              aria-label=\"Back\"\r\n            >\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\r\n            </button>\r\n            <h2 className=\"text-xl font-bold text-white\">🏋️‍♂️ Resistance Training</h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" /></svg>\r\n          </button>\r\n        </header>\r\n        <main className=\"flex-1 overflow-y-auto overscroll-contain pb-safe min-h-0\">\r\n          <div className=\"max-w-md mx-auto p-4 space-y-6 md:space-y-8\">\r\n            <section className=\"space-y-3\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search exercises...\"\r\n                  className=\"w-full px-4 py-3 pl-10 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  onFocus={() => { setSelectedCategory(null); setView('search'); }}\r\n                />\r\n                <svg className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg>\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  setCreateDialogActivityType(ActivityType.RESISTANCE);\r\n                  setShowCreateDialog(true);\r\n                }}\r\n                className=\"flex items-center justify-center gap-2 w-full px-4 py-3 rounded-lg bg-purple-600 text-white font-medium hover:bg-purple-700 transition-colors\"\r\n              >\r\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 00-1 1v5H4a1 1 0 100 2h5v5a1 1 0 102 0v-5h5a1 1 0 100-2h-5V4a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Create Custom Exercise\r\n              </button>\r\n            </section>\r\n            <section className=\"space-y-3 md:space-y-4\">\r\n              <h3 className=\"text-lg font-semibold text-white/90\">Muscle Groups</h3>\r\n              <div className=\"grid grid-cols-2 gap-3 sm:grid-cols-3 md:gap-4\">\r\n                {muscleGroups.map(category => (\r\n                  <CategoryButton\r\n                    key={category.id}\r\n                    category={category}\r\n                    onClick={() => { setSelectedCategory(category); setView('search'); }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/90 backdrop-blur-sm flex flex-col z-50\">\r\n      <header className=\"sticky top-0 flex items-center justify-between p-4 bg-[#1a1a1a] border-b border-white/10\">\r\n        <h2 className=\"text-xl font-bold text-white\">Add Exercise</h2>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" /></svg>\r\n        </button>\r\n      </header>\r\n      <main className=\"flex-1 overflow-y-auto overscroll-contain pb-safe min-h-0\">\r\n        <div className=\"max-w-md mx-auto p-4 space-y-6 md:space-y-8\">\r\n          <section className=\"space-y-3 md:space-y-4\">\r\n            <h3 className=\"text-lg font-semibold text-white/90\">Quick Add</h3>\r\n            <div className=\"grid grid-cols-2 gap-3 md:gap-4\">\r\n              {helperCategories.map(category => (\r\n                <CategoryButton\r\n                  key={category.id}\r\n                  category={category}\r\n                  onClick={() => {\r\n                    if (category.id === 'programs') onOpenProgramPicker();\r\n                    else if (category.id === 'copyPrevious') onOpenCopyPrevious();\r\n                    else if (category.id === 'history') onOpenHistory();\r\n                    else if (category.id === 'database') onOpenDatabase();\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </section>\r\n          <section className=\"space-y-3 md:space-y-4\">\r\n            <h3 className=\"text-lg font-semibold text-white/90\">Choose Activity Type</h3>\r\n            <div className=\"grid grid-cols-1 gap-3 md:gap-4\">\r\n              {activityTypes.map(a => (\r\n                <div key={a.id} className=\"space-y-2\">\r\n                  <div\r\n                    onClick={() => setView(a.id as ViewState)}\r\n                    className={`${a.bgColor} rounded-xl p-4 cursor-pointer transition-all duration-200 ease-in-out hover:scale-105 hover:shadow-lg active:scale-95 border border-white/10`}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"text-3xl\">{a.icon}</div>\r\n                      <div className=\"flex-1\">\r\n                        <h4 className={`font-semibold text-lg ${a.textColor}`}>{a.name}</h4>\r\n                        <p className={`text-sm opacity-90 ${a.textColor}`}>{a.description}</p>\r\n                        <p className={`text-xs opacity-75 mt-1 ${a.textColor}`}>{a.examples}</p>\r\n                      </div>\r\n                      <div className=\"text-white/60\"><svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg></div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCreateDialogActivityType(a.id as ActivityType);\r\n                      setShowCreateDialog(true);\r\n                    }}\r\n                    className=\"w-full flex items-center justify-center gap-2 px-4 py-2 rounded-lg bg-white/10 text-white/80 hover:bg-white/20 hover:text-white transition-colors text-sm\"\r\n                  >\r\n                    <svg className=\"w-4 h-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 00-1 1v5H4a1 1 0 100 2h5v5a1 1 0 102 0v-5h5a1 1 0 100-2h-5V4a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Create {a.name.split(' ')[0]} Exercise\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </main>\r\n      \r\n      {/* Create Exercise Dialog */}\r\n      {showCreateDialog && (\r\n        <CreateUniversalExerciseDialog\r\n          onClose={() => setShowCreateDialog(false)}\r\n          onSuccess={(_exerciseId) => {\r\n            setShowCreateDialog(false);\r\n            // Optionally handle the created exercise\r\n          }}\r\n          activityType={createDialogActivityType}\r\n          searchQuery={universalSearchQuery}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramAddExerciseOptions;\r\n","import React, { useState } from 'react';\r\nimport { Exercise } from '@/types/exercise';\r\nimport { ProgramSession, ProgramExercise } from '@/types/program';\r\nimport ExerciseHistoryPicker from './ExerciseHistoryPicker';\r\nimport ProgramExercisePicker from './ProgramExercisePicker';\r\nimport ExerciseDatabasePicker from './ExerciseDatabasePicker';\r\nimport ExerciseSearch from '@/features/exercises/ExerciseSearch';\r\nimport CopyFromPreviousSessionDialog from '@/features/exercises/CopyFromPreviousSessionDialog';\r\nimport ProgramAddExerciseOptions from './ProgramAddExerciseOptions';\r\n\r\ninterface SessionBuilderProps {\r\n  onClose: () => void;\r\n  onSave: (session: Omit<ProgramSession, 'userId'>) => void;\r\n  initialSession?: Partial<ProgramSession>;\r\n  sessionName?: string;\r\n}\r\n\r\ntype ViewState = 'main' | 'exerciseSelection' | 'search' | 'programPicker' | 'copyPrevious' | 'history' | 'database';\r\n\r\nconst SessionBuilder: React.FC<SessionBuilderProps> = ({\r\n  onClose,\r\n  onSave,\r\n  initialSession,\r\n  sessionName = ''\r\n}) => {\r\n  const [view, setView] = useState<ViewState>('main');\r\n\r\n  // Only store exercise references - no sets data\r\n  const [selectedExercises, setSelectedExercises] = useState<Exercise[]>(\r\n    initialSession?.exercises?.map(ex => ({\r\n      id: ex.id,\r\n      name: ex.name,\r\n      type: 'strength' as const,\r\n      category: 'compound' as const,\r\n      primaryMuscles: [],\r\n      secondaryMuscles: [],\r\n      instructions: [],\r\n      description: ex.notes || '',\r\n      defaultUnit: 'kg' as const,\r\n      metrics: { trackWeight: true, trackReps: true }\r\n    })) || []\r\n  );\r\n  \r\n  const [currentSessionName, setCurrentSessionName] = useState(initialSession?.name || sessionName);\r\n  const [sessionNotes, setSessionNotes] = useState(initialSession?.notes || '');\r\n  const [editingExerciseName, setEditingExerciseName] = useState<number | null>(null);\r\n  const [tempExerciseName, setTempExerciseName] = useState('');\r\n\r\n  // Exercise selection handlers - extract exercises from the objects\r\n  const handleAddFromHistory = (exercises: { exercise: Exercise; sets: any[] }[]) => {\r\n    const exercisesToAdd = exercises.map(item => item.exercise);\r\n    setSelectedExercises(prev => [...prev, ...exercisesToAdd]);\r\n    setView('main');\r\n  };\r\n\r\n  const handleAddFromPrograms = (exercises: { exercise: Exercise; sets: any[] }[]) => {\r\n    const exercisesToAdd = exercises.map(item => item.exercise);\r\n    setSelectedExercises(prev => [...prev, ...exercisesToAdd]);\r\n    setView('main');\r\n  };\r\n\r\n  const handleAddFromDatabase = (exercises: { exercise: Exercise; sets: any[] }[]) => {\r\n    const exercisesToAdd = exercises.map(item => item.exercise);\r\n    setSelectedExercises(prev => [...prev, ...exercisesToAdd]);\r\n    setView('main');\r\n  };\r\n\r\n\r\n  const handleExerciseSelect = (exercise: any) => {\r\n    // Just add the exercise directly without sets editor\r\n    setSelectedExercises(prev => [...prev, exercise]);\r\n    setView('main');\r\n  };\r\n\r\n\r\n\r\n  // Exercise management utilities\r\n  const handleRemoveExercise = (index: number) => {\r\n    setSelectedExercises(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const moveExercise = (index: number, direction: 'up' | 'down') => {\r\n    const result = [...selectedExercises];\r\n    if (direction === 'up' && index > 0) {\r\n      [result[index], result[index - 1]] = [result[index - 1], result[index]];\r\n    } else if (direction === 'down' && index < result.length - 1) {\r\n      [result[index], result[index + 1]] = [result[index + 1], result[index]];\r\n    }\r\n    setSelectedExercises(result);\r\n  };\r\n\r\n  const handleEditExerciseName = (exerciseIndex: number) => {\r\n    setTempExerciseName(selectedExercises[exerciseIndex].name);\r\n    setEditingExerciseName(exerciseIndex);\r\n  };\r\n\r\n  const handleSaveExerciseName = () => {\r\n    if (!tempExerciseName.trim()) {\r\n      alert('Exercise name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    if (editingExerciseName !== null) {\r\n      setSelectedExercises(prev => {\r\n        const newExercises = [...prev];\r\n        newExercises[editingExerciseName] = {\r\n          ...newExercises[editingExerciseName],\r\n          name: tempExerciseName.trim()\r\n        };\r\n        return newExercises;\r\n      });\r\n      setEditingExerciseName(null);\r\n      setTempExerciseName('');\r\n    }\r\n  };\r\n\r\n  const handleCancelExerciseNameEdit = () => {\r\n    setEditingExerciseName(null);\r\n    setTempExerciseName('');\r\n  };\r\n\r\n  const handleDuplicateExercise = (exerciseIndex: number) => {\r\n    const exerciseToDuplicate = selectedExercises[exerciseIndex];\r\n    const duplicatedExercise: Exercise = {\r\n      ...exerciseToDuplicate,\r\n      id: `${exerciseToDuplicate.id}-duplicate-${Date.now()}`,\r\n      name: `${exerciseToDuplicate.name} (Copy)`\r\n    };\r\n    \r\n    setSelectedExercises(prev => [\r\n      ...prev.slice(0, exerciseIndex + 1),\r\n      duplicatedExercise,\r\n      ...prev.slice(exerciseIndex + 1)\r\n    ]);\r\n  };\r\n\r\n  const handleSaveSession = async () => {\r\n    if (!currentSessionName.trim()) {\r\n      alert('Please enter a session name');\r\n      return;\r\n    }\r\n\r\n    if (selectedExercises.length === 0) {\r\n      alert('Please add at least one exercise');\r\n      return;\r\n    }\r\n\r\n    // Validate that all exercises have names\r\n    const exercisesWithoutNames = selectedExercises.filter(item => !item.name?.trim());\r\n    if (exercisesWithoutNames.length > 0) {\r\n      alert(`Please ensure all exercises have names. Found ${exercisesWithoutNames.length} exercise(s) without names.`);\r\n      return;\r\n    }\r\n\r\n    // Convert exercises to ProgramExercise format (exercise reference only)\r\n    const exercises: ProgramExercise[] = selectedExercises.map((item, index) => ({\r\n      id: item.id,\r\n      name: item.name,\r\n      order: index,\r\n      notes: item.description || ''\r\n    }));\r\n\r\n    const session: Omit<ProgramSession, 'userId'> = {\r\n      id: initialSession?.id || '',\r\n      name: currentSessionName.trim(),\r\n      exercises,\r\n      notes: sessionNotes.trim()\r\n    };\r\n\r\n    onSave(session);\r\n  };\r\n\r\n  // Conditional rendering for different views\r\n  if (view === 'programPicker') {\r\n    return (\r\n      <ProgramExercisePicker\r\n        onClose={() => setView('main')}\r\n        onSelectExercises={handleAddFromPrograms}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'copyPrevious') {\r\n    return (\r\n      <CopyFromPreviousSessionDialog\r\n        isOpen={true}\r\n        onClose={() => setView('main')}\r\n        currentDate={new Date()}\r\n        onExercisesSelected={(exercises) => {\r\n          // Convert ExerciseData to Exercise format\r\n          const exercisesToAdd = exercises.map(ex => ({\r\n            id: ex.id || `temp-${Date.now()}`,\r\n            name: ex.exerciseName,\r\n            type: 'strength' as const,\r\n            category: 'compound' as const,\r\n            primaryMuscles: [],\r\n            secondaryMuscles: [],\r\n            instructions: [],\r\n            description: '',\r\n            defaultUnit: 'kg' as const,\r\n            metrics: { trackWeight: true, trackReps: true }\r\n          }));\r\n          setSelectedExercises(prev => [...prev, ...exercisesToAdd]);\r\n          setView('main');\r\n        }}\r\n        userId=\"\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'history') {\r\n    return (\r\n      <ExerciseHistoryPicker\r\n        onClose={() => setView('main')}\r\n        onSelectExercises={handleAddFromHistory}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'database') {\r\n    return (\r\n      <ExerciseDatabasePicker\r\n        onClose={() => setView('main')}\r\n        onSelectExercises={handleAddFromDatabase}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'search') {\r\n    return (\r\n      <ExerciseSearch\r\n        onClose={() => setView('main')}\r\n        onSelectExercise={handleExerciseSelect}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (view === 'exerciseSelection') {\r\n    return (\r\n      <ProgramAddExerciseOptions\r\n        onClose={() => setView('main')}\r\n        onAddExercises={(items) => {\r\n          const exercisesToAdd = items.map(item => item.exercise);\r\n          setSelectedExercises(prev => [...prev, ...exercisesToAdd]);\r\n          setView('main');\r\n        }}\r\n        onOpenProgramPicker={() => setView('programPicker')}\r\n        onOpenCopyPrevious={() => setView('copyPrevious')}\r\n        onOpenHistory={() => setView('history')}\r\n        onOpenDatabase={() => setView('database')}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Main session builder view\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black z-50 flex flex-col\">\r\n      {/* Header */}\r\n      <header className=\"flex items-center justify-between px-4 py-4 bg-black/95 backdrop-blur-sm border-b border-white/10\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <button \r\n            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n            onClick={onClose}\r\n            aria-label=\"Close\"\r\n          >\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n          <h1 className=\"text-white text-xl font-medium\">Session Builder</h1>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={handleSaveSession}\r\n          className=\"px-4 py-2 bg-[#8B5CF6] hover:bg-[#7C3AED] text-white rounded-lg transition-colors font-medium\"\r\n        >\r\n          Save Session\r\n        </button>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-1 overflow-y-auto px-4 py-6\">\r\n        {/* Session Details */}\r\n        <div className=\"mb-6 space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Session Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={currentSessionName}\r\n              onChange={(e) => setCurrentSessionName(e.target.value)}\r\n              placeholder=\"Enter session name\"\r\n              className=\"w-full px-3 py-2 bg-[#2a2a2a] border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-[#8B5CF6]\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n              Session Notes (Optional)\r\n            </label>\r\n            <textarea\r\n              value={sessionNotes}\r\n              onChange={(e) => setSessionNotes(e.target.value)}\r\n              placeholder=\"Add any notes for this session...\"\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 bg-[#2a2a2a] border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-[#8B5CF6] resize-none\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Exercises Section */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-lg font-medium text-white\">Exercises</h2>\r\n            <button\r\n              onClick={() => setView('exerciseSelection')}\r\n              className=\"px-4 py-2 bg-[#2a2a2a] hover:bg-[#3a3a3a] text-white rounded-lg transition-colors border border-white/10\"\r\n            >\r\n              Add Exercise\r\n            </button>\r\n          </div>\r\n\r\n          {selectedExercises.length === 0 ? (\r\n            <div className=\"text-center py-12 bg-[#1a1a1a] rounded-xl border border-white/10\">\r\n              <div className=\"text-gray-500 mb-4\">\r\n                <svg className=\"w-16 h-16 mx-auto mb-4 opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                </svg>\r\n                No exercises added yet\r\n              </div>\r\n              <button\r\n                onClick={() => setView('exerciseSelection')}\r\n                className=\"px-6 py-3 bg-[#8B5CF6] hover:bg-[#7C3AED] text-white rounded-lg transition-colors font-medium\"\r\n              >\r\n                Add First Exercise\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-3\">\r\n              {selectedExercises.map((exercise, exerciseIndex) => (\r\n                <div key={`${exercise.id}-${exerciseIndex}`} className=\"bg-[#1a1a1a] rounded-xl border border-white/10 p-4\">\r\n                  {/* Exercise Header */}\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      {editingExerciseName === exerciseIndex ? (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={tempExerciseName}\r\n                            onChange={(e) => setTempExerciseName(e.target.value)}\r\n                            className=\"flex-1 px-2 py-1 bg-[#2a2a2a] border border-white/10 rounded text-white text-lg font-medium focus:outline-none focus:border-[#8B5CF6]\"\r\n                            autoFocus\r\n                          />\r\n                          <button\r\n                            onClick={handleSaveExerciseName}\r\n                            className=\"p-1 hover:bg-white/10 rounded text-green-400\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={handleCancelExerciseNameEdit}\r\n                            className=\"p-1 hover:bg-white/10 rounded text-red-400\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleEditExerciseName(exerciseIndex)}\r\n                          className=\"text-left hover:bg-white/5 rounded p-1 -m-1 transition-colors w-full\"\r\n                        >\r\n                          <h3 className=\"text-lg font-medium text-white\">{exercise.name}</h3>\r\n                          <p className=\"text-sm text-gray-400 mt-1\">Sets and reps will be logged during workout</p>\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {/* Exercise Controls */}\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {/* Move Up */}\r\n                      {exerciseIndex > 0 && (\r\n                        <button\r\n                          onClick={() => moveExercise(exerciseIndex, 'up')}\r\n                          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n                          title=\"Move up\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\r\n                          </svg>\r\n                        </button>\r\n                      )}\r\n                      \r\n                      {/* Move Down */}\r\n                      {exerciseIndex < selectedExercises.length - 1 && (\r\n                        <button\r\n                          onClick={() => moveExercise(exerciseIndex, 'down')}\r\n                          className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n                          title=\"Move down\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                          </svg>\r\n                        </button>\r\n                      )}\r\n                      \r\n                      {/* Duplicate */}\r\n                      <button\r\n                        onClick={() => handleDuplicateExercise(exerciseIndex)}\r\n                        className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-white\"\r\n                        title=\"Duplicate exercise\"\r\n                      >\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                        </svg>\r\n                      </button>\r\n                      \r\n                      {/* Delete */}\r\n                      <button\r\n                        onClick={() => handleRemoveExercise(exerciseIndex)}\r\n                        className=\"p-2 hover:bg-white/10 rounded-lg transition-colors text-gray-400 hover:text-red-400\"\r\n                        title=\"Remove exercise\"\r\n                      >\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionBuilder;\r\n","import React, { useState } from 'react';\r\nimport { Program, ProgramSession } from '@/types/program';\r\nimport { PlusIcon, BookmarkIcon, TrashIcon, PencilIcon } from '@heroicons/react/outline';\r\nimport SessionBuilder from './SessionBuilder';\r\nimport { auth } from '@/services/firebase/config';\r\n\r\ninterface ProgramBuilderProps {\r\n  onClose: () => void;\r\n  onSave: (program: Omit<Program, 'id' | 'userId'>) => void;\r\n  initialProgram?: Partial<Program>;\r\n}\r\n\r\nconst ProgramBuilder: React.FC<ProgramBuilderProps> = ({\r\n  onClose,\r\n  onSave,\r\n  initialProgram\r\n}) => {\r\n  const [programName, setProgramName] = useState(initialProgram?.name || '');\r\n  const [programDescription, setProgramDescription] = useState(initialProgram?.description || '');\r\n  const [programLevel, setProgramLevel] = useState<'beginner' | 'intermediate' | 'advanced'>(\r\n    initialProgram?.level || 'beginner'\r\n  );\r\n  const [sessions, setSessions] = useState<ProgramSession[]>(initialProgram?.sessions || []);\r\n  const [showSessionBuilder, setShowSessionBuilder] = useState(false);\r\n  const [editingSession, setEditingSession] = useState<ProgramSession | null>(null);\r\n  const [showSaveTemplate, setShowSaveTemplate] = useState(false);\r\n\r\n  const handleAddSession = () => {\r\n    setEditingSession(null);\r\n    setShowSessionBuilder(true);\r\n  };\r\n\r\n  const handleEditSession = (session: ProgramSession) => {\r\n    setEditingSession(session);\r\n    setShowSessionBuilder(true);\r\n  };\r\n\r\n  const handleSaveSession = (sessionData: Omit<ProgramSession, 'userId'>) => {\r\n    const user = auth.currentUser;\r\n    if (!user) return;\r\n\r\n    const session: ProgramSession = {\r\n      ...sessionData,\r\n      userId: user.uid\r\n    };\r\n\r\n    console.log('[ProgramBuilder] Saving session:', {\r\n      sessionId: session.id,\r\n      sessionName: session.name,\r\n      exerciseCount: session.exercises.length,\r\n      isEditing: !!editingSession\r\n    });\r\n\r\n    if (editingSession) {\r\n      // Update existing session\r\n      setSessions(prev => prev.map(s => s.id === editingSession.id ? session : s));\r\n      console.log('[ProgramBuilder] Updated existing session');\r\n    } else {\r\n      // Add new session\r\n      setSessions(prev => {\r\n        const newSessions = [...prev, session];\r\n        console.log('[ProgramBuilder] Added new session. Total sessions:', newSessions.length);\r\n        return newSessions;\r\n      });\r\n    }\r\n    \r\n    setShowSessionBuilder(false);\r\n    setEditingSession(null);\r\n  };\r\n\r\n  const handleDeleteSession = (sessionId: string) => {\r\n    if (confirm('Are you sure you want to delete this session?')) {\r\n      setSessions(prev => prev.filter(s => s.id !== sessionId));\r\n    }\r\n  };\r\n\r\n  const moveSession = (index: number, direction: 'up' | 'down') => {\r\n    const newSessions = [...sessions];\r\n    if (direction === 'up' && index > 0) {\r\n      [newSessions[index - 1], newSessions[index]] = [newSessions[index], newSessions[index - 1]];\r\n    } else if (direction === 'down' && index < sessions.length - 1) {\r\n      [newSessions[index], newSessions[index + 1]] = [newSessions[index + 1], newSessions[index]];\r\n    }\r\n    \r\n    // Update order property\r\n    newSessions.forEach((session, idx) => {\r\n      session.order = idx;\r\n    });\r\n    \r\n    setSessions(newSessions);\r\n  };\r\n\r\n  const saveAsTemplate = () => {\r\n    if (!programName.trim()) {\r\n      alert('Please enter a program name first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const templates = JSON.parse(localStorage.getItem('program-templates') || '[]');\r\n      const newTemplate = {\r\n        id: Date.now().toString(),\r\n        name: programName,\r\n        description: programDescription,\r\n        level: programLevel,\r\n        sessions: sessions,\r\n        createdAt: new Date().toISOString()\r\n      };\r\n      \r\n      templates.push(newTemplate);\r\n      localStorage.setItem('program-templates', JSON.stringify(templates));\r\n      setShowSaveTemplate(false);\r\n      alert('Program saved as template!');\r\n    } catch (error) {\r\n      console.error('Error saving template:', error);\r\n      alert('Failed to save template');\r\n    }\r\n  };\r\n\r\n  const handleSaveProgram = () => {\r\n    if (!programName.trim()) {\r\n      alert('Please enter a program name');\r\n      return;\r\n    }\r\n\r\n    if (sessions.length === 0) {\r\n      alert('Please add at least one session');\r\n      return;\r\n    }\r\n\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      alert('You must be logged in to save a program');\r\n      return;\r\n    }\r\n\r\n    console.log('[ProgramBuilder] Saving program:', {\r\n      name: programName,\r\n      sessionCount: sessions.length,\r\n      totalExercises: getTotalExercises(),\r\n      sessions: sessions.map(s => ({ id: s.id, name: s.name, exerciseCount: s.exercises.length }))\r\n    });\r\n\r\n    const program: Omit<Program, 'id' | 'userId'> = {\r\n      name: programName,\r\n      description: programDescription,\r\n      level: programLevel,\r\n      createdBy: user.uid,\r\n      createdAt: initialProgram?.createdAt || new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      sessions: sessions,\r\n      isPublic: initialProgram?.isPublic || false,\r\n      tags: initialProgram?.tags || []\r\n    };\r\n\r\n    onSave(program);\r\n  };\r\n\r\n  const getTotalExercises = () => {\r\n    return sessions.reduce((total, session) => total + session.exercises.length, 0);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-50\">\r\n        <div className=\"bg-[#23272F] rounded-xl w-full max-w-6xl h-5/6 flex flex-col shadow-2xl\">\r\n          {/* Header */}\r\n          <div className=\"p-6 border-b border-white/10\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h2 className=\"text-3xl font-bold text-white\">\r\n                {initialProgram ? 'Edit Program' : 'Create Program'}\r\n              </h2>\r\n              <button \r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-white text-2xl font-bold w-8 h-8 flex items-center justify-center transition-colors\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            {/* Program Details */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Program Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g., Push/Pull/Legs, Upper/Lower Split\"\r\n                  value={programName}\r\n                  onChange={(e) => setProgramName(e.target.value)}\r\n                  className=\"w-full px-4 py-3 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none text-lg\"\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                    Difficulty Level\r\n                  </label>\r\n                  <select\r\n                    value={programLevel}\r\n                    onChange={(e) => setProgramLevel(e.target.value as 'beginner' | 'intermediate' | 'advanced')}\r\n                    className=\"w-full px-4 py-3 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none\"\r\n                  >\r\n                    <option value=\"beginner\">🟢 Beginner</option>\r\n                    <option value=\"intermediate\">🟡 Intermediate</option>\r\n                    <option value=\"advanced\">🔴 Advanced</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"flex items-end\">\r\n                  <button\r\n                    onClick={() => setShowSaveTemplate(true)}\r\n                    disabled={sessions.length === 0}\r\n                    className=\"w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 transition-colors\"\r\n                  >\r\n                    <BookmarkIcon className=\"w-4 h-4\" />\r\n                    Save as Template\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Program Description (Optional)\r\n                </label>\r\n                <textarea\r\n                  placeholder=\"Describe your program goals, frequency, and notes...\"\r\n                  value={programDescription}\r\n                  onChange={(e) => setProgramDescription(e.target.value)}\r\n                  className=\"w-full px-4 py-3 bg-[#181A20] text-white rounded-lg border border-white/10 focus:border-blue-500 focus:outline-none resize-none\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sessions List */}\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            {sessions.length === 0 ? (\r\n              <div className=\"text-center text-gray-400 py-16\">\r\n                <PlusIcon className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\r\n                <h3 className=\"text-xl font-medium mb-2\">No sessions added yet</h3>\r\n                <p className=\"text-gray-500 mb-6\">Create sessions like \"Push Day\", \"Pull Day\", \"Leg Day\" etc.</p>\r\n                <button\r\n                  onClick={handleAddSession}\r\n                  className=\"px-8 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto text-lg font-medium transition-colors\"\r\n                >\r\n                  <PlusIcon className=\"w-5 h-5\" />\r\n                  Create First Session\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between mb-6\">\r\n                  <h3 className=\"text-xl font-semibold text-white\">\r\n                    Program Sessions ({sessions.length})\r\n                  </h3>\r\n                  <div className=\"text-sm text-gray-400\">\r\n                    {getTotalExercises()} exercises\r\n                  </div>\r\n                </div>\r\n                \r\n                {sessions.map((session, index) => (\r\n                  <div key={session.id} className=\"bg-[#181A20] rounded-xl p-5 border border-white/10 hover:border-white/20 transition-colors\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <div className=\"flex-1\">\r\n                        <h4 className=\"text-white font-semibold text-lg\">{session.name}</h4>\r\n                        <div className=\"text-sm text-gray-400 mt-1\">\r\n                          {session.exercises.length} exercise{session.exercises.length !== 1 ? 's' : ''} • \r\n                          {session.exercises.length} exercises\r\n                          {session.notes && (\r\n                            <span className=\"ml-2 text-gray-500\">• {session.notes}</span>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center gap-2\">\r\n                        <button\r\n                          onClick={() => moveSession(index, 'up')}\r\n                          disabled={index === 0}\r\n                          className=\"p-2 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors\"\r\n                          title=\"Move up\"\r\n                        >\r\n                          ↑\r\n                        </button>\r\n                        <button\r\n                          onClick={() => moveSession(index, 'down')}\r\n                          disabled={index === sessions.length - 1}\r\n                          className=\"p-2 text-gray-400 hover:text-white disabled:opacity-30 disabled:cursor-not-allowed transition-colors\"\r\n                          title=\"Move down\"\r\n                        >\r\n                          ↓\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleEditSession(session)}\r\n                          className=\"p-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n                          title=\"Edit session\"\r\n                        >\r\n                          <PencilIcon className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteSession(session.id)}\r\n                          className=\"p-2 text-red-400 hover:text-red-300 transition-colors\"\r\n                          title=\"Delete session\"\r\n                        >\r\n                          <TrashIcon className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Exercise Preview */}\r\n                    {session.exercises.length > 0 && (\r\n                      <div className=\"mt-4 p-4 bg-[#23272F] rounded-lg border border-white/5\">\r\n                        <div className=\"text-xs font-medium text-gray-400 mb-3\">EXERCISES:</div>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                          {session.exercises.slice(0, 6).map((exercise, idx) => (\r\n                            <div key={`${session.id}-exercise-${idx}-${exercise.name}`} className=\"text-sm text-gray-300 flex items-center gap-2\">\r\n                              <span className=\"w-2 h-2 bg-blue-500 rounded-full flex-shrink-0\"></span>\r\n                              <span className=\"truncate\">\r\n                                {exercise.name}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        {session.exercises.length > 6 && (\r\n                          <div className=\"text-xs text-gray-500 mt-3 text-center\">\r\n                            +{session.exercises.length - 6} more exercises...\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n\r\n                {/* Add Session Button */}\r\n                <div className=\"mt-8 text-center\">\r\n                  <button\r\n                    onClick={handleAddSession}\r\n                    className=\"px-8 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto text-lg font-medium transition-colors\"\r\n                  >\r\n                    <PlusIcon className=\"w-5 h-5\" />\r\n                    Add Another Session\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"p-6 border-t border-white/10 bg-[#1A1D23]\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-gray-400 text-sm\">\r\n                <div className=\"font-medium\">\r\n                  {sessions.length} session{sessions.length !== 1 ? 's' : ''} • {getTotalExercises()} exercises\r\n                </div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  💡 Create sessions first, then add exercises to each session\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-3\">\r\n                <button \r\n                  onClick={onClose}\r\n                  className=\"px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  onClick={handleSaveProgram}\r\n                  disabled={sessions.length === 0 || !programName.trim()}\r\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium\"\r\n                >\r\n                  {initialProgram ? 'Update Program' : 'Save Program'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Session Builder Modal */}\r\n      {showSessionBuilder && (\r\n        <SessionBuilder\r\n          onClose={() => {\r\n            setShowSessionBuilder(false);\r\n            setEditingSession(null);\r\n          }}\r\n          onSave={handleSaveSession}\r\n          initialSession={editingSession || undefined}\r\n          sessionName={editingSession ? editingSession.name : `Session ${sessions.length + 1}`}\r\n        />\r\n      )}\r\n\r\n      {/* Save Template Modal */}\r\n      {showSaveTemplate && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-60\">\r\n          <div className=\"bg-[#23272F] p-6 rounded-lg max-w-md w-full\">\r\n            <h3 className=\"text-white text-lg font-bold mb-4\">Save as Template</h3>\r\n            <p className=\"text-gray-400 text-sm mb-4\">\r\n              This will save the entire program with all sessions as a reusable template.\r\n            </p>\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={() => setShowSaveTemplate(false)}\r\n                className=\"flex-1 px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={saveAsTemplate}\r\n                className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n              >\r\n                Save Template\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgramBuilder;\r\n"],"names":["BookmarkIcon","props","svgRef","React.createElement","ForwardRef","React.forwardRef","PencilIcon","PlusIcon","TrashIcon","XIcon","normalizeMuscle","muscle","ExerciseDatabasePicker","onClose","onSelectExercises","user","useAuth","searchTerm","setSearchTerm","useState","selectedCategory","setSelectedCategory","isLoading","setIsLoading","customExercises","setCustomExercises","combinedExercises","setCombinedExercises","selectedExercises","setSelectedExercises","categories","useEffect","exercisesRef","collection","db","q","query","where","querySnapshot","getDocs","exercises","doc","data","error","toast","normalizedExercises","allExercises","ex","importedExercises","filteredExercises","exercise","primaryMuscles","matchesSearch","m","handleExerciseToggle","newSelected","handleAddSelected","exercisesWithSets","DifficultyCategory","jsxs","jsx","SearchIcon","e","category","idx","helperCategories","muscleGroups","activityTypes","ProgramAddExerciseOptions","onAddExercises","onOpenProgramPicker","onOpenCopyPrevious","onOpenHistory","onOpenDatabase","view","setView","universalSearchQuery","setUniversalSearchQuery","showCreateDialog","setShowCreateDialog","createDialogActivityType","setCreateDialogActivityType","ActivityType","searchResults","searchExercises","ExerciseSearch","exerciseWithSets","renderActivityPicker","activity","title","subtitle","getExercisesByActivityType","UniversalExercisePicker","sportEnrich","sportCollectFacets","sportApplyFilters","CategoryButton","CreateUniversalExerciseDialog","_exerciseId","SessionBuilder","onSave","initialSession","sessionName","_a","currentSessionName","setCurrentSessionName","sessionNotes","setSessionNotes","editingExerciseName","setEditingExerciseName","tempExerciseName","setTempExerciseName","handleAddFromHistory","exercisesToAdd","item","prev","handleAddFromPrograms","handleAddFromDatabase","handleExerciseSelect","handleRemoveExercise","index","_","i","moveExercise","direction","result","handleEditExerciseName","exerciseIndex","handleSaveExerciseName","newExercises","handleCancelExerciseNameEdit","handleDuplicateExercise","exerciseToDuplicate","duplicatedExercise","handleSaveSession","exercisesWithoutNames","session","ProgramExercisePicker","CopyFromPreviousSessionDialog","ExerciseHistoryPicker","items","ProgramBuilder","initialProgram","programName","setProgramName","programDescription","setProgramDescription","programLevel","setProgramLevel","sessions","setSessions","showSessionBuilder","setShowSessionBuilder","editingSession","setEditingSession","showSaveTemplate","setShowSaveTemplate","handleAddSession","handleEditSession","sessionData","auth","s","newSessions","handleDeleteSession","sessionId","moveSession","saveAsTemplate","templates","newTemplate","handleSaveProgram","getTotalExercises","program","total","Fragment"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}