// This file won't be automatically deployed, but it shows the recommended Firestore rules
// You'll need to copy these to your Firebase console if your access is being denied

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isUserAuthenticated(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User profiles - authenticated users can read their own profile
    match /users/{userId} {
      allow read: if isUserAuthenticated(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId && 
        request.resource.data.keys().hasAll(['email', 'firstName', 'lastName', 'role', 'createdAt', 'updatedAt']);
      allow update: if isUserAuthenticated(userId) && 
        request.resource.data.keys().hasAll(['email', 'firstName', 'lastName', 'role', 'updatedAt']);
      allow delete: if isUserAuthenticated(userId);
    }

    // Exercise logs
    match /exerciseLogs/{logId} {
      allow read: if isAuthenticated() && 
        (resource == null || resource.data.userId == request.auth.uid);
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['exerciseName', 'sets', 'timestamp', 'userId']) &&
        request.resource.data.sets is list;
      
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid &&
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['exerciseName', 'sets', 'timestamp', 'userId']) &&
        request.resource.data.sets is list;
      
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Standard exercises collection - readable by all authenticated users
    match /exercises/{exerciseId} {
      allow read: if isAuthenticated();
      // Only allow writes for custom exercises
      allow create, update: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Workouts
    match /workouts/{workoutId} {
      allow read, write: if isAuthenticated() && 
        (resource == null || resource.data.userId == request.auth.uid);
    }

    // Default: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
