// This file won't be automatically deployed, but it shows the recommended Firestore rules
// You'll need to copy these to your Firebase console if your access is being denied
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    match /exerciseLogs/{logId} {
      allow read: if isAuthenticated() && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /exercises/{exerciseId} {
      allow get: if isAuthenticated();
      allow list: if isAuthenticated();
      allow write: if false;
    }

    match /programs/{programId} {
      allow get: if isAuthenticated();
      allow list: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.createdAt is timestamp &&
        request.resource.data.updatedAt is timestamp;
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;

      match /sessions/{sessionId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && 
          request.resource.data.userId == request.auth.uid;
        allow update, delete: if isAuthenticated() && 
          get(/databases/$(database)/documents/programs/$(programId)).data.userId == request.auth.uid;
      }
    }
  }
}
